-- phpMyAdmin SQL Dump
-- version 4.0.6
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Apr 04, 2014 at 06:35 PM
-- Server version: 5.5.33
-- PHP Version: 5.5.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `staff_master`
--

-- --------------------------------------------------------

--
-- Table structure for table `attribute_availability`
--

CREATE TABLE `attribute_availability` (
  `availability_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`availability_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `attribute_groups`
--

CREATE TABLE `attribute_groups` (
  `group_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`group_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=7 ;

--
-- Dumping data for table `attribute_groups`
--

INSERT INTO `attribute_groups` (`group_id`, `name`) VALUES
(1, 'Management - Queensland'),
(2, 'Management - Victoria'),
(3, 'Management - NSW'),
(4, 'Promotional Staff'),
(5, 'Casual Workers'),
(6, 'Full Time Staff');

-- --------------------------------------------------------

--
-- Table structure for table `attribute_locations`
--

CREATE TABLE `attribute_locations` (
  `location_id` int(11) NOT NULL AUTO_INCREMENT,
  `parent_id` int(11) NOT NULL,
  `name` varchar(100) NOT NULL,
  `state` varchar(255) NOT NULL,
  PRIMARY KEY (`location_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=98 ;

--
-- Dumping data for table `attribute_locations`
--

INSERT INTO `attribute_locations` (`location_id`, `parent_id`, `name`, `state`) VALUES
(1, 0, 'Major Cities', ''),
(2, 0, 'Regional', ''),
(3, 1, 'Sydney', 'NSW'),
(4, 1, 'Melbourne', 'VIC'),
(5, 1, 'Brisbane', 'QLD'),
(6, 1, 'Gold Coast', 'QLD'),
(7, 1, 'Perth', 'WA'),
(8, 1, 'Adelaide', 'SA'),
(9, 1, 'Hobart', 'TAS'),
(10, 1, 'Darwin', 'NT'),
(11, 1, 'Canberra', 'ACT'),
(12, 2, 'NSW', 'NSW'),
(13, 2, 'VIC', 'VIC'),
(14, 2, 'QLD', 'QLD'),
(15, 2, 'WA', 'WA'),
(16, 2, 'SA', 'SA'),
(17, 2, 'TAS', 'TAS'),
(18, 2, 'ACT', 'ACT'),
(19, 2, 'NT', 'NT'),
(20, 3, 'CBD, Inner West & Eastern Suburbs', 'NSW'),
(21, 3, 'North Shore & Northen Beaches', 'NSW'),
(22, 3, 'North West & Hills District', 'NSW'),
(23, 3, 'Parramatta & Western Suburbs', 'NSW'),
(24, 3, 'Ryde & Macquarie Park', 'NSW'),
(25, 3, 'Southern Suburbs & Sutherland Shire', 'NSW'),
(26, 3, 'South West & M5 Corridor', 'NSW'),
(27, 4, 'CBD & Inner Suburbs', 'VIC'),
(28, 4, 'Bayside & South Eastern Suburbs', 'VIC'),
(29, 4, 'Eastern Suburbs', 'VIC'),
(30, 4, 'Northern Suburbs', 'VIC'),
(31, 4, 'Western Suburbs', 'VIC'),
(32, 5, 'CBD & Inner Suburbs', 'QLD'),
(33, 5, 'Bayside & Eastern Suburbs', 'QLD'),
(34, 5, 'Northern Suburbs', 'QLD'),
(35, 5, 'Southern Suburbs & Logan', 'QLD'),
(36, 5, 'Western Suburbs & Ipswich', 'QLD'),
(37, 7, 'CBD, Inner & Western Suburbs', 'WA'),
(38, 7, 'Eastern Suburbs', 'WA'),
(39, 7, 'Fremantle & Southern Suburbs', 'WA'),
(40, 7, 'Northern Suburbs & Joondalup', 'WA'),
(41, 7, 'Rockingham & Kwinana', 'WA'),
(42, 12, 'Albury Wodonga & Murray', 'NSW'),
(43, 12, 'Blue Mountains & Central West', 'NSW'),
(44, 12, 'Coffs Harbour & North Coast', 'NSW'),
(45, 12, 'Dubbo & Central NSW', 'NSW'),
(46, 12, 'Far West & North Central NSW', 'NSW'),
(47, 12, 'Gosford & Central Coast', 'NSW'),
(48, 12, 'Goulburn & Southern Tablelands', 'NSW'),
(49, 12, 'Lismore & Far North Coast', 'NSW'),
(50, 12, 'Newcastle, Maitland & Hunter', 'NSW'),
(51, 12, 'Port Macquarie & Mid North Coast', 'NSW'),
(52, 12, 'Richmond & Hawkesbury', 'NSW'),
(53, 12, 'Tamworth & North West NSW', 'NSW'),
(54, 12, 'Tumut, Southern Highlands & Snowy', 'NSW'),
(55, 12, 'Wagga Wagga & Riverina', 'NSW'),
(56, 12, 'Wollongong, Illawarra & South Coast', 'NSW'),
(57, 13, 'Bairnsdale & Gippsland', 'VIC'),
(58, 13, 'Ballarat & Central Highlands', 'VIC'),
(59, 13, 'Bendigo, Goldfields & Macedon Ranges', 'VIC'),
(60, 13, 'Geelong & Great Ocean Road', 'VIC'),
(61, 13, 'Horsham & Grampians', 'VIC'),
(62, 13, 'Mildura & Murray', 'VIC'),
(63, 13, 'Mornington Peninsula & Bass Coast', 'VIC'),
(64, 13, 'Shepparton & Goulburn Valley', 'VIC'),
(65, 13, 'Traralgon & La Trobe Valley', 'VIC'),
(66, 13, 'Yarra Valley & High Country', 'VIC'),
(67, 14, 'Bundaberg & Wide Bay Burnett', 'QLD'),
(68, 14, 'Cairns & Far North', 'QLD'),
(69, 14, 'Gladstone & Central QLD', 'QLD'),
(70, 14, 'Hervey Bay & Fraser Coast', 'QLD'),
(71, 14, 'Mackay & Coalfields', 'QLD'),
(72, 14, 'Mt lsa & Western QLD', 'QLD'),
(73, 14, 'Rockhampton & Capricorn Coast', 'QLD'),
(74, 14, 'Somerset & Lockery', 'QLD'),
(75, 14, 'Sunshine Coast', 'QLD'),
(76, 14, 'Toowoomba & Darling Downs', 'QLD'),
(77, 14, 'Townsville & Northern QLD', 'QLD'),
(78, 15, 'Albany & Great Southern', 'WA'),
(79, 15, 'Broome & Kimberley', 'WA'),
(80, 15, 'Bunbury & South West', 'WA'),
(81, 15, 'Geraldton, Gascoyne & Midwest', 'WA'),
(82, 15, 'Kalgoorlie, Goldfields & Esperance', 'WA'),
(83, 15, 'Mandurah & Peel', 'WA'),
(84, 15, 'Northam & Wheatbelt', 'WA'),
(85, 15, 'Port Hedland, Karratha & Pilbara', 'WA'),
(86, 16, 'Adelaide Hills & Barossa', 'SA'),
(87, 16, 'Coober Pedy & Outback SA', 'SA'),
(88, 16, 'Fleurieu Peninsula & Kangaroo Island', 'SA'),
(89, 16, 'Mt Gambier & Limestone Coast', 'SA'),
(90, 16, 'Riverland & Murray Mallee', 'SA'),
(91, 16, 'Whyalla & Eyre Peninsula', 'SA'),
(92, 16, 'Yorke Peninsula & Clare Valley', 'SA'),
(93, 17, 'Central & South East', 'TAS'),
(94, 17, 'Davonport & North West', 'TAS'),
(95, 17, 'Launceston & North East', 'TAS'),
(96, 19, 'Alice Springs & Central Australia', 'NT'),
(97, 19, 'Katherine & Northern Australia', 'NT');

-- --------------------------------------------------------

--
-- Table structure for table `attribute_payrates`
--

CREATE TABLE `attribute_payrates` (
  `payrate_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `status` tinyint(4) NOT NULL COMMENT '-1: deleted',
  PRIMARY KEY (`payrate_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;

--
-- Dumping data for table `attribute_payrates`
--

INSERT INTO `attribute_payrates` (`payrate_id`, `name`, `status`) VALUES
(1, 'Level 1', 0),
(2, 'Level 2', 0),
(3, 'Level 3', 0);

-- --------------------------------------------------------

--
-- Table structure for table `attribute_payrate_data`
--

CREATE TABLE `attribute_payrate_data` (
  `payrate_id` int(11) NOT NULL,
  `type` tinyint(4) NOT NULL COMMENT '0: staff, 1: client',
  `day` int(11) NOT NULL COMMENT '1: moday, 7: sunday',
  `hour` int(11) NOT NULL,
  `value` decimal(10,2) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `attribute_payrate_data`
--

INSERT INTO `attribute_payrate_data` (`payrate_id`, `type`, `day`, `hour`, `value`) VALUES
(2, 0, 1, 0, 22.00),
(2, 0, 1, 1, 22.00),
(2, 0, 1, 2, 22.00),
(2, 0, 1, 3, 22.00),
(2, 0, 1, 4, 22.00),
(2, 0, 1, 5, 22.00),
(2, 0, 1, 6, 22.00),
(2, 0, 1, 7, 22.00),
(2, 0, 1, 8, 22.00),
(2, 0, 1, 9, 22.00),
(2, 0, 1, 10, 22.00),
(2, 0, 1, 11, 22.00),
(2, 0, 1, 12, 22.00),
(2, 0, 1, 13, 22.00),
(2, 0, 1, 14, 22.00),
(2, 0, 1, 15, 22.00),
(2, 0, 1, 16, 22.00),
(2, 0, 1, 17, 22.00),
(2, 0, 1, 18, 22.00),
(2, 0, 1, 19, 22.00),
(2, 0, 1, 20, 22.00),
(2, 0, 1, 21, 22.00),
(2, 0, 1, 22, 22.00),
(2, 0, 1, 23, 22.00),
(2, 0, 2, 0, 22.00),
(2, 0, 2, 1, 22.00),
(2, 0, 2, 2, 22.00),
(2, 0, 2, 3, 22.00),
(2, 0, 2, 4, 22.00),
(2, 0, 2, 5, 22.00),
(2, 0, 2, 6, 22.00),
(2, 0, 2, 7, 22.00),
(2, 0, 2, 8, 22.00),
(2, 0, 2, 9, 22.00),
(2, 0, 2, 10, 22.00),
(2, 0, 2, 11, 22.00),
(2, 0, 2, 12, 22.00),
(2, 0, 2, 13, 22.00),
(2, 0, 2, 14, 22.00),
(2, 0, 2, 15, 22.00),
(2, 0, 2, 16, 22.00),
(2, 0, 2, 17, 22.00),
(2, 0, 2, 18, 22.00),
(2, 0, 2, 19, 22.00),
(2, 0, 2, 20, 22.00),
(2, 0, 2, 21, 22.00),
(2, 0, 2, 22, 22.00),
(2, 0, 2, 23, 22.00),
(2, 0, 3, 0, 22.00),
(2, 0, 3, 1, 22.00),
(2, 0, 3, 2, 22.00),
(2, 0, 3, 3, 22.00),
(2, 0, 3, 4, 22.00),
(2, 0, 3, 5, 22.00),
(2, 0, 3, 6, 22.00),
(2, 0, 3, 7, 22.00),
(2, 0, 3, 8, 22.00),
(2, 0, 3, 9, 22.00),
(2, 0, 3, 10, 22.00),
(2, 0, 3, 11, 22.00),
(2, 0, 3, 12, 22.00),
(2, 0, 3, 13, 22.00),
(2, 0, 3, 14, 22.00),
(2, 0, 3, 15, 22.00),
(2, 0, 3, 16, 22.00),
(2, 0, 3, 17, 22.00),
(2, 0, 3, 18, 22.00),
(2, 0, 3, 19, 22.00),
(2, 0, 3, 20, 22.00),
(2, 0, 3, 21, 22.00),
(2, 0, 3, 22, 22.00),
(2, 0, 3, 23, 22.00),
(2, 0, 4, 0, 22.00),
(2, 0, 4, 1, 22.00),
(2, 0, 4, 2, 22.00),
(2, 0, 4, 3, 22.00),
(2, 0, 4, 4, 22.00),
(2, 0, 4, 5, 22.00),
(2, 0, 4, 6, 22.00),
(2, 0, 4, 7, 22.00),
(2, 0, 4, 8, 22.00),
(2, 0, 4, 9, 22.00),
(2, 0, 4, 10, 22.00),
(2, 0, 4, 11, 22.00),
(2, 0, 4, 12, 22.00),
(2, 0, 4, 13, 22.00),
(2, 0, 4, 14, 22.00),
(2, 0, 4, 15, 22.00),
(2, 0, 4, 16, 22.00),
(2, 0, 4, 17, 22.00),
(2, 0, 4, 18, 22.00),
(2, 0, 4, 19, 22.00),
(2, 0, 4, 20, 22.00),
(2, 0, 4, 21, 22.00),
(2, 0, 4, 22, 22.00),
(2, 0, 4, 23, 22.00),
(2, 0, 5, 0, 22.00),
(2, 0, 5, 1, 22.00),
(2, 0, 5, 2, 22.00),
(2, 0, 5, 3, 22.00),
(2, 0, 5, 4, 22.00),
(2, 0, 5, 5, 22.00),
(2, 0, 5, 6, 22.00),
(2, 0, 5, 7, 22.00),
(2, 0, 5, 8, 22.00),
(2, 0, 5, 9, 22.00),
(2, 0, 5, 10, 22.00),
(2, 0, 5, 11, 22.00),
(2, 0, 5, 12, 22.00),
(2, 0, 5, 13, 22.00),
(2, 0, 5, 14, 22.00),
(2, 0, 5, 15, 22.00),
(2, 0, 5, 16, 22.00),
(2, 0, 5, 17, 22.00),
(2, 0, 5, 18, 22.00),
(2, 0, 5, 19, 22.00),
(2, 0, 5, 20, 22.00),
(2, 0, 5, 21, 22.00),
(2, 0, 5, 22, 22.00),
(2, 0, 5, 23, 22.00),
(2, 0, 6, 0, 26.00),
(2, 0, 6, 1, 26.00),
(2, 0, 6, 2, 26.00),
(2, 0, 6, 3, 26.00),
(2, 0, 6, 4, 26.00),
(2, 0, 6, 5, 26.00),
(2, 0, 6, 6, 26.00),
(2, 0, 6, 7, 26.00),
(2, 0, 6, 8, 26.00),
(2, 0, 6, 9, 26.00),
(2, 0, 6, 10, 26.00),
(2, 0, 6, 11, 26.00),
(2, 0, 6, 12, 26.00),
(2, 0, 6, 13, 26.00),
(2, 0, 6, 14, 26.00),
(2, 0, 6, 15, 26.00),
(2, 0, 6, 16, 26.00),
(2, 0, 6, 17, 26.00),
(2, 0, 6, 18, 26.00),
(2, 0, 6, 19, 26.00),
(2, 0, 6, 20, 26.00),
(2, 0, 6, 21, 26.00),
(2, 0, 6, 22, 26.00),
(2, 0, 6, 23, 26.00),
(2, 0, 7, 0, 30.00),
(2, 0, 7, 1, 30.00),
(2, 0, 7, 2, 30.00),
(2, 0, 7, 3, 30.00),
(2, 0, 7, 4, 30.00),
(2, 0, 7, 5, 30.00),
(2, 0, 7, 6, 30.00),
(2, 0, 7, 7, 30.00),
(2, 0, 7, 8, 30.00),
(2, 0, 7, 9, 30.00),
(2, 0, 7, 10, 30.00),
(2, 0, 7, 11, 30.00),
(2, 0, 7, 12, 30.00),
(2, 0, 7, 13, 30.00),
(2, 0, 7, 14, 30.00),
(2, 0, 7, 15, 30.00),
(2, 0, 7, 16, 30.00),
(2, 0, 7, 17, 30.00),
(2, 0, 7, 18, 30.00),
(2, 0, 7, 19, 30.00),
(2, 0, 7, 20, 30.00),
(2, 0, 7, 21, 30.00),
(2, 0, 7, 22, 30.00),
(2, 0, 7, 23, 30.00),
(2, 1, 1, 0, 35.00),
(2, 1, 1, 1, 35.00),
(2, 1, 1, 2, 35.00),
(2, 1, 1, 3, 35.00),
(2, 1, 1, 4, 35.00),
(2, 1, 1, 5, 35.00),
(2, 1, 1, 6, 35.00),
(2, 1, 1, 7, 35.00),
(2, 1, 1, 8, 35.00),
(2, 1, 1, 9, 35.00),
(2, 1, 1, 10, 35.00),
(2, 1, 1, 11, 35.00),
(2, 1, 1, 12, 35.00),
(2, 1, 1, 13, 35.00),
(2, 1, 1, 14, 35.00),
(2, 1, 1, 15, 35.00),
(2, 1, 1, 16, 35.00),
(2, 1, 1, 17, 35.00),
(2, 1, 1, 18, 35.00),
(2, 1, 1, 19, 35.00),
(2, 1, 1, 20, 35.00),
(2, 1, 1, 21, 35.00),
(2, 1, 1, 22, 35.00),
(2, 1, 1, 23, 35.00),
(2, 1, 2, 0, 35.00),
(2, 1, 2, 1, 35.00),
(2, 1, 2, 2, 35.00),
(2, 1, 2, 3, 35.00),
(2, 1, 2, 4, 35.00),
(2, 1, 2, 5, 35.00),
(2, 1, 2, 6, 35.00),
(2, 1, 2, 7, 35.00),
(2, 1, 2, 8, 35.00),
(2, 1, 2, 9, 35.00),
(2, 1, 2, 10, 35.00),
(2, 1, 2, 11, 35.00),
(2, 1, 2, 12, 35.00),
(2, 1, 2, 13, 35.00),
(2, 1, 2, 14, 35.00),
(2, 1, 2, 15, 35.00),
(2, 1, 2, 16, 35.00),
(2, 1, 2, 17, 35.00),
(2, 1, 2, 18, 35.00),
(2, 1, 2, 19, 35.00),
(2, 1, 2, 20, 35.00),
(2, 1, 2, 21, 35.00),
(2, 1, 2, 22, 35.00),
(2, 1, 2, 23, 35.00),
(2, 1, 3, 0, 35.00),
(2, 1, 3, 1, 35.00),
(2, 1, 3, 2, 35.00),
(2, 1, 3, 3, 35.00),
(2, 1, 3, 4, 35.00),
(2, 1, 3, 5, 35.00),
(2, 1, 3, 6, 35.00),
(2, 1, 3, 7, 35.00),
(2, 1, 3, 8, 35.00),
(2, 1, 3, 9, 35.00),
(2, 1, 3, 10, 35.00),
(2, 1, 3, 11, 35.00),
(2, 1, 3, 12, 35.00),
(2, 1, 3, 13, 35.00),
(2, 1, 3, 14, 35.00),
(2, 1, 3, 15, 35.00),
(2, 1, 3, 16, 35.00),
(2, 1, 3, 17, 35.00),
(2, 1, 3, 18, 35.00),
(2, 1, 3, 19, 35.00),
(2, 1, 3, 20, 35.00),
(2, 1, 3, 21, 35.00),
(2, 1, 3, 22, 35.00),
(2, 1, 3, 23, 35.00),
(2, 1, 4, 0, 35.00),
(2, 1, 4, 1, 35.00),
(2, 1, 4, 2, 35.00),
(2, 1, 4, 3, 35.00),
(2, 1, 4, 4, 35.00),
(2, 1, 4, 5, 35.00),
(2, 1, 4, 6, 35.00),
(2, 1, 4, 7, 35.00),
(2, 1, 4, 8, 35.00),
(2, 1, 4, 9, 35.00),
(2, 1, 4, 10, 35.00),
(2, 1, 4, 11, 35.00),
(2, 1, 4, 12, 35.00),
(2, 1, 4, 13, 35.00),
(2, 1, 4, 14, 35.00),
(2, 1, 4, 15, 35.00),
(2, 1, 4, 16, 35.00),
(2, 1, 4, 17, 35.00),
(2, 1, 4, 18, 35.00),
(2, 1, 4, 19, 35.00),
(2, 1, 4, 20, 35.00),
(2, 1, 4, 21, 35.00),
(2, 1, 4, 22, 35.00),
(2, 1, 4, 23, 35.00),
(2, 1, 5, 0, 35.00),
(2, 1, 5, 1, 35.00),
(2, 1, 5, 2, 35.00),
(2, 1, 5, 3, 35.00),
(2, 1, 5, 4, 35.00),
(2, 1, 5, 5, 35.00),
(2, 1, 5, 6, 35.00),
(2, 1, 5, 7, 35.00),
(2, 1, 5, 8, 35.00),
(2, 1, 5, 9, 35.00),
(2, 1, 5, 10, 35.00),
(2, 1, 5, 11, 35.00),
(2, 1, 5, 12, 35.00),
(2, 1, 5, 13, 35.00),
(2, 1, 5, 14, 35.00),
(2, 1, 5, 15, 35.00),
(2, 1, 5, 16, 35.00),
(2, 1, 5, 17, 35.00),
(2, 1, 5, 18, 35.00),
(2, 1, 5, 19, 35.00),
(2, 1, 5, 20, 35.00),
(2, 1, 5, 21, 35.00),
(2, 1, 5, 22, 35.00),
(2, 1, 5, 23, 35.00),
(2, 1, 6, 0, 40.00),
(2, 1, 6, 1, 40.00),
(2, 1, 6, 2, 40.00),
(2, 1, 6, 3, 40.00),
(2, 1, 6, 4, 40.00),
(2, 1, 6, 5, 40.00),
(2, 1, 6, 6, 40.00),
(2, 1, 6, 7, 40.00),
(2, 1, 6, 8, 40.00),
(2, 1, 6, 9, 40.00),
(2, 1, 6, 10, 40.00),
(2, 1, 6, 11, 40.00),
(2, 1, 6, 12, 40.00),
(2, 1, 6, 13, 40.00),
(2, 1, 6, 14, 40.00),
(2, 1, 6, 15, 40.00),
(2, 1, 6, 16, 40.00),
(2, 1, 6, 17, 40.00),
(2, 1, 6, 18, 40.00),
(2, 1, 6, 19, 40.00),
(2, 1, 6, 20, 40.00),
(2, 1, 6, 21, 40.00),
(2, 1, 6, 22, 40.00),
(2, 1, 6, 23, 40.00),
(2, 1, 7, 0, 45.00),
(2, 1, 7, 1, 45.00),
(2, 1, 7, 2, 45.00),
(2, 1, 7, 3, 45.00),
(2, 1, 7, 4, 45.00),
(2, 1, 7, 5, 45.00),
(2, 1, 7, 6, 45.00),
(2, 1, 7, 7, 45.00),
(2, 1, 7, 8, 45.00),
(2, 1, 7, 9, 45.00),
(2, 1, 7, 10, 45.00),
(2, 1, 7, 11, 45.00),
(2, 1, 7, 12, 45.00),
(2, 1, 7, 13, 45.00),
(2, 1, 7, 14, 45.00),
(2, 1, 7, 15, 45.00),
(2, 1, 7, 16, 45.00),
(2, 1, 7, 17, 45.00),
(2, 1, 7, 18, 45.00),
(2, 1, 7, 19, 45.00),
(2, 1, 7, 20, 45.00),
(2, 1, 7, 21, 45.00),
(2, 1, 7, 22, 45.00),
(2, 1, 7, 23, 45.00),
(3, 0, 1, 0, 50.00),
(3, 0, 1, 1, 50.00),
(3, 0, 1, 2, 50.00),
(3, 0, 1, 3, 50.00),
(3, 0, 1, 4, 50.00),
(3, 0, 1, 5, 50.00),
(3, 0, 1, 6, 50.00),
(3, 0, 1, 7, 50.00),
(3, 0, 1, 8, 50.00),
(3, 0, 1, 9, 50.00),
(3, 0, 1, 10, 50.00),
(3, 0, 1, 11, 50.00),
(3, 0, 1, 12, 50.00),
(3, 0, 1, 13, 50.00),
(3, 0, 1, 14, 50.00),
(3, 0, 1, 15, 50.00),
(3, 0, 1, 16, 50.00),
(3, 0, 1, 17, 50.00),
(3, 0, 1, 18, 50.00),
(3, 0, 1, 19, 50.00),
(3, 0, 1, 20, 50.00),
(3, 0, 1, 21, 50.00),
(3, 0, 1, 22, 50.00),
(3, 0, 1, 23, 50.00),
(3, 0, 2, 0, 50.00),
(3, 0, 2, 1, 50.00),
(3, 0, 2, 2, 50.00),
(3, 0, 2, 3, 50.00),
(3, 0, 2, 4, 50.00),
(3, 0, 2, 5, 50.00),
(3, 0, 2, 6, 50.00),
(3, 0, 2, 7, 50.00),
(3, 0, 2, 8, 50.00),
(3, 0, 2, 9, 50.00),
(3, 0, 2, 10, 50.00),
(3, 0, 2, 11, 50.00),
(3, 0, 2, 12, 50.00),
(3, 0, 2, 13, 50.00),
(3, 0, 2, 14, 50.00),
(3, 0, 2, 15, 50.00),
(3, 0, 2, 16, 50.00),
(3, 0, 2, 17, 50.00),
(3, 0, 2, 18, 50.00),
(3, 0, 2, 19, 50.00),
(3, 0, 2, 20, 50.00),
(3, 0, 2, 21, 50.00),
(3, 0, 2, 22, 50.00),
(3, 0, 2, 23, 50.00),
(3, 0, 3, 0, 50.00),
(3, 0, 3, 1, 50.00),
(3, 0, 3, 2, 50.00),
(3, 0, 3, 3, 50.00),
(3, 0, 3, 4, 50.00),
(3, 0, 3, 5, 50.00),
(3, 0, 3, 6, 50.00),
(3, 0, 3, 7, 50.00),
(3, 0, 3, 8, 50.00),
(3, 0, 3, 9, 50.00),
(3, 0, 3, 10, 50.00),
(3, 0, 3, 11, 50.00),
(3, 0, 3, 12, 50.00),
(3, 0, 3, 13, 50.00),
(3, 0, 3, 14, 50.00),
(3, 0, 3, 15, 50.00),
(3, 0, 3, 16, 50.00),
(3, 0, 3, 17, 50.00),
(3, 0, 3, 18, 50.00),
(3, 0, 3, 19, 50.00),
(3, 0, 3, 20, 50.00),
(3, 0, 3, 21, 50.00),
(3, 0, 3, 22, 50.00),
(3, 0, 3, 23, 50.00),
(3, 0, 4, 0, 50.00),
(3, 0, 4, 1, 50.00),
(3, 0, 4, 2, 50.00),
(3, 0, 4, 3, 50.00),
(3, 0, 4, 4, 50.00),
(3, 0, 4, 5, 50.00),
(3, 0, 4, 6, 50.00),
(3, 0, 4, 7, 50.00),
(3, 0, 4, 8, 50.00),
(3, 0, 4, 9, 50.00),
(3, 0, 4, 10, 50.00),
(3, 0, 4, 11, 50.00),
(3, 0, 4, 12, 50.00),
(3, 0, 4, 13, 50.00),
(3, 0, 4, 14, 50.00),
(3, 0, 4, 15, 50.00),
(3, 0, 4, 16, 50.00),
(3, 0, 4, 17, 50.00),
(3, 0, 4, 18, 50.00),
(3, 0, 4, 19, 50.00),
(3, 0, 4, 20, 50.00),
(3, 0, 4, 21, 50.00),
(3, 0, 4, 22, 50.00),
(3, 0, 4, 23, 50.00),
(3, 0, 5, 0, 50.00),
(3, 0, 5, 1, 50.00),
(3, 0, 5, 2, 50.00),
(3, 0, 5, 3, 50.00),
(3, 0, 5, 4, 50.00),
(3, 0, 5, 5, 50.00),
(3, 0, 5, 6, 50.00),
(3, 0, 5, 7, 50.00),
(3, 0, 5, 8, 50.00),
(3, 0, 5, 9, 50.00),
(3, 0, 5, 10, 50.00),
(3, 0, 5, 11, 50.00),
(3, 0, 5, 12, 50.00),
(3, 0, 5, 13, 50.00),
(3, 0, 5, 14, 50.00),
(3, 0, 5, 15, 50.00),
(3, 0, 5, 16, 50.00),
(3, 0, 5, 17, 50.00),
(3, 0, 5, 18, 50.00),
(3, 0, 5, 19, 50.00),
(3, 0, 5, 20, 50.00),
(3, 0, 5, 21, 50.00),
(3, 0, 5, 22, 50.00),
(3, 0, 5, 23, 50.00),
(3, 0, 6, 0, 50.00),
(3, 0, 6, 1, 50.00),
(3, 0, 6, 2, 50.00),
(3, 0, 6, 3, 50.00),
(3, 0, 6, 4, 50.00),
(3, 0, 6, 5, 50.00),
(3, 0, 6, 6, 50.00),
(3, 0, 6, 7, 50.00),
(3, 0, 6, 8, 50.00),
(3, 0, 6, 9, 50.00),
(3, 0, 6, 10, 50.00),
(3, 0, 6, 11, 50.00),
(3, 0, 6, 12, 50.00),
(3, 0, 6, 13, 50.00),
(3, 0, 6, 14, 50.00),
(3, 0, 6, 15, 50.00),
(3, 0, 6, 16, 50.00),
(3, 0, 6, 17, 50.00),
(3, 0, 6, 18, 50.00),
(3, 0, 6, 19, 50.00),
(3, 0, 6, 20, 50.00),
(3, 0, 6, 21, 50.00),
(3, 0, 6, 22, 50.00),
(3, 0, 6, 23, 50.00),
(3, 0, 7, 0, 50.00),
(3, 0, 7, 1, 50.00),
(3, 0, 7, 2, 50.00),
(3, 0, 7, 3, 50.00),
(3, 0, 7, 4, 50.00),
(3, 0, 7, 5, 50.00),
(3, 0, 7, 6, 50.00),
(3, 0, 7, 7, 50.00),
(3, 0, 7, 8, 50.00),
(3, 0, 7, 9, 50.00),
(3, 0, 7, 10, 50.00),
(3, 0, 7, 11, 50.00),
(3, 0, 7, 12, 50.00),
(3, 0, 7, 13, 50.00),
(3, 0, 7, 14, 50.00),
(3, 0, 7, 15, 50.00),
(3, 0, 7, 16, 50.00),
(3, 0, 7, 17, 50.00),
(3, 0, 7, 18, 50.00),
(3, 0, 7, 19, 50.00),
(3, 0, 7, 20, 50.00),
(3, 0, 7, 21, 50.00),
(3, 0, 7, 22, 50.00),
(3, 0, 7, 23, 50.00),
(3, 1, 1, 0, 100.00),
(3, 1, 1, 1, 100.00),
(3, 1, 1, 2, 100.00),
(3, 1, 1, 3, 100.00),
(3, 1, 1, 4, 100.00),
(3, 1, 1, 5, 100.00),
(3, 1, 1, 6, 100.00),
(3, 1, 1, 7, 100.00),
(3, 1, 1, 8, 100.00),
(3, 1, 1, 9, 100.00),
(3, 1, 1, 10, 100.00),
(3, 1, 1, 11, 100.00),
(3, 1, 1, 12, 100.00),
(3, 1, 1, 13, 100.00),
(3, 1, 1, 14, 100.00),
(3, 1, 1, 15, 100.00),
(3, 1, 1, 16, 100.00),
(3, 1, 1, 17, 100.00),
(3, 1, 1, 18, 100.00),
(3, 1, 1, 19, 100.00),
(3, 1, 1, 20, 100.00),
(3, 1, 1, 21, 100.00),
(3, 1, 1, 22, 100.00),
(3, 1, 1, 23, 100.00),
(3, 1, 2, 0, 100.00),
(3, 1, 2, 1, 100.00),
(3, 1, 2, 2, 100.00),
(3, 1, 2, 3, 100.00),
(3, 1, 2, 4, 100.00),
(3, 1, 2, 5, 100.00),
(3, 1, 2, 6, 100.00),
(3, 1, 2, 7, 100.00),
(3, 1, 2, 8, 100.00),
(3, 1, 2, 9, 100.00),
(3, 1, 2, 10, 100.00),
(3, 1, 2, 11, 100.00),
(3, 1, 2, 12, 100.00),
(3, 1, 2, 13, 100.00),
(3, 1, 2, 14, 100.00),
(3, 1, 2, 15, 100.00),
(3, 1, 2, 16, 100.00),
(3, 1, 2, 17, 100.00),
(3, 1, 2, 18, 100.00),
(3, 1, 2, 19, 100.00),
(3, 1, 2, 20, 100.00),
(3, 1, 2, 21, 100.00),
(3, 1, 2, 22, 100.00),
(3, 1, 2, 23, 100.00),
(3, 1, 3, 0, 100.00),
(3, 1, 3, 1, 100.00),
(3, 1, 3, 2, 100.00),
(3, 1, 3, 3, 100.00),
(3, 1, 3, 4, 100.00),
(3, 1, 3, 5, 100.00),
(3, 1, 3, 6, 100.00),
(3, 1, 3, 7, 100.00),
(3, 1, 3, 8, 100.00),
(3, 1, 3, 9, 100.00),
(3, 1, 3, 10, 100.00),
(3, 1, 3, 11, 100.00),
(3, 1, 3, 12, 100.00),
(3, 1, 3, 13, 100.00),
(3, 1, 3, 14, 100.00),
(3, 1, 3, 15, 100.00),
(3, 1, 3, 16, 100.00),
(3, 1, 3, 17, 100.00),
(3, 1, 3, 18, 100.00),
(3, 1, 3, 19, 100.00),
(3, 1, 3, 20, 100.00),
(3, 1, 3, 21, 100.00),
(3, 1, 3, 22, 100.00),
(3, 1, 3, 23, 100.00),
(3, 1, 4, 0, 100.00),
(3, 1, 4, 1, 100.00),
(3, 1, 4, 2, 100.00),
(3, 1, 4, 3, 100.00),
(3, 1, 4, 4, 100.00),
(3, 1, 4, 5, 100.00),
(3, 1, 4, 6, 100.00),
(3, 1, 4, 7, 100.00),
(3, 1, 4, 8, 100.00),
(3, 1, 4, 9, 100.00),
(3, 1, 4, 10, 100.00),
(3, 1, 4, 11, 100.00),
(3, 1, 4, 12, 100.00),
(3, 1, 4, 13, 100.00),
(3, 1, 4, 14, 100.00),
(3, 1, 4, 15, 100.00),
(3, 1, 4, 16, 100.00),
(3, 1, 4, 17, 100.00),
(3, 1, 4, 18, 100.00),
(3, 1, 4, 19, 100.00),
(3, 1, 4, 20, 100.00),
(3, 1, 4, 21, 100.00),
(3, 1, 4, 22, 100.00),
(3, 1, 4, 23, 100.00),
(3, 1, 5, 0, 100.00),
(3, 1, 5, 1, 100.00),
(3, 1, 5, 2, 100.00),
(3, 1, 5, 3, 100.00),
(3, 1, 5, 4, 100.00),
(3, 1, 5, 5, 100.00),
(3, 1, 5, 6, 100.00),
(3, 1, 5, 7, 100.00),
(3, 1, 5, 8, 100.00),
(3, 1, 5, 9, 100.00),
(3, 1, 5, 10, 100.00),
(3, 1, 5, 11, 100.00),
(3, 1, 5, 12, 100.00),
(3, 1, 5, 13, 100.00),
(3, 1, 5, 14, 100.00),
(3, 1, 5, 15, 100.00),
(3, 1, 5, 16, 100.00),
(3, 1, 5, 17, 100.00),
(3, 1, 5, 18, 100.00),
(3, 1, 5, 19, 100.00),
(3, 1, 5, 20, 100.00),
(3, 1, 5, 21, 100.00),
(3, 1, 5, 22, 100.00),
(3, 1, 5, 23, 100.00),
(3, 1, 6, 0, 100.00),
(3, 1, 6, 1, 100.00),
(3, 1, 6, 2, 100.00),
(3, 1, 6, 3, 100.00),
(3, 1, 6, 4, 100.00),
(3, 1, 6, 5, 100.00),
(3, 1, 6, 6, 100.00),
(3, 1, 6, 7, 100.00),
(3, 1, 6, 8, 100.00),
(3, 1, 6, 9, 100.00),
(3, 1, 6, 10, 100.00),
(3, 1, 6, 11, 100.00),
(3, 1, 6, 12, 100.00),
(3, 1, 6, 13, 100.00),
(3, 1, 6, 14, 100.00),
(3, 1, 6, 15, 100.00),
(3, 1, 6, 16, 100.00),
(3, 1, 6, 17, 100.00),
(3, 1, 6, 18, 100.00),
(3, 1, 6, 19, 100.00),
(3, 1, 6, 20, 100.00),
(3, 1, 6, 21, 100.00),
(3, 1, 6, 22, 100.00),
(3, 1, 6, 23, 100.00),
(3, 1, 7, 0, 100.00),
(3, 1, 7, 1, 100.00),
(3, 1, 7, 2, 100.00),
(3, 1, 7, 3, 100.00),
(3, 1, 7, 4, 100.00),
(3, 1, 7, 5, 100.00),
(3, 1, 7, 6, 100.00),
(3, 1, 7, 7, 100.00),
(3, 1, 7, 8, 100.00),
(3, 1, 7, 9, 100.00),
(3, 1, 7, 10, 100.00),
(3, 1, 7, 11, 100.00),
(3, 1, 7, 12, 100.00),
(3, 1, 7, 13, 100.00),
(3, 1, 7, 14, 100.00),
(3, 1, 7, 15, 100.00),
(3, 1, 7, 16, 100.00),
(3, 1, 7, 17, 100.00),
(3, 1, 7, 18, 100.00),
(3, 1, 7, 19, 100.00),
(3, 1, 7, 20, 100.00),
(3, 1, 7, 21, 100.00),
(3, 1, 7, 22, 100.00),
(3, 1, 7, 23, 100.00),
(1, 0, 1, 0, 20.00),
(1, 0, 1, 1, 20.00),
(1, 0, 1, 2, 20.00),
(1, 0, 1, 3, 20.00),
(1, 0, 1, 4, 20.00),
(1, 0, 1, 5, 50.00),
(1, 0, 1, 6, 50.00),
(1, 0, 1, 7, 50.00),
(1, 0, 1, 8, 50.00),
(1, 0, 1, 9, 50.00),
(1, 0, 1, 10, 50.00),
(1, 0, 1, 11, 50.00),
(1, 0, 1, 12, 50.00),
(1, 0, 1, 13, 50.00),
(1, 0, 1, 14, 50.00),
(1, 0, 1, 15, 50.00),
(1, 0, 1, 16, 50.00),
(1, 0, 1, 17, 50.00),
(1, 0, 1, 18, 50.00),
(1, 0, 1, 19, 50.00),
(1, 0, 1, 20, 50.00),
(1, 0, 1, 21, 50.00),
(1, 0, 1, 22, 50.00),
(1, 0, 1, 23, 50.00),
(1, 0, 2, 0, 20.00),
(1, 0, 2, 1, 20.00),
(1, 0, 2, 2, 20.00),
(1, 0, 2, 3, 20.00),
(1, 0, 2, 4, 20.00),
(1, 0, 2, 5, 50.00),
(1, 0, 2, 6, 50.00),
(1, 0, 2, 7, 50.00),
(1, 0, 2, 8, 50.00),
(1, 0, 2, 9, 50.00),
(1, 0, 2, 10, 50.00),
(1, 0, 2, 11, 50.00),
(1, 0, 2, 12, 50.00),
(1, 0, 2, 13, 50.00),
(1, 0, 2, 14, 50.00),
(1, 0, 2, 15, 50.00),
(1, 0, 2, 16, 50.00),
(1, 0, 2, 17, 50.00),
(1, 0, 2, 18, 50.00),
(1, 0, 2, 19, 50.00),
(1, 0, 2, 20, 50.00),
(1, 0, 2, 21, 50.00),
(1, 0, 2, 22, 50.00),
(1, 0, 2, 23, 50.00),
(1, 0, 3, 0, 20.00),
(1, 0, 3, 1, 20.00),
(1, 0, 3, 2, 20.00),
(1, 0, 3, 3, 20.00),
(1, 0, 3, 4, 20.00),
(1, 0, 3, 5, 20.00),
(1, 0, 3, 6, 20.00),
(1, 0, 3, 7, 20.00),
(1, 0, 3, 8, 50.00),
(1, 0, 3, 9, 50.00),
(1, 0, 3, 10, 50.00),
(1, 0, 3, 11, 50.00),
(1, 0, 3, 12, 50.00),
(1, 0, 3, 13, 50.00),
(1, 0, 3, 14, 50.00),
(1, 0, 3, 15, 50.00),
(1, 0, 3, 16, 50.00),
(1, 0, 3, 17, 50.00),
(1, 0, 3, 18, 50.00),
(1, 0, 3, 19, 50.00),
(1, 0, 3, 20, 50.00),
(1, 0, 3, 21, 50.00),
(1, 0, 3, 22, 50.00),
(1, 0, 3, 23, 50.00),
(1, 0, 4, 0, 20.00),
(1, 0, 4, 1, 20.00),
(1, 0, 4, 2, 20.00),
(1, 0, 4, 3, 20.00),
(1, 0, 4, 4, 20.00),
(1, 0, 4, 5, 20.00),
(1, 0, 4, 6, 20.00),
(1, 0, 4, 7, 20.00),
(1, 0, 4, 8, 50.00),
(1, 0, 4, 9, 50.00),
(1, 0, 4, 10, 50.00),
(1, 0, 4, 11, 50.00),
(1, 0, 4, 12, 50.00),
(1, 0, 4, 13, 50.00),
(1, 0, 4, 14, 50.00),
(1, 0, 4, 15, 50.00),
(1, 0, 4, 16, 50.00),
(1, 0, 4, 17, 50.00),
(1, 0, 4, 18, 50.00),
(1, 0, 4, 19, 50.00),
(1, 0, 4, 20, 50.00),
(1, 0, 4, 21, 50.00),
(1, 0, 4, 22, 50.00),
(1, 0, 4, 23, 50.00),
(1, 0, 5, 0, 20.00),
(1, 0, 5, 1, 20.00),
(1, 0, 5, 2, 20.00),
(1, 0, 5, 3, 20.00),
(1, 0, 5, 4, 20.00),
(1, 0, 5, 5, 20.00),
(1, 0, 5, 6, 20.00),
(1, 0, 5, 7, 20.00),
(1, 0, 5, 8, 50.00),
(1, 0, 5, 9, 50.00),
(1, 0, 5, 10, 50.00),
(1, 0, 5, 11, 50.00),
(1, 0, 5, 12, 50.00),
(1, 0, 5, 13, 50.00),
(1, 0, 5, 14, 50.00),
(1, 0, 5, 15, 50.00),
(1, 0, 5, 16, 50.00),
(1, 0, 5, 17, 50.00),
(1, 0, 5, 18, 50.00),
(1, 0, 5, 19, 50.00),
(1, 0, 5, 20, 50.00),
(1, 0, 5, 21, 50.00),
(1, 0, 5, 22, 50.00),
(1, 0, 5, 23, 50.00),
(1, 0, 6, 0, 50.00),
(1, 0, 6, 1, 50.00),
(1, 0, 6, 2, 50.00),
(1, 0, 6, 3, 50.00),
(1, 0, 6, 4, 50.00),
(1, 0, 6, 5, 50.00),
(1, 0, 6, 6, 50.00),
(1, 0, 6, 7, 50.00),
(1, 0, 6, 8, 50.00),
(1, 0, 6, 9, 50.00),
(1, 0, 6, 10, 50.00),
(1, 0, 6, 11, 50.00),
(1, 0, 6, 12, 50.00),
(1, 0, 6, 13, 50.00),
(1, 0, 6, 14, 50.00),
(1, 0, 6, 15, 50.00),
(1, 0, 6, 16, 50.00),
(1, 0, 6, 17, 50.00),
(1, 0, 6, 18, 50.00),
(1, 0, 6, 19, 50.00),
(1, 0, 6, 20, 50.00),
(1, 0, 6, 21, 50.00),
(1, 0, 6, 22, 50.00),
(1, 0, 6, 23, 50.00),
(1, 0, 7, 0, 50.00),
(1, 0, 7, 1, 50.00),
(1, 0, 7, 2, 50.00),
(1, 0, 7, 3, 50.00),
(1, 0, 7, 4, 50.00),
(1, 0, 7, 5, 50.00),
(1, 0, 7, 6, 50.00),
(1, 0, 7, 7, 50.00),
(1, 0, 7, 8, 50.00),
(1, 0, 7, 9, 50.00),
(1, 0, 7, 10, 50.00),
(1, 0, 7, 11, 50.00),
(1, 0, 7, 12, 50.00),
(1, 0, 7, 13, 50.00),
(1, 0, 7, 14, 50.00),
(1, 0, 7, 15, 50.00),
(1, 0, 7, 16, 50.00),
(1, 0, 7, 17, 50.00),
(1, 0, 7, 18, 50.00),
(1, 0, 7, 19, 50.00),
(1, 0, 7, 20, 50.00),
(1, 0, 7, 21, 50.00),
(1, 0, 7, 22, 50.00),
(1, 0, 7, 23, 50.00),
(1, 1, 1, 0, 30.00),
(1, 1, 1, 1, 30.00),
(1, 1, 1, 2, 30.00),
(1, 1, 1, 3, 30.00),
(1, 1, 1, 4, 30.00),
(1, 1, 1, 5, 100.00),
(1, 1, 1, 6, 100.00),
(1, 1, 1, 7, 100.00),
(1, 1, 1, 8, 100.00),
(1, 1, 1, 9, 100.00),
(1, 1, 1, 10, 100.00),
(1, 1, 1, 11, 100.00),
(1, 1, 1, 12, 100.00),
(1, 1, 1, 13, 100.00),
(1, 1, 1, 14, 100.00),
(1, 1, 1, 15, 100.00),
(1, 1, 1, 16, 100.00),
(1, 1, 1, 17, 100.00),
(1, 1, 1, 18, 100.00),
(1, 1, 1, 19, 100.00),
(1, 1, 1, 20, 100.00),
(1, 1, 1, 21, 100.00),
(1, 1, 1, 22, 100.00),
(1, 1, 1, 23, 100.00),
(1, 1, 2, 0, 30.00),
(1, 1, 2, 1, 30.00),
(1, 1, 2, 2, 30.00),
(1, 1, 2, 3, 30.00),
(1, 1, 2, 4, 30.00),
(1, 1, 2, 5, 100.00),
(1, 1, 2, 6, 100.00),
(1, 1, 2, 7, 100.00),
(1, 1, 2, 8, 100.00),
(1, 1, 2, 9, 100.00),
(1, 1, 2, 10, 100.00),
(1, 1, 2, 11, 100.00),
(1, 1, 2, 12, 100.00),
(1, 1, 2, 13, 100.00),
(1, 1, 2, 14, 100.00),
(1, 1, 2, 15, 100.00),
(1, 1, 2, 16, 100.00),
(1, 1, 2, 17, 100.00),
(1, 1, 2, 18, 100.00),
(1, 1, 2, 19, 100.00),
(1, 1, 2, 20, 100.00),
(1, 1, 2, 21, 100.00),
(1, 1, 2, 22, 100.00),
(1, 1, 2, 23, 100.00),
(1, 1, 3, 0, 40.00),
(1, 1, 3, 1, 40.00),
(1, 1, 3, 2, 40.00),
(1, 1, 3, 3, 40.00),
(1, 1, 3, 4, 40.00),
(1, 1, 3, 5, 40.00),
(1, 1, 3, 6, 40.00),
(1, 1, 3, 7, 40.00),
(1, 1, 3, 8, 100.00),
(1, 1, 3, 9, 100.00),
(1, 1, 3, 10, 100.00),
(1, 1, 3, 11, 100.00),
(1, 1, 3, 12, 100.00),
(1, 1, 3, 13, 100.00),
(1, 1, 3, 14, 100.00),
(1, 1, 3, 15, 100.00),
(1, 1, 3, 16, 100.00),
(1, 1, 3, 17, 100.00),
(1, 1, 3, 18, 100.00),
(1, 1, 3, 19, 100.00),
(1, 1, 3, 20, 100.00),
(1, 1, 3, 21, 100.00),
(1, 1, 3, 22, 100.00),
(1, 1, 3, 23, 100.00),
(1, 1, 4, 0, 40.00),
(1, 1, 4, 1, 40.00),
(1, 1, 4, 2, 40.00),
(1, 1, 4, 3, 40.00),
(1, 1, 4, 4, 40.00),
(1, 1, 4, 5, 40.00),
(1, 1, 4, 6, 40.00),
(1, 1, 4, 7, 40.00),
(1, 1, 4, 8, 100.00),
(1, 1, 4, 9, 100.00),
(1, 1, 4, 10, 100.00),
(1, 1, 4, 11, 100.00),
(1, 1, 4, 12, 100.00),
(1, 1, 4, 13, 100.00),
(1, 1, 4, 14, 100.00),
(1, 1, 4, 15, 100.00),
(1, 1, 4, 16, 100.00),
(1, 1, 4, 17, 100.00),
(1, 1, 4, 18, 100.00),
(1, 1, 4, 19, 100.00),
(1, 1, 4, 20, 100.00),
(1, 1, 4, 21, 100.00),
(1, 1, 4, 22, 100.00),
(1, 1, 4, 23, 100.00),
(1, 1, 5, 0, 40.00),
(1, 1, 5, 1, 40.00),
(1, 1, 5, 2, 40.00),
(1, 1, 5, 3, 40.00),
(1, 1, 5, 4, 40.00),
(1, 1, 5, 5, 40.00),
(1, 1, 5, 6, 40.00),
(1, 1, 5, 7, 40.00),
(1, 1, 5, 8, 100.00),
(1, 1, 5, 9, 100.00),
(1, 1, 5, 10, 100.00),
(1, 1, 5, 11, 100.00),
(1, 1, 5, 12, 100.00),
(1, 1, 5, 13, 100.00),
(1, 1, 5, 14, 100.00),
(1, 1, 5, 15, 100.00),
(1, 1, 5, 16, 100.00),
(1, 1, 5, 17, 100.00),
(1, 1, 5, 18, 100.00),
(1, 1, 5, 19, 100.00),
(1, 1, 5, 20, 100.00),
(1, 1, 5, 21, 100.00),
(1, 1, 5, 22, 100.00),
(1, 1, 5, 23, 100.00),
(1, 1, 6, 0, 100.00),
(1, 1, 6, 1, 100.00),
(1, 1, 6, 2, 100.00),
(1, 1, 6, 3, 100.00),
(1, 1, 6, 4, 100.00),
(1, 1, 6, 5, 100.00),
(1, 1, 6, 6, 100.00),
(1, 1, 6, 7, 100.00),
(1, 1, 6, 8, 100.00),
(1, 1, 6, 9, 100.00),
(1, 1, 6, 10, 100.00),
(1, 1, 6, 11, 100.00),
(1, 1, 6, 12, 100.00),
(1, 1, 6, 13, 100.00),
(1, 1, 6, 14, 100.00),
(1, 1, 6, 15, 100.00),
(1, 1, 6, 16, 100.00),
(1, 1, 6, 17, 100.00),
(1, 1, 6, 18, 100.00),
(1, 1, 6, 19, 100.00),
(1, 1, 6, 20, 100.00),
(1, 1, 6, 21, 100.00),
(1, 1, 6, 22, 100.00),
(1, 1, 6, 23, 100.00),
(1, 1, 7, 0, 100.00),
(1, 1, 7, 1, 100.00),
(1, 1, 7, 2, 100.00),
(1, 1, 7, 3, 100.00),
(1, 1, 7, 4, 100.00),
(1, 1, 7, 5, 100.00),
(1, 1, 7, 6, 100.00),
(1, 1, 7, 7, 100.00),
(1, 1, 7, 8, 100.00),
(1, 1, 7, 9, 100.00),
(1, 1, 7, 10, 100.00),
(1, 1, 7, 11, 100.00),
(1, 1, 7, 12, 100.00),
(1, 1, 7, 13, 100.00),
(1, 1, 7, 14, 100.00),
(1, 1, 7, 15, 100.00),
(1, 1, 7, 16, 100.00),
(1, 1, 7, 17, 100.00),
(1, 1, 7, 18, 100.00),
(1, 1, 7, 19, 100.00),
(1, 1, 7, 20, 100.00),
(1, 1, 7, 21, 100.00),
(1, 1, 7, 22, 100.00),
(1, 1, 7, 23, 100.00);

-- --------------------------------------------------------

--
-- Table structure for table `attribute_roles`
--

CREATE TABLE `attribute_roles` (
  `role_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`role_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=20 ;

--
-- Dumping data for table `attribute_roles`
--

INSERT INTO `attribute_roles` (`role_id`, `name`) VALUES
(1, 'Barista'),
(5, 'Head Chef'),
(6, 'Registered Nurse (RN)'),
(7, 'Nurse Practitioner (NP)'),
(8, 'Food & Beverage Attendent'),
(10, 'Security Personal'),
(11, 'Manager'),
(12, 'Bump Crew'),
(13, 'Bar Staff'),
(14, 'Enrolled Nurse (EN)'),
(15, 'Promotional Staff'),
(16, 'Merchandise Staff'),
(17, 'Care Support Worker'),
(18, 'Builder'),
(19, 'Aged Care Level 1');

-- --------------------------------------------------------

--
-- Table structure for table `attribute_uniforms`
--

CREATE TABLE `attribute_uniforms` (
  `uniform_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`uniform_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8 ;

--
-- Dumping data for table `attribute_uniforms`
--

INSERT INTO `attribute_uniforms` (`uniform_id`, `name`) VALUES
(1, 'Stand Issue Uniform'),
(3, 'Uniform Not Required'),
(4, 'Formal Suite'),
(5, 'Black Tie'),
(6, 'Black Pants White Shirt'),
(7, 'Casual Attire');

-- --------------------------------------------------------

--
-- Table structure for table `attribute_venues`
--

CREATE TABLE `attribute_venues` (
  `venue_id` int(11) NOT NULL AUTO_INCREMENT,
  `location_id` int(11) NOT NULL,
  `name` varchar(100) NOT NULL,
  `address` varchar(255) NOT NULL,
  `suburb` varchar(100) NOT NULL,
  `postcode` varchar(10) NOT NULL,
  `state` varchar(255) NOT NULL,
  PRIMARY KEY (`venue_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=12 ;

--
-- Dumping data for table `attribute_venues`
--

INSERT INTO `attribute_venues` (`venue_id`, `location_id`, `name`, `address`, `suburb`, `postcode`, `state`) VALUES
(1, 27, 'MCG', 'Brunton Ave', 'Richmond', '3002', 'VIC'),
(2, 27, 'Flinders Street Station', 'Flinders Street', 'Melbourne', '3000', 'VIC'),
(3, 34, 'The Gabba', '450 Vulture St', 'Woolloongabba ', '4102', 'QLD'),
(4, 23, 'Woolworths Balmain', '276 Darling St', 'Balmain', '2041', 'NSW'),
(5, 21, 'Woolworths Neutral Bay Village', '1-7 Rangers Rd', 'Neutral Bay', '2089', 'NSW'),
(6, 20, 'Woolworths Sydney Metcentre', '60 Margaret Ln', 'Sydney', '2000', 'NSW'),
(7, 27, 'Alfred Health', '55 Commercial Rd', 'Melbourne', '3004', 'VIC'),
(8, 27, 'The Irish Times Pub', '427 Little Collins St', 'Melbourne', '3000', 'VIC'),
(9, 27, 'College Lawn Hotel', '36 Greville St', 'Prahran', '3181', 'VIC'),
(10, 29, 'Skinny Dog Hotel', '155 High St', 'Kew', '3101', 'VIC'),
(11, 20, 'Pool Club', '4/320 George St', 'Sydney', '2000', 'NSW');

-- --------------------------------------------------------

--
-- Table structure for table `brief`
--

CREATE TABLE `brief` (
  `brief_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` text NOT NULL,
  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '0 inactive, 1 active',
  `encoded_url` varchar(255) NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`brief_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=7 ;

--
-- Dumping data for table `brief`
--

INSERT INTO `brief` (`brief_id`, `name`, `status`, `encoded_url`, `created`, `modified`) VALUES
(1, 'Example Brief', 0, '', '2014-04-02 06:44:23', '2014-04-02 05:24:54'),
(4, 'Melbourne Cup Shift Brief', 0, '', '2014-04-02 07:14:03', '2014-04-02 05:33:31'),
(5, 'Dans Brief', 1, '', '2014-04-02 07:14:59', '0000-00-00 00:00:00'),
(6, 'MCG Brief', 0, '', '2014-04-03 23:31:04', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `brief_elements`
--

CREATE TABLE `brief_elements` (
  `brief_element_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `brief_id` bigint(20) NOT NULL,
  `element_type` varchar(255) NOT NULL COMMENT 'html element type such as text for header, textarea for description, radio etc',
  `element_content` text NOT NULL COMMENT 'if the element is a radio or checkbox then store the data in json format similar to attributes in custom_forms table ',
  `document_name` varchar(255) NOT NULL COMMENT 'name of the document entered by user and not the file name',
  `element_order` int(11) NOT NULL DEFAULT '0' COMMENT 'order of the elements',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`brief_element_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=22 ;

--
-- Dumping data for table `brief_elements`
--

INSERT INTO `brief_elements` (`brief_element_id`, `brief_id`, `element_type`, `element_content`, `document_name`, `element_order`, `created`, `modified`) VALUES
(1, 1, 'header', 'This is a header example, just text with no tracking', '', 0, '2014-04-01 06:32:42', '0000-00-00 00:00:00'),
(2, 1, 'desc-text', '<p>This is descriptive text and like the header is just text. The descriptive text is used to explain some plain text comments on the brief. It has no tracking parameters and is simply for adding text to the brief. The below is a download and we should track who has downloaded it.</p>\r\n', '', 1, '2014-04-01 06:34:19', '0000-00-00 00:00:00'),
(3, 1, 'document', 'sm-to-do-list.docx', 'Staff Master to do list', 2, '2014-04-02 03:57:02', '0000-00-00 00:00:00'),
(4, 1, 'desc-text', '<p>Below is an example of a request file upload on a brief. It is desgined to ask staff to upload a file such as a picture from a shift. Should be able to track which staff have uploaded a file. Ideally they can review all the images/files uploaded so they can download and send to client or else where.</p>\r\n', '', 3, '2014-04-01 06:36:29', '0000-00-00 00:00:00'),
(5, 1, 'image', 'women-people-faces-27507.jpg', 'Supervisor', 4, '2014-04-02 03:57:31', '0000-00-00 00:00:00'),
(6, 1, 'document', 'invoice_5.pdf', 'Invoice Format', 5, '2014-04-02 03:59:00', '0000-00-00 00:00:00'),
(7, 4, 'header', 'This is a header example, just text with no tracking', '', 6, '2014-04-02 05:22:26', '0000-00-00 00:00:00'),
(8, 4, 'desc-text', '<p><span style="font-family:lato,sans-serif; font-size:15px">This is descriptive text and like the header is just text. The descriptive text is used to explain some plain text comments on the brief. It has no tracking parameters and is simply for adding text to the brief. The below is a download and we should track who has downloaded it.</span></p>\r\n', '', 7, '2014-04-02 05:22:53', '0000-00-00 00:00:00'),
(9, 4, 'document', 'invoice_34.pdf', 'Uniform Requirements', 8, '2014-04-02 05:23:29', '0000-00-00 00:00:00'),
(10, 4, 'desc-text', '<p>Below is an example of a request file upload on a brief. It is desgined to ask staff to upload a file such as a picture from a shift. Should be able to track which staff have uploaded a file. Ideally they can review all the images/files uploaded so they can download and send to client or else where.</p>\r\n', '', 9, '2014-04-02 05:24:03', '0000-00-00 00:00:00'),
(11, 4, 'image', 'girl02.jpg', 'Supervisor', 10, '2014-04-02 05:24:32', '0000-00-00 00:00:00'),
(12, 5, 'header', 'March Campaign Brief - Coke', '', 11, '2014-04-02 07:11:25', '0000-00-00 00:00:00'),
(13, 5, 'desc-text', '<p>Pleas eread and download all content prior to coming to the shift<br><br></p>', '', 12, '2014-04-03 07:21:22', '2014-04-03 18:21:22'),
(14, 5, 'image', 'SoundKilda-Banner.jpg', '', 13, '2014-04-02 07:12:01', '0000-00-00 00:00:00'),
(17, 5, 'desc-text', '<p>kldfsjdkfsjlfksdkjlf</p>\n', '', 16, '2014-04-03 00:25:53', '0000-00-00 00:00:00'),
(18, 5, 'document', 'Invoice-2811.pdf', 'New Document', 17, '2014-04-03 00:26:04', '0000-00-00 00:00:00'),
(19, 6, 'header', 'This is the header', '', 18, '2014-04-03 23:31:11', '0000-00-00 00:00:00'),
(20, 6, 'desc-text', '<p>This is the <strong>description</strong><br></p>', '', 19, '2014-04-03 23:31:38', '2014-04-04 10:31:38'),
(21, 6, 'image', 'SoundKilda-Banner.jpg', 'Image', 20, '2014-04-03 23:31:50', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `company_profile`
--

CREATE TABLE `company_profile` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `company_logo` varchar(200) NOT NULL,
  `company_name` varchar(200) NOT NULL,
  `address` varchar(200) NOT NULL,
  `suburb` varchar(200) NOT NULL,
  `postcode` varchar(10) NOT NULL,
  `state` varchar(200) NOT NULL,
  `country` varchar(200) NOT NULL,
  `email` varchar(200) NOT NULL,
  `website` varchar(200) NOT NULL,
  `telephone` varchar(200) NOT NULL,
  `fax` varchar(200) NOT NULL,
  `website_account` varchar(200) NOT NULL,
  `abn_acn` varchar(20) NOT NULL,
  `bank_account_name` varchar(200) NOT NULL,
  `bank_account_no` varchar(200) NOT NULL,
  `bank_bsb` varchar(20) NOT NULL,
  `super_fund_name` varchar(200) NOT NULL,
  `super_product_id` varchar(200) NOT NULL,
  `super_fund_phone` varchar(200) NOT NULL,
  `super_fund_website` varchar(200) NOT NULL,
  `term_and_conditions` text NOT NULL,
  `email_c_name` varchar(200) NOT NULL,
  `email_c_address` varchar(200) NOT NULL,
  `email_c_suburb` varchar(200) NOT NULL,
  `email_c_state` varchar(200) NOT NULL,
  `email_c_postcode` varchar(200) NOT NULL,
  `email_c_country` varchar(200) NOT NULL,
  `email_c_telephone` varchar(200) NOT NULL,
  `email_c_fax` varchar(200) NOT NULL,
  `email_c_email` varchar(200) NOT NULL,
  `email_c_website` varchar(200) NOT NULL,
  `email_s_facebook` varchar(200) NOT NULL,
  `email_s_twitter` varchar(200) NOT NULL,
  `email_s_linkedin` varchar(200) NOT NULL,
  `email_s_google` varchar(200) NOT NULL,
  `email_s_youtube` varchar(200) NOT NULL,
  `email_s_instagram` varchar(200) NOT NULL,
  `email_common_text` text NOT NULL,
  `email_background_colour` varchar(200) NOT NULL,
  `email_font_colour` varchar(200) NOT NULL,
  `email_font` varchar(300) NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `company_profile`
--

INSERT INTO `company_profile` (`id`, `company_logo`, `company_name`, `address`, `suburb`, `postcode`, `state`, `country`, `email`, `website`, `telephone`, `fax`, `website_account`, `abn_acn`, `bank_account_name`, `bank_account_no`, `bank_bsb`, `super_fund_name`, `super_product_id`, `super_fund_phone`, `super_fund_website`, `term_and_conditions`, `email_c_name`, `email_c_address`, `email_c_suburb`, `email_c_state`, `email_c_postcode`, `email_c_country`, `email_c_telephone`, `email_c_fax`, `email_c_email`, `email_c_website`, `email_s_facebook`, `email_s_twitter`, `email_s_linkedin`, `email_s_google`, `email_s_youtube`, `email_s_instagram`, `email_common_text`, `email_background_colour`, `email_font_colour`, `email_font`, `modified`) VALUES
(1, '', 'Staff Master', '20 A Macquarie Street (Off Chappel)', 'Prahran', '3181', 'VIC', 'AU', 'team@staffmaster.com.au', '', '1300 692 792', '', 'www.staffmaster.com.au', '122 889 11234', 'Staff Master INC', '1992 3452333', '667219', 'Host Plus', '199233437761143', '03 9817 2256', 'www.hostplus.com.au', 'Our payment terms are 30 days from issue. Late fees may apply', 'Staff Master', '20 A Macquarie Street (Off Chappel)', 'Prahran', 'VIC', '3181', 'AU', '1300 692 792', '', 'team@staffmaster.com.au', 'www.staffmaster.com.au', 'http://www.facebook.com', 'http://www.twitter.com', 'http://www.linkedin.com', 'http://www.google.com.au', 'http://www.youtube.com', 'http://www.instagram.com', ' Liability limited by a scheme approved under Professional Standards Legislation. \nThe information contained in this email message and any accompanying files are or may be confidential. It is for the sole use of the intended recipient. If you are not the intended recipient, any use, dissemination, reliance, forwarding, printing or copying of this e-mail or any attached files is unauthorised. If you have received this email in error, please advise our office by return e-mail, or telephone and delete all copies. ', '00bbf8', 'ffffff', '', '2014-04-01 18:07:17');

-- --------------------------------------------------------

--
-- Table structure for table `countries`
--

CREATE TABLE `countries` (
  `country_id` int(11) NOT NULL AUTO_INCREMENT,
  `code` varchar(250) NOT NULL,
  `name` varchar(250) NOT NULL,
  PRIMARY KEY (`country_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=238 ;

--
-- Dumping data for table `countries`
--

INSERT INTO `countries` (`country_id`, `code`, `name`) VALUES
(1, 'AF', 'Afghanistan'),
(2, 'AL', 'Albania'),
(3, 'DZ', 'Algeria'),
(4, 'AS', 'American Samoa'),
(5, 'AD', 'Andorra'),
(6, 'AO', 'Angola'),
(7, 'AI', 'Anguilla'),
(8, 'AQ', 'Antarctica'),
(9, 'AG', 'Antigua And Barbuda'),
(10, 'AR', 'Argentina'),
(11, 'AM', 'Armenia'),
(12, 'AW', 'Aruba'),
(13, 'AU', 'Australia'),
(14, 'AT', 'Austria'),
(15, 'AZ', 'Azerbaijan'),
(16, 'BS', 'Bahamas'),
(17, 'BH', 'Bahrain'),
(18, 'BD', 'Bangladesh'),
(19, 'BB', 'Barbados'),
(20, 'BY', 'Belarus'),
(21, 'BE', 'Belgium'),
(22, 'BZ', 'Belize'),
(23, 'BJ', 'Benin'),
(24, 'BM', 'Bermuda'),
(25, 'BT', 'Bhutan'),
(26, 'BO', 'Bolivia'),
(27, 'BA', 'Bosnia And Herzegovina'),
(28, 'BW', 'Botswana'),
(29, 'BV', 'Bouvet Island'),
(30, 'BR', 'Brazil'),
(31, 'BN', 'Brunei Darussalam'),
(32, 'BG', 'Bulgaria'),
(33, 'BF', 'Burkina Faso'),
(34, 'BI', 'Burundi'),
(35, 'KH', 'Cambodia'),
(36, 'CM', 'Cameroon'),
(37, 'CA', 'Canada'),
(38, 'CV', 'Cape Verde'),
(39, 'KY', 'Cayman Islands'),
(40, 'CF', 'Central African Republic'),
(41, 'TD', 'Chad'),
(42, 'CL', 'Chile'),
(43, 'CN', 'China'),
(44, 'CX', 'Christmas Island'),
(45, 'CC', 'Cocos (Keeling) Islands'),
(46, 'CO', 'Colombia'),
(47, 'KM', 'Comoros'),
(48, 'CG', 'Congo'),
(49, 'CD', 'Congo, The Dem. Rep. Of'),
(50, 'CK', 'Cook Islands'),
(51, 'CR', 'Costa Rica'),
(52, 'CI', 'Cote D''Ivoire'),
(53, 'HR', 'Croatia'),
(54, 'CU', 'Cuba'),
(55, 'CY', 'Cyprus'),
(56, 'CZ', 'Czech Republic'),
(57, 'DK', 'Denmark'),
(58, 'DJ', 'Djibouti'),
(59, 'DM', 'Dominica'),
(60, 'DO', 'Dominican Republic'),
(61, 'EC', 'Ecuador'),
(62, 'EG', 'Egypt'),
(63, 'SV', 'El Salvador'),
(64, 'GQ', 'Equatorial Guinea'),
(65, 'ER', 'Eritrea'),
(66, 'EE', 'Estonia'),
(67, 'ET', 'Ethiopia'),
(68, 'FK', 'Falkland Islands'),
(69, 'FO', 'Faroe Islands'),
(70, 'FJ', 'Fiji'),
(71, 'FI', 'Finland'),
(72, 'FR', 'France'),
(73, 'GF', 'French Guiana'),
(74, 'PF', 'French Polynesia'),
(75, 'TF', 'French Southern Territories'),
(76, 'GA', 'Gabon'),
(77, 'GM', 'Gambia'),
(78, 'GE', 'Georgia'),
(79, 'DE', 'Germany'),
(80, 'GH', 'Ghana'),
(81, 'GI', 'Gibraltar'),
(82, 'GR', 'Greece'),
(83, 'GL', 'Greenland'),
(84, 'GD', 'Grenada'),
(85, 'GP', 'Guadeloupe'),
(86, 'GU', 'Guam'),
(87, 'GT', 'Guatemala'),
(88, 'Gg', 'Guernsey'),
(89, 'GN', 'Guinea'),
(90, 'GW', 'Guinea-Bissau'),
(91, 'GY', 'Guyana'),
(92, 'HT', 'Haiti'),
(93, 'HN', 'Honduras'),
(94, 'HK', 'Hong Kong'),
(95, 'HU', 'Hungary'),
(96, 'IS', 'Iceland'),
(97, 'IN', 'India'),
(98, 'ID', 'Indonesia'),
(99, 'IR', 'Iran'),
(100, 'IQ', 'Iraq'),
(101, 'IE', 'Ireland'),
(102, 'IM', 'Isle Of Man'),
(103, 'IL', 'Israel'),
(104, 'IT', 'Italy'),
(105, 'JM', 'Jamaica'),
(106, 'JP', 'Japan'),
(107, 'JE', 'Jersey'),
(108, 'JO', 'Jordan'),
(109, 'KZ', 'Kazakhstan'),
(110, 'KE', 'Kenya'),
(111, 'KI', 'Kiribati'),
(112, 'KP', 'North Korea'),
(113, 'KR', 'South Korea'),
(114, 'KW', 'Kuwait'),
(115, 'KG', 'Kyrgyzstan'),
(116, 'LA', 'Laos'),
(117, 'LV', 'Latvia'),
(118, 'LB', 'Lebanon'),
(119, 'LS', 'Lesotho'),
(120, 'LR', 'Liberia'),
(121, 'LY', 'Libya'),
(122, 'LI', 'Liechtenstein'),
(123, 'LT', 'Lithuania'),
(124, 'LU', 'Luxembourg'),
(125, 'MO', 'Macao'),
(126, 'MK', 'Macedonia'),
(127, 'MG', 'Madagascar'),
(128, 'MW', 'Malawi'),
(129, 'MY', 'Malaysia'),
(130, 'MV', 'Maldives'),
(131, 'ML', 'Mali'),
(132, 'MT', 'Malta'),
(133, 'MH', 'Marshall Islands'),
(134, 'MQ', 'Martinique'),
(135, 'MR', 'Mauritania'),
(136, 'MU', 'Mauritius'),
(137, 'YT', 'Mayotte'),
(138, 'MX', 'Mexico'),
(139, 'FM', 'Micronesia'),
(140, 'MD', 'Moldova, Republic Of'),
(141, 'MC', 'Monaco'),
(142, 'MN', 'Mongolia'),
(143, 'MS', 'Montserrat'),
(144, 'MA', 'Morocco'),
(145, 'MZ', 'Mozambique'),
(146, 'MM', 'Myanmar'),
(147, 'NA', 'Namibia'),
(148, 'NR', 'Nauru'),
(149, 'NP', 'Nepal'),
(150, 'NL', 'Netherlands'),
(151, 'AN', 'Netherlands Antilles'),
(152, 'NC', 'New Caledonia'),
(153, 'NZ', 'New Zealand'),
(154, 'NI', 'Nicaragua'),
(155, 'NE', 'Niger'),
(156, 'NG', 'Nigeria'),
(157, 'NU', 'Niue'),
(158, 'NF', 'Norfolk Island'),
(159, 'MP', 'Northern Mariana Islands'),
(160, 'NO', 'Norway'),
(161, 'OM', 'Oman'),
(162, 'PK', 'Pakistan'),
(163, 'PW', 'Palau'),
(164, 'PS', 'Palestinian'),
(165, 'PA', 'Panama'),
(166, 'PG', 'Papua New Guinea'),
(167, 'PY', 'Paraguay'),
(168, 'PE', 'Peru'),
(169, 'PH', 'Philippines'),
(170, 'PN', 'Pitcairn'),
(171, 'PL', 'Poland'),
(172, 'PT', 'Portugal'),
(173, 'PR', 'Puerto Rico'),
(174, 'QA', 'Qatar'),
(175, 'RE', 'Reunion'),
(176, 'RO', 'Romania'),
(177, 'RU', 'Russian Federation'),
(178, 'RW', 'Rwanda'),
(179, 'SH', 'St. Helena'),
(180, 'KN', 'St. Kitts And Nevis'),
(181, 'LC', 'St. Lucia'),
(182, 'PM', 'St. Pierre And Miquelon'),
(183, 'VC', 'St. Vincent And Grenadines'),
(184, 'WS', 'Samoa'),
(185, 'SM', 'San Marino'),
(186, 'ST', 'Sao Tome And Principe'),
(187, 'SA', 'Saudi Arabia'),
(188, 'SN', 'Senegal'),
(189, 'CS', 'Serbia And Montenegro'),
(190, 'SC', 'Seychelles'),
(191, 'SL', 'Sierra Leone'),
(192, 'SG', 'Singapore'),
(193, 'SK', 'Slovakia'),
(194, 'SI', 'Slovenia'),
(195, 'SB', 'Solomon Islands'),
(196, 'SO', 'Somalia'),
(197, 'ZA', 'South Africa'),
(198, 'ES', 'Spain'),
(199, 'LK', 'Sri Lanka'),
(200, 'SD', 'Sudan'),
(201, 'SR', 'Suriname'),
(202, 'SJ', 'Svalbard And Jan Mayen'),
(203, 'SZ', 'Swaziland'),
(204, 'SE', 'Sweden'),
(205, 'CH', 'Switzerland'),
(206, 'SY', 'Syrian Arab Republic'),
(207, 'TW', 'Taiwan, Province Of China'),
(208, 'TJ', 'Tajikistan'),
(209, 'TZ', 'Tanzania'),
(210, 'TH', 'Thailand'),
(211, 'TL', 'Timor-Leste'),
(212, 'TG', 'Togo'),
(213, 'TK', 'Tokelau'),
(214, 'TO', 'Tonga'),
(215, 'TT', 'Trinidad And Tobago'),
(216, 'TN', 'Tunisia'),
(217, 'TR', 'Turkey'),
(218, 'TM', 'Turkmenistan'),
(219, 'TC', 'Turks And Caicos Islands'),
(220, 'TV', 'Tuvalu'),
(221, 'UG', 'Uganda'),
(222, 'UA', 'Ukraine'),
(223, 'AE', 'United Arab Emirates'),
(224, 'GB', 'United Kingdom'),
(225, 'US', 'United States'),
(226, 'UY', 'Uruguay'),
(227, 'UZ', 'Uzbekistan'),
(228, 'VU', 'Vanuatu'),
(229, 'VE', 'Venezuela'),
(230, 'VN', 'Viet Nam'),
(231, 'VG', 'Virgin Islands, British'),
(232, 'VI', 'Virgin Islands, U.S.'),
(233, 'WF', 'Wallis And Futuna'),
(234, 'EH', 'Western Sahara'),
(235, 'YE', 'Yemen'),
(236, 'ZM', 'Zambia'),
(237, 'ZW', 'Zimbabwe');

-- --------------------------------------------------------

--
-- Table structure for table `custom_forms`
--

CREATE TABLE `custom_forms` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` varchar(255) NOT NULL,
  `label` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `placeholder` varchar(255) NOT NULL,
  `inline_element` enum('yes','no','not applicable') NOT NULL DEFAULT 'not applicable',
  `multi_select` enum('yes','no','not applicable') NOT NULL DEFAULT 'not applicable',
  `attributes` text NOT NULL,
  `order` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'order of the form',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=5 ;

--
-- Dumping data for table `custom_forms`
--

INSERT INTO `custom_forms` (`id`, `type`, `label`, `name`, `placeholder`, `inline_element`, `multi_select`, `attributes`, `order`, `created`, `modified`) VALUES
(1, 'radio', 'Eye Colour', 'eyecolour', '', 'no', 'not applicable', '{"1":{"value":"Blue"},"2":{"value":"Brown"},"3":{"value":"Green"},"4":{"value":"Dark"}}', 0, '2014-03-24 23:35:11', '0000-00-00 00:00:00'),
(2, 'radio', 'Height', 'height', '', 'no', 'not applicable', '{"1":{"value":"6ft"},"2":{"value":"5ft"},"3":{"value":"4ft"},"4":{"value":"Dark"}}', 3, '2014-03-24 23:35:11', '0000-00-00 00:00:00'),
(3, 'filebutton', 'Resume', 'resume', '', 'not applicable', 'not applicable', '', 1, '2014-03-24 23:35:11', '0000-00-00 00:00:00'),
(4, 'filebutton', 'RSA', 'rsa', '', 'not applicable', 'not applicable', '', 2, '2014-03-24 23:35:11', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `email_merge_fields`
--

CREATE TABLE `email_merge_fields` (
  `merge_field_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `email_template_id` bigint(20) NOT NULL,
  `merge_label` varchar(255) NOT NULL,
  `merge_field` varchar(255) NOT NULL,
  `merge_order` smallint(6) NOT NULL DEFAULT '0',
  PRIMARY KEY (`merge_field_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=34 ;

--
-- Dumping data for table `email_merge_fields`
--

INSERT INTO `email_merge_fields` (`merge_field_id`, `email_template_id`, `merge_label`, `merge_field`, `merge_order`) VALUES
(1, 1, 'Staff First Name', '{FirstName}', 1),
(2, 1, 'Staff Family Name', '{FamilyName}', 2),
(3, 1, 'Company Name', '{CompanyName}', 3),
(4, 1, 'System URL', '{SystemURL}', 7),
(5, 1, 'Username', '{UserName}', 5),
(6, 1, 'Password', '{Password}', 6),
(7, 2, 'Staff First Name', '{FirstName}', 1),
(8, 2, 'Staff Family Name', 'FamilyName}', 2),
(9, 2, 'Roster', '{Roster}', 3),
(10, 3, 'Staff First Name', '{FirstName}', 1),
(11, 3, 'Staff Family Name', '{FamilyName}', 2),
(12, 3, 'System URL', '{SystemURL}', 5),
(13, 3, 'Selected Shifts', '{SelectedShifts}', 4),
(14, 6, 'Staff First Name', '{FirstName}', 1),
(15, 6, 'Staff Family Name', '{FamilyName}', 2),
(16, 6, 'Company Name', '{CompanyName}', 3),
(17, 6, 'System URL', '{SystemURL}', 7),
(18, 6, 'Username', '{UserName}', 5),
(19, 6, 'Password', '{Password}', 6),
(20, 4, 'Staff First Name', '{FirstName}', 1),
(21, 4, 'Staff Family Name', '{FamilyName}', 2),
(22, 4, 'Company Name', '{CompanyName}', 3),
(23, 4, 'System URL', '{SystemURL}', 6),
(24, 4, 'Shift Info', '{ShiftInfo}', 5),
(25, 7, 'Client Contact Name', '{ClientContactName}', 1),
(26, 7, 'Client Company Name', '{ClientCompanyName}', 2),
(27, 7, 'Invoice Number', '{InvoiceNumber}', 3),
(28, 7, 'Amount Due', '{AmountDue}', 4),
(29, 7, 'Due Date', '{DueDate}', 5),
(30, 7, 'Company Name', '{CompanyName}', 6),
(31, 7, 'Issue Date', '{IssueDate}', 7),
(32, 7, 'System URL', '{SystemURL}', 8),
(33, 2, 'System URL', '{SystemURL}', 4);

-- --------------------------------------------------------

--
-- Table structure for table `email_templates`
--

CREATE TABLE `email_templates` (
  `email_template_id` int(11) NOT NULL AUTO_INCREMENT,
  `template_name` varchar(255) NOT NULL,
  `template_content` text NOT NULL,
  `email_from` varchar(255) NOT NULL,
  `email_subject` varchar(255) NOT NULL,
  `default_template` text NOT NULL COMMENT 'this is the default template which will be used to restore to default template',
  `auto_send` enum('yes','no') NOT NULL DEFAULT 'yes' COMMENT 'defines weather or not the email is automatically send',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`email_template_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=9 ;

--
-- Dumping data for table `email_templates`
--

INSERT INTO `email_templates` (`email_template_id`, `template_name`, `template_content`, `email_from`, `email_subject`, `default_template`, `auto_send`, `created`, `modified`) VALUES
(1, 'Welcome Staff', '<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Dear&nbsp;{FirstName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Welcome to the&nbsp;{CompanyName}&nbsp;team</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">We are thrilled to have you joint our team. Before completing your first shift with us we need you to logon to your staff account and complete your online induction.&nbsp;</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Completing your induction ensures that your details in the system are accurate, you get paid on time and can apply for shifts as they become availble.</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">To log on to your staff account click this link {SystemURL}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">and login with the following details</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">User Name &nbsp; &nbsp; {UserName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Password &nbsp; &nbsp; &nbsp; {Password}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">We look forward to working with you.</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Kind regards</span></span></p>\r\n', 'admin@smcloud.com.au', 'Welcome To Our Team', '', 'no', '2014-03-19 06:42:01', '2014-03-19 06:42:01'),
(2, 'Roster Update', '<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Dear {FirstName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Your roster has recently been updated, please login to your staff account to confirm all shifts we have you working on.</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Your current roster is as follow:</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">{Roster}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Kind regards</span></span></p>\r\n', 'admin@smcloud.com.au', 'Roster Update', '', 'no', '2014-03-14 06:08:44', '2014-03-14 06:08:44'),
(3, 'Apply For Shifts', '<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Dear {FirstName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">We have just updated our system with a series of jobs. Please login to your staff account {SystemURL}&nbsp;and apply for jobs you would like to work on.</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Some of the new shifts that have become available include:</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">{SelectedShifts}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Kind Regards</span></span></p>\r\n', 'admin@smcloud.com.au', 'Apply For Shifts', '', 'no', '2014-03-14 06:09:06', '2014-03-14 06:09:06'),
(4, 'Shift Reminder', '<p><span style="font-family:arial,helvetica,sans-serif"><span style="font-size:12px">Dear&nbsp;{FirstName}</span></span></p>\r\n\r\n<p><span style="font-family:arial,helvetica,sans-serif"><span style="font-size:12px">Enjoy your shift tomorrow at&nbsp;{ShiftInfo}</span></span></p>\r\n\r\n<p><span style="font-family:arial,helvetica,sans-serif"><span style="font-size:12px">Please contact us immeadiatly if you have any questions regarding your shift.&nbsp;</span></span></p>\r\n\r\n<p><span style="font-family:arial,helvetica,sans-serif"><span style="font-size:12px">Kind regards</span></span></p>\r\n', 'admin@smcloud.com.au', 'Shift Reminder', '', 'no', '2014-03-20 06:32:37', '2014-03-20 06:32:37'),
(5, 'Work Confirmation', '<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Dear&nbsp;{FirstName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Your roster has been updated and requires your attention.</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Please login to your account to confirm your shifts. Your Current Roster is as follows:</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">{Roster}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Please contact us immeadiatly if you have any questions regarding your roster.</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">To Login to your account click here</span></span></p>\r\n', 'admin@smcloud.com.au', 'Work Confirmation', '', 'no', '2014-03-14 06:09:20', '2014-03-14 06:09:20'),
(6, 'Forgot Password', '<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Dear&nbsp;{FirstName}</span></span></p>\r\n\r\n<p>We received a forgotten password request from you.</p>\r\n\r\n<p>Your new login details are as follows:</p>\r\n\r\n<p>Username:&nbsp;{UserName}</p>\r\n\r\n<p>Password:&nbsp;{Password}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style="font-family:arial,helvetica,sans-serif; font-size:12px">Please contact us immeadiatly if you did not request this password request.&nbsp;</span></p>\r\n\r\n<p>&nbsp;</p>\r\n', 'admin@smcloud.com.au', 'Password Reset', '', 'no', '2014-03-20 04:47:51', '2014-03-20 04:47:51'),
(7, 'Client Invoice', '<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Dear&nbsp;{ClientContactName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Please find attached an invoice from&nbsp;{CompanyName} for recent services for {ClientCompanyName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">The invoice details are as follows:</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Invoice Number: &nbsp; {InvoiceNumber}<br />\r\nAmount Due: &nbsp; &nbsp; &nbsp; &nbsp; ${AmountDue}<br />\r\nDue Date: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{DueDate} &nbsp;&nbsp;</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">A downloadable invoice is attached or you can login to your member account to retrieve a copy of this invoice at any time.</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Kind regards</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">{CompanyName}</span></span></p>\r\n', 'admin@smcloud.com.au', '{CompanyName} Invoice Issued - {IssueDate}', '', 'no', '2014-03-21 06:12:06', '2014-03-21 06:12:06'),
(8, 'Client Quote', '<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Dear&nbsp;{FirstName}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Your roster has been updated and requires your attention.&nbsp;</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Please login to your account to confirm your shifts. Your Current Roster is as follows:</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">{Roster}</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">Please contact us immeadiatly if you have any questions regarding your roster.&nbsp;</span></span></p>\r\n\r\n<p><span style="font-size:12px"><span style="font-family:arial,helvetica,sans-serif">To Login to your account click here</span></span></p>\r\n', 'admin@smcloud.com.au', 'Client Quote', '', 'no', '2014-03-14 06:09:40', '2014-03-14 06:09:40');

-- --------------------------------------------------------

--
-- Table structure for table `expenses`
--

CREATE TABLE `expenses` (
  `expense_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `status` tinyint(4) NOT NULL,
  `paid_on` datetime DEFAULT NULL,
  `job_id` bigint(20) NOT NULL,
  `timesheet_id` bigint(20) NOT NULL,
  `staff_id` bigint(20) NOT NULL,
  `client_id` bigint(20) NOT NULL,
  `description` varchar(255) NOT NULL,
  `staff_cost` decimal(10,2) NOT NULL,
  `client_cost` decimal(10,2) NOT NULL,
  `tax` tinyint(4) NOT NULL,
  PRIMARY KEY (`expense_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=15 ;

--
-- Dumping data for table `expenses`
--

INSERT INTO `expenses` (`expense_id`, `status`, `paid_on`, `job_id`, `timesheet_id`, `staff_id`, `client_id`, `description`, `staff_cost`, `client_cost`, `tax`) VALUES
(1, 1, '2014-03-20 15:34:18', 18, 2, 1, 31, 'Travel Costs', 25.00, 50.00, 2),
(2, 1, '2014-03-20 15:34:18', 18, 2, 1, 31, 'Travel Costs', 25.00, 50.00, 2),
(3, 1, '2014-03-20 15:34:18', 19, 12, 1, 31, 'Travel Cost', 25.00, 35.00, 2),
(4, 1, '2014-03-20 15:34:18', 19, 12, 1, 31, 'Milk', 20.00, 40.00, 0),
(5, 0, NULL, 18, 13, 1, 31, 'Travel Costs', 25.00, 50.00, 2),
(6, 0, NULL, 21, 27, 1, 34, 'Travel Cost', 20.00, 40.00, 0),
(7, 0, NULL, 21, 18, 19, 34, 'Travel Costs', 20.00, 40.00, 0),
(8, 0, NULL, 19, 29, 1, 31, 'Travel Cost', 20.00, 40.00, 0),
(9, 0, NULL, 18, 33, 1, 31, 'Milk', 20.00, 40.00, 2),
(10, 0, NULL, 21, 37, 19, 34, 'Milk', 10.00, 20.00, 0),
(11, 0, NULL, 18, 34, 1, 31, 'Milk', 20.00, 40.00, 2),
(12, 0, NULL, 18, 35, 1, 31, 'Milk', 20.00, 40.00, 2),
(13, 0, NULL, 18, 11, 1, 31, 'Taxi', 200.00, 0.00, 1),
(14, 0, NULL, 18, 11, 1, 31, 'Taxi', 0.00, 400.00, 0);

-- --------------------------------------------------------

--
-- Table structure for table `export_fields`
--

CREATE TABLE `export_fields` (
  `order` int(11) NOT NULL AUTO_INCREMENT,
  `object` varchar(20) NOT NULL,
  `format` varchar(20) NOT NULL,
  `value` varchar(100) NOT NULL,
  `label` varchar(100) NOT NULL,
  PRIMARY KEY (`order`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=77 ;

--
-- Dumping data for table `export_fields`
--

INSERT INTO `export_fields` (`order`, `object`, `format`, `value`, `label`) VALUES
(1, 'invoice', 'single', 'job_id', 'Job ID'),
(2, 'invoice', 'single', 'company_name', 'Client Name'),
(3, 'invoice', 'single', 'job_date', 'Date'),
(4, 'invoice', 'single', 'staff_name', 'Staff name'),
(5, 'invoice', 'single', 'start_time', 'Start Time'),
(6, 'invoice', 'single', 'finish_time', 'Finish Time'),
(7, 'payrun_tfn', 'single', 'job_date', 'Job Date'),
(8, 'payrun_tfn', 'single', 'start_time', 'Start Time'),
(9, 'payrun_tfn', 'single', 'finish_time', 'Finish Time'),
(10, 'payrun_tfn', 'single', 'staff_name', 'Staff Name'),
(11, 'payrun_tfn', 'single', 'break', 'Break'),
(12, 'payrun_tfn', 'single', 'hours', 'Hours'),
(13, 'payrun_tfn', 'single', 'pay_rate', 'Pay Rate'),
(14, 'payrun_tfn', 'single', 'venue', 'Venue'),
(15, 'payrun_tfn', 'single', 'internal_staff_id', 'Internal Staff Id'),
(16, 'payrun_tfn', 'single', 'external_staff_id', 'External Staff Id'),
(17, 'payrun_tfn', 'single', 'job_name', 'Job Name'),
(18, 'payrun_abn', 'single', 'job_date', 'Job Date'),
(19, 'payrun_abn', 'single', 'start_time', 'Start Time'),
(20, 'payrun_abn', 'single', 'finish_time', 'Finish Time'),
(21, 'payrun_abn', 'single', 'staff_name', 'Staff Name'),
(22, 'payrun_abn', 'single', 'break', 'Break'),
(23, 'payrun_abn', 'single', 'hours', 'Hours'),
(24, 'payrun_abn', 'single', 'pay_rate', 'Pay Rate'),
(25, 'payrun_abn', 'single', 'venue', 'Venue'),
(26, 'payrun_abn', 'single', 'internal_staff_id', 'Internal Staff Id'),
(27, 'payrun_abn', 'single', 'external_staff_id', 'External Staff Id'),
(28, 'payrun_abn', 'single', 'job_name', 'Job Nam'),
(29, 'payrun_tfn', 'batched', 'staff_name', 'Staff Name'),
(30, 'payrun_tfn', 'batched', 'hours', 'Hours'),
(31, 'payrun_tfn', 'batched', 'internal_staff_id', 'Internal Staff Id'),
(32, 'payrun_tfn', 'batched', 'external_staff_id', 'External Staff Id'),
(33, 'expense', 'single', 'job_date', 'Job Date'),
(34, 'expense', 'single', 'staff_first_name', 'Staff First Name'),
(35, 'expense', 'single', 'staff_last_name', 'Staff Last Name'),
(36, 'expense', 'single', 'job_name', 'Job Name'),
(37, 'expense', 'single', 'tax_amount', 'Tax Amount'),
(38, 'expense', 'single', 'inc_tax_amount', 'Inc Tax Amount'),
(39, 'expense', 'single', 'paid_on', 'Paid Date/Time'),
(40, 'expense', 'single', 'ex_tax_amount', 'Ex Tax Amount'),
(41, 'invoice', 'single', 'invoice_number', 'Invoice Number'),
(42, 'invoice', 'single', 'tax_amount', 'Tax Amount'),
(43, 'invoice', 'single', 'inc_tax_amount', 'Inc Tax Amount'),
(44, 'invoice', 'single', 'ex_tax_amount', 'Ex Tax Amount'),
(45, 'invoice', 'single', 'hours', 'Hours'),
(46, 'invoice', 'single', 'break', 'Break'),
(47, 'invoice', 'single', 'description', 'Description'),
(48, 'invoice', 'single', 'type', 'Type'),
(49, 'staff', 'single', 'title', 'Title'),
(50, 'staff', 'single', 'rating', 'Rating'),
(51, 'staff', 'single', 'first_name', 'First Name'),
(52, 'staff', 'single', 'gender', 'Gender'),
(53, 'staff', 'single', 'dob', 'Date of birth'),
(54, 'staff', 'single', 'address', 'Address'),
(55, 'staff', 'single', 'suburb', 'Suburb'),
(56, 'staff', 'single', 'city', 'City'),
(57, 'staff', 'single', 'postcode', 'Postcode'),
(58, 'staff', 'single', 'state', 'State'),
(59, 'staff', 'single', 'country', 'Country'),
(60, 'staff', 'single', 'email', 'Email'),
(61, 'staff', 'single', 'phone', 'Mobile Phone'),
(62, 'staff', 'single', 'external_id', 'External ID'),
(63, 'staff', 'single', 'emergency_contact', 'Emergency Contact'),
(64, 'staff', 'single', 'emergency_phone', 'Emergency Phone'),
(65, 'staff', 'single', 'account_name', 'Account Name'),
(66, 'staff', 'single', 'bsb', 'BSB'),
(67, 'staff', 'single', 'account_number', 'Account Number'),
(68, 'staff', 'single', 'employed_as', 'Employed As'),
(69, 'staff', 'single', 'tfn_number', 'TFN Number'),
(70, 'staff', 'single', 'abn_number', 'ABN Number'),
(71, 'staff', 'single', 'super_choice', 'Choice of superannuation'),
(72, 'staff', 'single', 'super_employee_id', 'Employee ID Number'),
(73, 'staff', 'single', 'super_fund_name', 'Super Fund Name'),
(74, 'staff', 'single', 'super_membership_number', 'Membership Number'),
(75, 'staff', 'single', 'last_name', 'Last Name');

-- --------------------------------------------------------

--
-- Table structure for table `export_templates`
--

CREATE TABLE `export_templates` (
  `export_id` int(11) NOT NULL AUTO_INCREMENT,
  `object` varchar(20) NOT NULL,
  `format` varchar(20) NOT NULL,
  `name` varchar(200) NOT NULL,
  `status` tinyint(4) NOT NULL,
  PRIMARY KEY (`export_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=10 ;

--
-- Dumping data for table `export_templates`
--

INSERT INTO `export_templates` (`export_id`, `object`, `format`, `name`, `status`) VALUES
(1, 'invoice', 'single', 'Invoice Export', 0),
(2, 'invoice', 'batched', 'Invoice Export', 0),
(3, 'payrun_tfn', 'single', 'TFN Export', 0),
(4, 'payrun_tfn', 'batched', 'TFN Export', 0),
(5, 'payrun_abn', 'single', 'ABN Supplier Export', 0),
(6, 'payrun_abn', 'batched', 'ABN Supplier Export', 0),
(7, 'staff', 'single', 'Staff Export', 0),
(8, 'invoice', 'batched', 'Custom batched invoice', 0),
(9, 'expense', 'single', 'Staff Expense Export ', 0);

-- --------------------------------------------------------

--
-- Table structure for table `export_template_data`
--

CREATE TABLE `export_template_data` (
  `field_id` int(11) NOT NULL AUTO_INCREMENT,
  `export_id` int(11) NOT NULL,
  `order` int(11) NOT NULL,
  `title` varchar(100) NOT NULL,
  `value` varchar(200) NOT NULL,
  PRIMARY KEY (`field_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=67 ;

--
-- Dumping data for table `export_template_data`
--

INSERT INTO `export_template_data` (`field_id`, `export_id`, `order`, `title`, `value`) VALUES
(11, 1, 2, 'Client Name', '{company_name}'),
(12, 1, 6, 'Work Date', '{job_date}'),
(13, 1, 3, 'Employee', '{staff_name}'),
(18, 3, 0, 'Group', '{internal_staff_id}'),
(19, 3, 1, 'Employee', '{external_staff_id}'),
(20, 3, 3, 'Date', '{job_date}'),
(21, 3, 4, 'Hours', '{hours}'),
(22, 3, 5, 'EarningID', '{pay_rate}'),
(25, 3, 6, 'Description', '{job_name}     {start_time} - {finish_time}'),
(26, 3, 2, 'Staff name', '{staff_name}'),
(27, 5, 27, 'Group', '{internal_staff_id}'),
(28, 5, 28, 'Employee', '{external_staff_id}'),
(29, 5, 29, 'Staff Name', '{staff_name}'),
(30, 5, 30, 'Date', '{job_date}'),
(31, 5, 31, 'Hours', '{hours}'),
(32, 5, 32, 'EarningID', '{pay_rate}'),
(33, 5, 33, 'Description', '{job_name}     {start_time} - {finish_time}'),
(34, 9, 0, 'Job Date', '{job_date}'),
(35, 9, 1, 'First Name', '{staff_first_name}'),
(36, 9, 2, 'Last Name', '{staff_last_name}'),
(39, 9, 3, 'Tax Amount', '{tax_amount}'),
(40, 9, 4, 'Ex Tax Amount', '{ex_tax_amount}'),
(41, 9, 5, 'Inc Tax Amount', '{inc_tax_amount}'),
(42, 9, 6, 'Job Name', '{job_name}'),
(43, 9, 7, 'Paid Date/Time', '{paid_on}'),
(44, 1, 5, 'Invoice Number', '{invoice_number}'),
(46, 1, 1, 'Ex Tax Amount', '{ex_tax_amount}'),
(47, 1, 0, 'Inc Tax Amount', '{inc_tax_amount}'),
(48, 1, 9, 'Start Time', '{start_time}'),
(49, 1, 11, 'Finish Time', '{finish_time}'),
(50, 1, 12, 'Break', '{break}'),
(51, 1, 13, 'Hours', '{hours}'),
(52, 1, 4, 'Description', '{description}'),
(53, 1, 10, 'TXN', ''),
(54, 3, 54, 'VIN Num', '1'),
(55, 5, 55, 'TAX RN', 'G'),
(56, 5, 56, 'NewMaterialCode', ''),
(58, 9, 58, 'VIN CODE', '{job_name} {job_date}'),
(59, 1, 14, 'VINCODE+', '{job_date}'),
(60, 1, 15, 'VET', 'T'),
(61, 1, 16, 'TaxR', '{hours}'),
(62, 1, 7, 'VINTax', 'T'),
(63, 1, 8, 'VFV', 'T'),
(64, 7, 0, 'ABN Number', '{abn_number}'),
(65, 7, 2, 'BSB', '{bsb}'),
(66, 7, 1, 'Choice of superannuation', '{super_choice}');

-- --------------------------------------------------------

--
-- Table structure for table `forecast`
--

CREATE TABLE `forecast` (
  `forecast_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `job_id` bigint(20) NOT NULL,
  `shift_id` bigint(20) NOT NULL,
  `job_date` date NOT NULL,
  `expenses_staff_cost` decimal(10,0) NOT NULL,
  `expenses_client_cost` decimal(10,0) NOT NULL,
  `total_amount_staff` decimal(10,0) NOT NULL,
  `total_amount_client` decimal(10,0) NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`forecast_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=77 ;

--
-- Dumping data for table `forecast`
--

INSERT INTO `forecast` (`forecast_id`, `job_id`, `shift_id`, `job_date`, `expenses_staff_cost`, `expenses_client_cost`, `total_amount_staff`, `total_amount_client`, `created_on`) VALUES
(1, 19, 208, '2014-04-04', 0, 0, 275, 550, '2014-04-01 23:00:07'),
(2, 21, 228, '2014-04-12', 20, 40, 475, 950, '2014-04-01 23:00:07'),
(3, 21, 229, '2014-04-12', 20, 40, 475, 950, '2014-04-01 23:00:07'),
(4, 21, 230, '2014-04-12', 0, 0, 475, 950, '2014-04-01 23:00:07'),
(5, 21, 231, '2014-04-12', 10, 55, 475, 950, '2014-04-01 23:00:08'),
(6, 21, 232, '2014-04-19', 20, 40, 475, 950, '2014-04-01 23:00:08'),
(7, 21, 233, '2014-04-19', 0, 0, 475, 950, '2014-04-01 23:00:08'),
(8, 21, 234, '2014-04-19', 0, 0, 475, 950, '2014-04-01 23:00:08'),
(9, 21, 235, '2014-04-19', 10, 55, 475, 950, '2014-04-01 23:00:08'),
(10, 23, 300, '2014-04-04', 0, 0, 220, 350, '2014-04-01 23:00:08'),
(11, 23, 301, '2014-04-04', 0, 0, 209, 333, '2014-04-01 23:00:08'),
(12, 23, 302, '2014-04-04', 0, 0, 209, 333, '2014-04-01 23:00:08'),
(13, 23, 303, '2014-04-04', 0, 0, 209, 333, '2014-04-01 23:00:08'),
(14, 23, 304, '2014-04-04', 0, 0, 209, 333, '2014-04-01 23:00:08'),
(15, 23, 305, '2014-04-11', 0, 0, 209, 333, '2014-04-01 23:00:08'),
(16, 23, 306, '2014-04-18', 0, 0, 209, 333, '2014-04-01 23:00:08'),
(17, 23, 307, '2014-04-25', 0, 0, 209, 333, '2014-04-01 23:00:08'),
(18, 24, 308, '2014-04-02', 0, 0, 132, 210, '2014-04-01 23:00:08'),
(19, 24, 309, '2014-04-02', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(20, 24, 310, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(21, 24, 311, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(22, 24, 312, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(23, 24, 313, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(24, 24, 314, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(25, 24, 315, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(26, 24, 316, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(27, 24, 317, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(28, 24, 318, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(29, 24, 319, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(30, 24, 320, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(31, 24, 321, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(32, 24, 322, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(33, 24, 323, '2014-04-03', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(34, 24, 324, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(35, 24, 325, '2014-04-04', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(36, 24, 326, '2014-04-09', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(37, 24, 327, '2014-04-09', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(38, 24, 328, '2014-04-16', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(39, 24, 329, '2014-04-16', 0, 0, 132, 210, '2014-04-01 23:00:09'),
(40, 21, 236, '2014-05-03', 20, 40, 475, 950, '2014-04-01 23:00:09'),
(41, 21, 237, '2014-05-03', 0, 0, 475, 950, '2014-04-01 23:00:10'),
(42, 21, 238, '2014-05-03', 0, 0, 475, 950, '2014-04-01 23:00:10'),
(43, 21, 239, '2014-05-03', 10, 55, 475, 950, '2014-04-01 23:00:10'),
(44, 21, 240, '2014-05-10', 20, 40, 475, 950, '2014-04-01 23:00:10'),
(45, 21, 241, '2014-05-10', 0, 0, 475, 950, '2014-04-01 23:00:10'),
(46, 21, 242, '2014-05-10', 0, 0, 475, 950, '2014-04-01 23:00:10'),
(47, 21, 243, '2014-05-10', 10, 55, 475, 950, '2014-04-01 23:00:10'),
(48, 21, 244, '2014-05-17', 20, 40, 475, 950, '2014-04-01 23:00:10'),
(49, 21, 245, '2014-05-17', 0, 0, 475, 950, '2014-04-01 23:00:10'),
(50, 21, 246, '2014-05-17', 0, 0, 475, 950, '2014-04-01 23:00:10'),
(51, 21, 247, '2014-05-17', 10, 55, 475, 950, '2014-04-01 23:00:10'),
(52, 21, 248, '2014-05-15', 110, 110, 242, 385, '2014-04-01 23:00:10'),
(53, 21, 249, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:10'),
(54, 21, 250, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(55, 21, 251, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(56, 21, 252, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(57, 21, 253, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(58, 21, 254, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(59, 21, 255, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(60, 21, 256, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(61, 21, 257, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(62, 21, 258, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(63, 21, 259, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(64, 21, 260, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(65, 21, 261, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:11'),
(66, 21, 262, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(67, 21, 263, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(68, 21, 264, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(69, 21, 265, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(70, 21, 266, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(71, 21, 267, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(72, 21, 268, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(73, 21, 269, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(74, 21, 270, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(75, 21, 271, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12'),
(76, 21, 272, '2014-05-15', 0, 0, 242, 385, '2014-04-01 23:00:12');

-- --------------------------------------------------------

--
-- Table structure for table `forum_messages`
--

CREATE TABLE `forum_messages` (
  `message_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `topic_id` bigint(20) NOT NULL,
  `message` text NOT NULL,
  `posted_by` bigint(20) NOT NULL,
  `posted_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`message_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;

--
-- Dumping data for table `forum_messages`
--

INSERT INTO `forum_messages` (`message_id`, `topic_id`, `message`, `posted_by`, `posted_on`) VALUES
(1, 3, 'I have had people ask if they are ok on breaks... yes but do it off site', 1, '2014-03-19 11:00:17'),
(2, 3, 'Ok what about making calls related to work?', 29, '2014-03-31 07:17:11'),
(3, 1, 'I can work this Saturday?', 29, '2014-03-31 07:18:03');

-- --------------------------------------------------------

--
-- Table structure for table `forum_poll_answers`
--

CREATE TABLE `forum_poll_answers` (
  `poll_answer_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `topic_id` bigint(20) NOT NULL,
  `answer` text NOT NULL,
  `answer_count` int(11) NOT NULL DEFAULT '0',
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`poll_answer_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=35 ;

--
-- Dumping data for table `forum_poll_answers`
--

INSERT INTO `forum_poll_answers` (`poll_answer_id`, `topic_id`, `answer`, `answer_count`, `created_on`) VALUES
(25, 2, 'Love them', 0, '2014-03-19 04:08:14'),
(26, 2, 'They are ok', 2, '2014-03-31 07:17:18'),
(27, 2, 'Hate them', 0, '2014-03-19 04:08:14'),
(32, 6, 'Good', 1, '2014-04-01 05:43:18'),
(33, 6, 'OK', 1, '2014-04-01 05:43:31'),
(34, 6, 'Bad', 0, '2014-04-01 05:43:06');

-- --------------------------------------------------------

--
-- Table structure for table `forum_topics`
--

CREATE TABLE `forum_topics` (
  `topic_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `message` text NOT NULL,
  `group_id` int(11) NOT NULL,
  `document_type` enum('image','file','null') NOT NULL DEFAULT 'null',
  `document_name` varchar(255) NOT NULL,
  `type` enum('poll','conversation') NOT NULL DEFAULT 'conversation',
  `created_by` bigint(20) NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `last_replied_by` bigint(20) NOT NULL,
  `last_replied_on` datetime NOT NULL,
  PRIMARY KEY (`topic_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=7 ;

--
-- Dumping data for table `forum_topics`
--

INSERT INTO `forum_topics` (`topic_id`, `title`, `message`, `group_id`, `document_type`, `document_name`, `type`, `created_by`, `created_on`, `last_replied_by`, `last_replied_on`) VALUES
(1, 'New shift', 'A new shift has been added. Login to your account and submit availability ', 0, 'null', '', 'conversation', 1, '2014-03-19 04:07:51', 0, '0000-00-00 00:00:00'),
(2, 'What do you think about our new uniform?', '["Love them","They are ok","Hate them",""]', 0, 'null', '', 'poll', 1, '2014-03-19 04:08:14', 0, '0000-00-00 00:00:00'),
(3, 'MOBILE PHONES OFF AT SHIFTS', 'Guys many clients have complained about staff using mobile phones whilst working... This is certainly not permissible. All mobile phones must be switched of during shifts.', 0, 'null', '', 'conversation', 1, '2014-03-19 10:59:32', 0, '0000-00-00 00:00:00'),
(4, 'Car Pool', 'Does anyone need a lift to this weeks shifts... I have room :)', 0, 'null', '', 'conversation', 29, '2014-03-31 07:18:59', 0, '0000-00-00 00:00:00'),
(6, 'Question', '["Good","OK","Bad",""]', 0, 'null', '', 'poll', 1, '2014-04-01 05:43:06', 0, '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `forum_user_poll_answers`
--

CREATE TABLE `forum_user_poll_answers` (
  `user_poll_answer_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `topic_id` bigint(20) NOT NULL,
  `poll_answer_id` bigint(20) NOT NULL,
  `user_id` bigint(20) NOT NULL,
  `answered_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_poll_answer_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8 ;

--
-- Dumping data for table `forum_user_poll_answers`
--

INSERT INTO `forum_user_poll_answers` (`user_poll_answer_id`, `topic_id`, `poll_answer_id`, `user_id`, `answered_on`) VALUES
(2, 2, 26, 1, '2014-03-19 04:08:24'),
(3, 2, 26, 29, '2014-03-31 07:17:18'),
(6, 6, 32, 1, '2014-04-01 05:43:18'),
(7, 6, 33, 29, '2014-04-01 05:43:31');

-- --------------------------------------------------------

--
-- Table structure for table `invoices`
--

CREATE TABLE `invoices` (
  `invoice_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `invoice_number` varchar(100) NOT NULL,
  `po_number` varchar(100) NOT NULL,
  `client_id` bigint(20) NOT NULL,
  `jobs` text NOT NULL,
  `title` varchar(250) NOT NULL,
  `gst` decimal(10,2) NOT NULL,
  `total_amount` decimal(10,2) NOT NULL,
  `status` int(11) NOT NULL COMMENT '0: created, 2: generated, 3: paid',
  `breakdown` tinyint(4) NOT NULL,
  `issued_by` bigint(20) NOT NULL,
  `issued_date` datetime NOT NULL,
  `due_date` datetime NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `paid_on` datetime NOT NULL,
  `client_company_name` varchar(100) NOT NULL,
  `client_address` varchar(100) NOT NULL,
  `client_suburb` varchar(100) NOT NULL,
  `client_state` varchar(100) NOT NULL,
  `client_postcode` varchar(100) NOT NULL,
  `client_phone` varchar(100) NOT NULL,
  `client_email_address` varchar(100) NOT NULL,
  `profile_company_name` varchar(100) NOT NULL,
  `profile_abn` varchar(100) NOT NULL,
  `profile_company_email` varchar(255) NOT NULL,
  `profile_company_phone` varchar(255) NOT NULL,
  PRIMARY KEY (`invoice_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=28 ;

--
-- Dumping data for table `invoices`
--

INSERT INTO `invoices` (`invoice_id`, `invoice_number`, `po_number`, `client_id`, `jobs`, `title`, `gst`, `total_amount`, `status`, `breakdown`, `issued_by`, `issued_date`, `due_date`, `created_on`, `paid_on`, `client_company_name`, `client_address`, `client_suburb`, `client_state`, `client_postcode`, `client_phone`, `client_email_address`, `profile_company_name`, `profile_abn`, `profile_company_email`, `profile_company_phone`) VALUES
(4, '', '', 31, 'a:1:{i:0;a:2:{s:5:"value";s:2:"18";s:5:"label";s:24:"Alfred Health - Mar 2014";}}', 'Services Rended - March 2013', 1266.59, 13932.50, 3, 1, 1, '2014-03-25 00:00:00', '2014-03-30 00:00:00', '2014-03-20 04:35:23', '2014-03-20 15:52:46', '', '', '', '', '', '', '', '', '', '', ''),
(11, '', '', 34, 'a:1:{i:0;a:2:{s:5:"value";s:2:"21";s:5:"label";s:15:"MCG - June 2014";}}', 'Services Rended', 51.82, 570.00, 3, 0, 1, '2014-03-24 18:24:03', '2014-04-23 17:24:03', '2014-03-24 07:24:03', '2014-03-24 18:27:19', '', '', '', '', '', '', '', '', '', '', ''),
(12, '', '', 34, 'a:1:{i:0;a:2:{s:5:"value";s:2:"21";s:5:"label";s:15:"MCG - June 2014";}}', 'Services Rended', 25.91, 285.00, 3, 0, 1, '2014-03-24 18:25:47', '2014-04-23 17:25:47', '2014-03-24 07:25:47', '2014-03-27 17:40:40', '', '', '', '', '', '', '', '', '', '', ''),
(13, '', '', 34, 'a:1:{i:0;a:2:{s:5:"value";s:2:"21";s:5:"label";s:15:"MCG - June 2014";}}', 'Services Rended', 221.82, 2480.00, 3, 1, 1, '2014-03-30 00:00:00', '2014-03-30 00:00:00', '2014-03-24 23:52:46', '2014-03-27 17:40:23', '', '', '', '', '', '', 'jane@mccg.com', '', '', '', ''),
(16, '', '20A', 31, 'a:1:{i:0;a:2:{s:5:"value";s:2:"19";s:5:"label";s:34:"Alfred Hospital - June 2014 Shifts";}}', 'Services Rended', 41.36, 495.00, 2, 0, 1, '2014-03-28 18:19:56', '2014-04-27 17:19:56', '2014-03-28 07:19:56', '0000-00-00 00:00:00', '', '', '', '', '', '', '', '', '', '', ''),
(18, '', '', 31, 'a:1:{i:0;a:2:{s:5:"value";s:2:"18";s:5:"label";s:24:"Alfred Health - Mar 2014";}}', 'Services Rended', 319.09, 3510.00, 2, 0, 1, '2014-03-28 18:45:16', '2014-04-27 17:45:16', '2014-03-28 07:45:16', '0000-00-00 00:00:00', '', '', '', '', '', '', '', '', '', '', ''),
(19, '', '', 31, 'a:1:{i:0;a:2:{s:5:"value";s:2:"18";s:5:"label";s:24:"Alfred Health - Mar 2014";}}', 'Services Rended', 271.14, 2982.50, 2, 0, 1, '2014-03-31 18:19:43', '2014-04-30 17:19:43', '2014-03-31 07:19:43', '0000-00-00 00:00:00', '', '', '', '', '', '', '', '', '', '', ''),
(21, '', '', 31, 'a:1:{i:0;a:2:{s:5:"value";s:2:"18";s:5:"label";s:24:"Alfred Health - Mar 2014";}}', 'Services Rended', 19.09, 210.00, 2, 0, 1, '2014-04-01 10:13:59', '2014-05-01 09:13:59', '2014-03-31 23:13:59', '0000-00-00 00:00:00', '', '', '', '', '', '', '', '', '', '', ''),
(22, '', '', 34, 'a:1:{i:0;a:2:{s:5:"value";s:2:"21";s:5:"label";s:15:"MCG - June 2014";}}', 'Services Rended', 724.09, 8045.00, 2, 1, 1, '2014-04-01 11:33:44', '2014-05-01 10:33:44', '2014-04-01 00:33:44', '0000-00-00 00:00:00', '', '', '', '', '', '', '', '', '', 'accounts@staffmaster.com.au', ''),
(24, '', '', 33, 'a:1:{i:0;a:2:{s:5:"value";s:2:"24";s:5:"label";s:30:"CUB Promotion - MCG April 2014";}}', 'Services Rended', 133.64, 1470.00, 3, 0, 1, '2014-04-02 09:59:35', '2014-05-02 08:59:35', '2014-04-01 22:59:35', '2014-04-02 10:00:00', '', '', '', '', '', '', '', '', '', '', ''),
(25, '', '20303', 31, 'a:1:{i:0;a:2:{s:5:"value";s:2:"18";s:5:"label";s:24:"Alfred Health - Mar 2014";}}', 'Services Rended', 541.14, 6952.50, 2, 1, 1, '2014-04-02 10:37:51', '2014-04-17 00:00:00', '2014-04-01 23:37:51', '0000-00-00 00:00:00', '', '', '', '', '', '', '', '', '', 'invoice@staffmaster.com.au', ''),
(27, '', '', 31, 'a:1:{i:0;a:2:{s:5:"value";s:2:"18";s:5:"label";s:24:"Alfred Health - Mar 2014";}}', 'Services Rended', 31.02, 741.25, 0, 0, 0, '2014-04-04 17:19:59', '2014-05-04 16:19:59', '2014-04-04 06:19:59', '0000-00-00 00:00:00', '', '', '', '', '', '', '', '', '', '', '');

-- --------------------------------------------------------

--
-- Table structure for table `invoice_items`
--

CREATE TABLE `invoice_items` (
  `item_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `invoice_id` bigint(20) NOT NULL,
  `job_id` bigint(20) NOT NULL,
  `expense_id` bigint(20) NOT NULL,
  `include_timesheets` tinyint(4) NOT NULL,
  `title` varchar(1000) NOT NULL,
  `tax` int(11) NOT NULL COMMENT '0: no, 1: yes, 2: tax free',
  `amount` decimal(10,2) NOT NULL,
  PRIMARY KEY (`item_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=60 ;

--
-- Dumping data for table `invoice_items`
--

INSERT INTO `invoice_items` (`item_id`, `invoice_id`, `job_id`, `expense_id`, `include_timesheets`, `title`, `tax`, `amount`) VALUES
(5, 4, 18, 0, 1, 'Alfred Health - Mar 2014', 1, 2932.50),
(8, 4, 18, 0, 0, 'Venue Hire', 2, 11000.00),
(19, 11, 21, 0, 1, 'MCG - June 2014', 1, 570.00),
(20, 12, 21, 0, 1, 'MCG - June 2014', 1, 285.00),
(21, 13, 21, 0, 1, 'MCG - June 2014', 1, 1440.00),
(22, 13, 21, 7, 0, 'Travel Costs', 0, 40.00),
(23, 13, 21, 0, 0, 'Venue Hire', 1, 1000.00),
(30, 16, 19, 0, 1, 'Alfred Hospital - June 2014 Shifts', 1, 420.00),
(31, 16, 19, 3, 0, 'Travel Cost', 2, 35.00),
(32, 16, 19, 4, 0, 'Milk', 0, 40.00),
(35, 18, 18, 0, 1, 'Alfred Health - Mar 2014', 1, 3460.00),
(36, 18, 18, 5, 0, 'Travel Costs', 2, 50.00),
(37, 19, 18, 0, 1, 'Alfred Health - Mar 2014', 1, 2932.50),
(38, 19, 18, 5, 0, 'Travel Costs', 2, 50.00),
(41, 21, 18, 0, 1, 'Alfred Health - Mar 2014', 1, 210.00),
(42, 22, 21, 0, 1, 'MCG - June 2014', 1, 6965.00),
(43, 22, 21, 7, 0, 'Travel Costs', 0, 40.00),
(44, 22, 21, 6, 0, 'Travel Cost', 0, 40.00),
(45, 22, 21, 0, 0, 'Venue Hire', 1, 1000.00),
(49, 24, 24, 0, 1, 'CUB Promotion - MCG April 2014', 1, 1470.00),
(50, 25, 18, 0, 1, 'Alfred Health - Mar 2014', 1, 5782.50),
(51, 25, 18, 5, 0, 'Travel Costs', 2, 50.00),
(52, 25, 18, 9, 0, 'Milk', 2, 40.00),
(53, 25, 18, 11, 0, 'Milk', 2, 40.00),
(54, 25, 18, 12, 0, 'Milk', 2, 40.00),
(55, 25, 18, 0, 0, 'Venue Hire', 0, 1000.00),
(57, 27, 18, 0, 1, 'Alfred Health - Mar 2014', 1, 341.25),
(58, 27, 18, 13, 0, 'Taxi', 1, 0.00),
(59, 27, 18, 14, 0, 'Taxi', 0, 400.00);

-- --------------------------------------------------------

--
-- Table structure for table `jobs`
--

CREATE TABLE `jobs` (
  `job_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `status` tinyint(4) NOT NULL COMMENT '0: temporary, 1: created',
  `client_id` bigint(20) NOT NULL,
  `user_id` bigint(20) NOT NULL,
  `name` varchar(255) NOT NULL,
  `createdon` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`job_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=25 ;

--
-- Dumping data for table `jobs`
--

INSERT INTO `jobs` (`job_id`, `status`, `client_id`, `user_id`, `name`, `createdon`) VALUES
(17, 0, 33, 1, 'Test Job', '2014-03-06 02:17:35'),
(18, 0, 31, 1, 'Alfred Health - Mar 2014', '2014-03-19 03:58:50'),
(19, 0, 31, 1, 'Alfred Hospital - June 2014 Shifts', '2014-03-19 23:50:44'),
(20, 0, 33, 1, 'CUB Promotion - MCG April 2014', '2014-03-21 01:08:51'),
(21, 0, 34, 1, 'MCG - June 2014', '2014-03-24 03:56:19'),
(22, 0, 33, 1, 'StatsReportTest', '2014-03-26 03:46:36'),
(23, 0, 31, 1, 'Builders Work April 2013', '2014-04-01 00:17:15'),
(24, 0, 33, 1, 'CUB Promotion - MCG April 2014', '2014-04-01 22:56:09');

-- --------------------------------------------------------

--
-- Table structure for table `job_shifts`
--

CREATE TABLE `job_shifts` (
  `shift_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `status` tinyint(4) NOT NULL COMMENT '-2: deleted, -1: rejected, 0: not assigned, 1: unconfirmed, 2: confirmed, 3: finished',
  `job_id` bigint(20) NOT NULL,
  `staff_id` bigint(20) NOT NULL DEFAULT '0',
  `supervisor_id` bigint(20) NOT NULL,
  `job_date` date NOT NULL,
  `start_time` bigint(20) NOT NULL,
  `finish_time` bigint(20) NOT NULL,
  `break_time` text NOT NULL,
  `venue_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  `uniform_id` int(11) NOT NULL,
  `payrate_id` int(11) NOT NULL,
  `payrate_type` varchar(10) NOT NULL,
  `expenses` text NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_on` datetime NOT NULL,
  PRIMARY KEY (`shift_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=338 ;

--
-- Dumping data for table `job_shifts`
--

INSERT INTO `job_shifts` (`shift_id`, `status`, `job_id`, `staff_id`, `supervisor_id`, `job_date`, `start_time`, `finish_time`, `break_time`, `venue_id`, `role_id`, `uniform_id`, `payrate_id`, `payrate_type`, `expenses`, `created_on`, `modified_on`) VALUES
(188, 3, 18, 1, 1, '2014-03-17', 1395018000, 1395043200, '[{"length":1800,"start_at":1395025200}]', 7, 7, 1, 1, '', '', '2014-03-19 03:59:30', '2014-03-19 15:00:36'),
(189, -1, 18, 1, 1, '2014-03-17', 1395018000, 1395043200, '[{"length":1800,"start_at":1395025200}]', 7, 7, 1, 1, '', '', '2014-03-19 03:59:30', '2014-03-19 18:02:35'),
(190, 1, 18, 13, 1, '2014-03-17', 1395018000, 1395043200, '[{"length":1800,"start_at":1395025200}]', 7, 7, 5, 1, '', '', '2014-03-19 03:59:30', '2014-03-26 15:39:26'),
(191, 3, 18, 1, 1, '2014-03-20', 1395277200, 1395302400, '[{"length":1800,"start_at":1395284400}]', 7, 7, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:12:"Travel Costs";s:10:"staff_cost";s:2:"25";s:11:"client_cost";s:2:"50";s:3:"tax";s:1:"2";}}', '2014-03-19 03:59:56', '2014-03-24 14:56:05'),
(192, 3, 18, 1, 1, '2014-03-21', 1395363600, 1395388800, '[{"length":1800,"start_at":1395370800}]', 7, 7, 1, 1, '', '', '2014-03-19 03:59:56', '2014-03-19 15:00:37'),
(193, 3, 18, 23, 1, '2014-03-18', 1395104400, 1395140400, '[{"length":1800,"start_at":1395126000}]', 7, 7, 1, 2, '', '', '2014-03-19 23:28:58', '2014-03-20 11:04:35'),
(194, 3, 18, 23, 1, '2014-03-21', 1395363600, 1395399600, '[{"length":1800,"start_at":1395385200}]', 7, 7, 1, 2, '', '', '2014-03-19 23:29:22', '2014-03-20 11:04:35'),
(195, 3, 18, 23, 1, '2014-03-22', 1395450000, 1395486000, '[{"length":1800,"start_at":1395471600}]', 7, 7, 1, 2, '', '', '2014-03-19 23:29:22', '2014-03-20 11:04:35'),
(196, 3, 18, 23, 1, '2014-03-23', 1395536400, 1395572400, '[{"length":1800,"start_at":1395558000}]', 7, 7, 1, 2, '', '', '2014-03-19 23:29:22', '2014-03-20 11:04:35'),
(197, 0, 18, 0, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395644400}]', 7, 7, 1, 2, '', '', '2014-03-19 23:29:22', '2014-03-20 10:30:51'),
(198, 3, 18, 1, 1, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395730800}]', 7, 7, 5, 2, '', '', '2014-03-19 23:29:22', '2014-03-24 14:56:05'),
(199, 3, 18, 1, 1, '2014-03-21', 1395363600, 1395399600, '[{"length":1800,"start_at":1395385200}]', 7, 7, 1, 2, '', '', '2014-03-19 23:29:44', '2014-03-20 11:04:35'),
(200, 3, 18, 1, 1, '2014-03-22', 1395450000, 1395486000, '[{"length":1800,"start_at":1395471600}]', 7, 7, 1, 2, '', '', '2014-03-19 23:29:44', '2014-03-20 11:04:35'),
(201, 1, 18, 1, 1, '2014-03-30', 1396141200, 1396177200, '[{"length":1800,"start_at":1396162800}]', 7, 7, 1, 2, '', '', '2014-03-19 23:30:12', '2014-03-20 11:03:28'),
(202, 0, 18, 0, 1, '2014-03-30', 1396141200, 1396177200, '[{"length":1800,"start_at":1396162800}]', 7, 7, 1, 2, '', '', '2014-03-19 23:30:12', '2014-03-20 10:31:03'),
(203, 3, 18, 23, 1, '2014-03-31', 1396227600, 1396263600, '[{"length":1800,"start_at":1396249200}]', 7, 7, 1, 2, '', '', '2014-03-19 23:30:12', '2014-03-20 11:04:35'),
(204, 3, 18, 1, 1, '2014-03-31', 1396227600, 1396263600, '[{"length":1800,"start_at":1396249200}]', 7, 7, 1, 2, '', '', '2014-03-19 23:30:12', '2014-03-20 11:04:35'),
(205, 3, 19, 1, 1, '2014-03-21', 1395363600, 1395403200, '[{"length":1800,"start_at":1395381600}]', 7, 11, 1, 3, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"25";s:11:"client_cost";s:2:"35";s:3:"tax";s:1:"2";}}', '2014-03-19 23:52:19', '2014-03-20 11:04:35'),
(206, 3, 19, 1, 1, '2014-03-21', 1395363600, 1395403200, '[{"length":1800,"start_at":1395381600}]', 7, 17, 1, 2, '', '', '2014-03-19 23:52:19', '2014-04-01 10:09:45'),
(207, 0, 19, 0, 1, '2014-03-21', 1395363600, 1395403200, '[{"length":1800,"start_at":1395381600}]', 7, 17, 1, 2, '', '', '2014-03-19 23:52:19', '0000-00-00 00:00:00'),
(208, 0, 19, 0, 0, '2014-04-04', 1396573200, 1396594800, '[{"length":1800,"start_at":1396591200}]', 1, 12, 7, 1, '', '', '2014-03-20 03:57:31', '0000-00-00 00:00:00'),
(209, 0, 20, 0, 0, '2014-03-27', 1395882000, 1395918000, '[{"length":1800,"start_at":1395889200}]', 1, 8, 6, 0, '', '', '2014-03-21 01:11:21', '0000-00-00 00:00:00'),
(210, 3, 21, 1, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-03-24 15:05:12'),
(211, 3, 21, 12, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-03-24 15:05:12'),
(212, 3, 21, 11, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-03-24 15:05:12'),
(213, 3, 21, 19, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-03-24 15:05:12'),
(214, 3, 21, 1, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', '2014-03-24 04:03:55', '2014-03-24 18:25:15'),
(215, 1, 21, 11, 1, '2014-03-24', 1395622800, 1395660600, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-04-01 10:05:02'),
(216, 3, 21, 12, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-04-01 10:09:45'),
(217, 1, 21, 1, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:8:"Uniforms";s:10:"staff_cost";s:2:"10";s:11:"client_cost";s:2:"55";s:3:"tax";s:1:"0";}}', '2014-03-24 04:03:55', '2014-04-01 10:05:39'),
(218, 0, 21, 0, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-04-04 12:11:59'),
(219, 3, 21, 1, 1, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', '2014-03-24 04:03:55', '2014-04-01 10:09:45'),
(220, 3, 21, 1, 1, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(221, 3, 21, 12, 1, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(222, 3, 21, 11, 1, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(223, 3, 21, 19, 1, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(224, 3, 21, 1, 1, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(225, 3, 21, 12, 1, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(226, 3, 21, 11, 1, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(227, 3, 21, 19, 1, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', '2014-03-24 04:04:51', '2014-03-24 15:05:12'),
(228, 3, 21, 1, 1, '2014-04-12', 1397268000, 1397304000, '[{"length":1800,"start_at":1397278800}]', 1, 8, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-03-24 18:25:15'),
(229, 1, 21, 1, 1, '2014-04-12', 1397268000, 1397304000, '[{"length":1800,"start_at":1397278800}]', 1, 8, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"1";}}', '2014-03-24 04:35:15', '2014-04-01 11:29:36'),
(230, 1, 21, 1, 1, '2014-04-12', 1397268000, 1397304000, '[{"length":1800,"start_at":1397278800}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-04 12:11:29'),
(231, 0, 21, 0, 1, '2014-04-12', 1397268000, 1397304000, '[{"length":1800,"start_at":1397278800}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:8:"Uniforms";s:10:"staff_cost";s:2:"10";s:11:"client_cost";s:2:"55";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(232, 0, 21, 0, 1, '2014-04-19', 1397872800, 1397908800, '[{"length":1800,"start_at":1397883600}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(233, 0, 21, 0, 1, '2014-04-19', 1397872800, 1397908800, '[{"length":1800,"start_at":1397883600}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(234, 0, 21, 0, 1, '2014-04-19', 1397872800, 1397908800, '[{"length":1800,"start_at":1397883600}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(235, 0, 21, 0, 1, '2014-04-19', 1397872800, 1397908800, '[{"length":1800,"start_at":1397883600}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:8:"Uniforms";s:10:"staff_cost";s:2:"10";s:11:"client_cost";s:2:"55";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(236, 0, 21, 0, 1, '2014-05-03', 1399082400, 1399118400, '[{"length":1800,"start_at":1399093200}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(237, 0, 21, 0, 1, '2014-05-03', 1399082400, 1399118400, '[{"length":1800,"start_at":1399093200}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(238, 0, 21, 0, 1, '2014-05-03', 1399082400, 1399118400, '[{"length":1800,"start_at":1399093200}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(239, 0, 21, 0, 1, '2014-05-03', 1399082400, 1399118400, '[{"length":1800,"start_at":1399093200}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:8:"Uniforms";s:10:"staff_cost";s:2:"10";s:11:"client_cost";s:2:"55";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(240, 0, 21, 0, 1, '2014-05-10', 1399687200, 1399723200, '[{"length":1800,"start_at":1399698000}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(241, 0, 21, 0, 1, '2014-05-10', 1399687200, 1399723200, '[{"length":1800,"start_at":1399698000}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(242, 0, 21, 0, 1, '2014-05-10', 1399687200, 1399723200, '[{"length":1800,"start_at":1399698000}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(243, 0, 21, 0, 1, '2014-05-10', 1399687200, 1399723200, '[{"length":1800,"start_at":1399698000}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:8:"Uniforms";s:10:"staff_cost";s:2:"10";s:11:"client_cost";s:2:"55";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(244, 0, 21, 0, 1, '2014-05-17', 1400292000, 1400328000, '[{"length":1800,"start_at":1400302800}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(245, 0, 21, 0, 1, '2014-05-17', 1400292000, 1400328000, '[{"length":1800,"start_at":1400302800}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(246, 0, 21, 0, 1, '2014-05-17', 1400292000, 1400328000, '[{"length":1800,"start_at":1400302800}]', 1, 1, 6, 1, '', '', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(247, 0, 21, 0, 1, '2014-05-17', 1400292000, 1400328000, '[{"length":1800,"start_at":1400302800}]', 1, 1, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:8:"Uniforms";s:10:"staff_cost";s:2:"10";s:11:"client_cost";s:2:"55";s:3:"tax";s:1:"0";}}', '2014-03-24 04:35:15', '2014-04-02 10:51:15'),
(248, 1, 21, 1, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Taxi";s:10:"staff_cost";s:3:"100";s:11:"client_cost";s:3:"100";s:3:"tax";s:1:"2";}}', '2014-03-24 05:39:12', '2014-04-04 11:14:14'),
(249, 2, 21, 23, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-04 10:44:52'),
(250, -1, 21, 1, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-04 10:43:06'),
(251, 2, 21, 19, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-04 10:44:06'),
(252, 1, 21, 15, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-04 10:43:16'),
(253, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(254, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(255, 1, 21, 25, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-04 10:45:05'),
(256, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(257, -1, 21, 1, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-04 10:45:14'),
(258, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(259, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(260, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(261, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(262, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(263, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(264, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(265, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(266, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(267, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(268, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(269, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(270, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(271, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(272, 0, 21, 0, 1, '2014-05-15', 1400119200, 1400158800, '', 1, 1, 5, 2, '', '', '2014-03-24 05:39:12', '2014-04-02 10:51:15'),
(273, 3, 18, 1, 1, '2014-03-28', 1395968400, 1396004400, '[{"length":1800,"start_at":1395986400}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', '2014-03-24 23:43:03', '2014-04-01 10:09:45'),
(274, 0, 18, 0, 1, '2014-03-28', 1395968400, 1396004400, '[{"length":1800,"start_at":1395986400}]', 1, 11, 5, 1, '', '', '2014-03-24 23:43:03', '0000-00-00 00:00:00'),
(275, 0, 18, 0, 1, '2014-03-28', 1395968400, 1396004400, '[{"length":1800,"start_at":1395986400}]', 1, 11, 5, 1, '', '', '2014-03-24 23:43:03', '0000-00-00 00:00:00'),
(276, 3, 18, 1, 1, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395813600}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', '2014-03-24 23:44:50', '2014-04-01 10:09:45'),
(277, 3, 18, 1, 1, '2014-03-27', 1395882000, 1395918000, '[{"length":1800,"start_at":1395900000}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', '2014-03-24 23:44:50', '2014-04-01 10:09:45'),
(278, 3, 18, 1, 1, '2014-03-28', 1395968400, 1396004400, '[{"length":1800,"start_at":1395986400}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', '2014-03-24 23:44:50', '2014-04-01 10:09:45'),
(279, 0, 22, 0, 0, '2014-03-30', 1396141200, 1396144800, '', 6, 1, 5, 3, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Taxi";s:10:"staff_cost";s:3:"100";s:11:"client_cost";s:3:"200";s:3:"tax";s:1:"0";}}', '2014-03-26 03:47:10', '2014-03-26 14:50:03'),
(280, 3, 21, 13, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 13, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-01 10:09:45'),
(281, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(282, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(283, 3, 21, 19, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-01 10:09:45'),
(284, 3, 21, 19, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-01 10:09:45'),
(285, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(286, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(287, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(288, 3, 21, 10, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 13, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-01 10:09:45'),
(289, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(290, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(291, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(292, 1, 21, 1, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-01 10:06:40'),
(293, 1, 21, 11, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-01 10:06:46'),
(294, 3, 21, 18, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-01 10:09:45'),
(295, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(296, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(297, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(298, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(299, 0, 21, 0, 0, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 1, 5, 1, '', '', '2014-03-28 07:31:29', '2014-04-02 10:51:15'),
(300, 1, 23, 1, 1, '2014-04-04', 1396573200, 1396611000, '[{"length":1800,"start_at":1396591200}]', 1, 17, 7, 2, '', '', '2014-04-01 00:19:58', '2014-04-01 11:20:39'),
(301, 3, 23, 24, 1, '2014-04-04', 1396573200, 1396609200, '[{"length":1800,"start_at":1396591200}]', 7, 18, 7, 2, '', '', '2014-04-01 00:19:58', '2014-04-02 09:58:56'),
(302, 0, 23, 0, 1, '2014-04-04', 1396573200, 1396609200, '[{"length":1800,"start_at":1396591200}]', 7, 18, 7, 2, '', '', '2014-04-01 00:19:58', '0000-00-00 00:00:00'),
(303, 0, 23, 0, 1, '2014-04-04', 1396573200, 1396609200, '[{"length":1800,"start_at":1396591200}]', 7, 18, 7, 2, '', '', '2014-04-01 00:19:58', '0000-00-00 00:00:00'),
(304, 0, 23, 0, 1, '2014-04-04', 1396573200, 1396609200, '[{"length":1800,"start_at":1396591200}]', 7, 18, 7, 2, '', '', '2014-04-01 00:19:58', '0000-00-00 00:00:00'),
(305, 3, 23, 24, 1, '2014-04-11', 1397181600, 1397217600, '[{"length":1800,"start_at":1397199600}]', 7, 18, 7, 2, '', '', '2014-04-01 00:22:04', '2014-04-02 09:58:56'),
(306, 3, 23, 24, 1, '2014-04-18', 1397786400, 1397822400, '[{"length":1800,"start_at":1397804400}]', 7, 18, 7, 2, '', '', '2014-04-01 00:22:04', '2014-04-02 09:58:56'),
(307, 3, 23, 24, 1, '2014-04-25', 1398391200, 1398427200, '[{"length":1800,"start_at":1398409200}]', 7, 18, 7, 2, '', '', '2014-04-01 00:22:04', '2014-04-02 09:58:56'),
(308, 3, 24, 1, 1, '2014-04-02', 1396400400, 1396422000, '', 0, 0, 6, 2, '', '', '2014-04-01 22:56:39', '2014-04-02 09:58:56'),
(309, 3, 24, 15, 1, '2014-04-02', 1396400400, 1396422000, '', 0, 0, 6, 2, '', '', '2014-04-01 22:56:39', '2014-04-02 09:58:56'),
(310, 3, 24, 1, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:37', '2014-04-02 09:58:56'),
(311, 3, 24, 15, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:37', '2014-04-02 09:58:56'),
(312, 3, 24, 1, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:37', '2014-04-02 09:58:56'),
(313, 3, 24, 15, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:37', '2014-04-02 09:58:56'),
(314, 3, 24, 1, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:53', '2014-04-02 09:58:56'),
(315, 3, 24, 15, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:53', '2014-04-02 09:58:56'),
(316, 3, 24, 1, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:56', '2014-04-02 09:58:56'),
(317, 3, 24, 15, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:57:56', '2014-04-02 09:58:56'),
(318, 3, 24, 1, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:05', '2014-04-02 09:58:56'),
(319, 3, 24, 15, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:05', '2014-04-02 09:58:56'),
(320, 3, 24, 1, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:05', '2014-04-02 09:58:56'),
(321, 3, 24, 15, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:05', '2014-04-02 09:58:56'),
(322, 3, 24, 1, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:10', '2014-04-02 09:58:56'),
(323, 3, 24, 15, 1, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:10', '2014-04-02 09:58:56'),
(324, 3, 24, 1, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:16', '2014-04-02 09:58:56'),
(325, 3, 24, 15, 1, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:16', '2014-04-02 09:58:56'),
(326, 3, 24, 1, 1, '2014-04-09', 1397008800, 1397030400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:16', '2014-04-02 09:58:56'),
(327, 3, 24, 15, 1, '2014-04-09', 1397008800, 1397030400, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:16', '2014-04-02 09:58:56'),
(328, 3, 24, 1, 1, '2014-04-16', 1397613600, 1397635200, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:33', '2014-04-02 09:58:56'),
(329, 3, 24, 15, 1, '2014-04-16', 1397613600, 1397635200, '[]', 0, 0, 6, 2, '', '', '2014-04-01 22:58:33', '2014-04-02 09:58:56'),
(330, 1, 23, 1, 1, '2014-04-06', 1396749600, 1396787400, '[{"length":1800,"start_at":1396767600}]', 1, 17, 7, 2, '', '', '2014-04-01 23:02:22', '0000-00-00 00:00:00'),
(331, 2, 19, 10, 0, '2014-04-05', 1396659600, 1396683000, '[{"length":1800,"start_at":1396677600}]', 7, 1, 4, 1, '', '', '2014-04-01 23:23:30', '2014-04-02 10:25:37'),
(332, 0, 19, 0, 0, '2014-04-05', 1396659600, 1396681200, '[{"length":1800,"start_at":1396677600}]', 1, 19, 4, 1, '', '', '2014-04-01 23:23:30', '0000-00-00 00:00:00'),
(333, 0, 19, 0, 0, '2014-04-05', 1396659600, 1396681200, '[{"length":1800,"start_at":1396677600}]', 1, 19, 4, 1, '', '', '2014-04-01 23:23:30', '0000-00-00 00:00:00'),
(334, 0, 19, 0, 0, '2014-04-05', 1396659600, 1396681200, '[{"length":1800,"start_at":1396677600}]', 1, 19, 4, 1, '', '', '2014-04-01 23:23:30', '0000-00-00 00:00:00'),
(335, 0, 19, 0, 0, '2014-04-05', 1396659600, 1396681200, '[{"length":1800,"start_at":1396677600}]', 1, 19, 4, 1, '', '', '2014-04-01 23:23:30', '0000-00-00 00:00:00'),
(336, 2, 19, 10, 0, '2014-04-10', 1397095200, 1397118600, '[{"length":1800,"start_at":1397113200}]', 7, 1, 4, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:10:"TravelCost";s:10:"staff_cost";s:2:"40";s:11:"client_cost";s:2:"80";s:3:"tax";s:1:"1";}}', '2014-04-01 23:25:47', '2014-04-02 10:26:28'),
(337, 2, 19, 10, 0, '2014-04-17', 1397700000, 1397723400, '[{"length":1800,"start_at":1397718000}]', 7, 1, 4, 1, '', '', '2014-04-01 23:25:47', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `job_shift_staff_apply`
--

CREATE TABLE `job_shift_staff_apply` (
  `shift_id` bigint(20) NOT NULL,
  `staff_id` bigint(20) NOT NULL,
  `applied_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` int(11) NOT NULL DEFAULT '0' COMMENT '1: accept, -1: reject',
  `responsed_on` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `job_shift_staff_apply`
--

INSERT INTO `job_shift_staff_apply` (`shift_id`, `staff_id`, `applied_on`, `status`, `responsed_on`) VALUES
(201, 1, '2014-03-19 23:57:57', 0, '0000-00-00 00:00:00'),
(202, 1, '2014-03-19 23:57:58', 0, '0000-00-00 00:00:00'),
(198, 1, '2014-03-19 23:58:02', 0, '0000-00-00 00:00:00'),
(275, 1, '2014-03-24 23:47:30', 0, '0000-00-00 00:00:00'),
(229, 1, '2014-03-31 23:07:13', 0, '0000-00-00 00:00:00'),
(230, 1, '2014-03-31 23:07:15', 0, '0000-00-00 00:00:00'),
(231, 1, '2014-03-31 23:07:16', 0, '0000-00-00 00:00:00'),
(232, 1, '2014-03-31 23:07:22', 0, '0000-00-00 00:00:00'),
(233, 1, '2014-03-31 23:07:28', 0, '0000-00-00 00:00:00'),
(234, 1, '2014-03-31 23:07:28', 0, '0000-00-00 00:00:00'),
(235, 1, '2014-03-31 23:07:28', 0, '0000-00-00 00:00:00'),
(248, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(249, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(250, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(251, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(252, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(253, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(254, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(255, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(256, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(257, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(258, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(259, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(260, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(261, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(262, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(263, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(264, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(265, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(266, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(267, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(268, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(269, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(270, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(271, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(272, 1, '2014-03-31 23:09:07', 0, '0000-00-00 00:00:00'),
(244, 1, '2014-04-01 00:25:46', 0, '0000-00-00 00:00:00'),
(245, 1, '2014-04-01 00:25:48', 0, '0000-00-00 00:00:00'),
(246, 1, '2014-04-01 00:25:53', 0, '0000-00-00 00:00:00'),
(247, 1, '2014-04-01 00:25:53', 0, '0000-00-00 00:00:00'),
(332, 1, '2014-04-01 23:27:23', 0, '0000-00-00 00:00:00'),
(334, 1, '2014-04-01 23:27:29', 0, '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `job_shift_timesheets`
--

CREATE TABLE `job_shift_timesheets` (
  `timesheet_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `status` tinyint(4) NOT NULL COMMENT '0: pending, 1: submitted, 2: approved, 3: batched, 4: processing, 5: paid',
  `status_payrun_staff` tinyint(4) NOT NULL COMMENT '0: processing, 1: ready, 3: paid',
  `payrun_id` bigint(20) NOT NULL,
  `status_invoice_client` tinyint(4) NOT NULL COMMENT '0: processing, 1: ready, 2: generated, 3: paid',
  `invoice_id` bigint(20) NOT NULL,
  `job_id` bigint(20) NOT NULL,
  `shift_id` bigint(20) NOT NULL,
  `staff_id` bigint(20) NOT NULL,
  `supervisor_id` bigint(20) NOT NULL,
  `client_id` bigint(20) NOT NULL,
  `job_date` date NOT NULL,
  `start_time` bigint(20) NOT NULL,
  `finish_time` bigint(20) NOT NULL,
  `break_time` text NOT NULL,
  `venue_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  `uniform_id` int(11) NOT NULL,
  `payrate_id` int(11) NOT NULL,
  `payrate_type` varchar(10) NOT NULL,
  `expenses` text NOT NULL,
  `expenses_staff_cost` decimal(10,2) NOT NULL,
  `expenses_client_cost` decimal(10,2) NOT NULL,
  `staff_payrates` text NOT NULL,
  `total_minutes` decimal(10,2) NOT NULL,
  `total_amount_staff` decimal(10,2) NOT NULL,
  `total_amount_client` decimal(10,2) NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_on` datetime NOT NULL,
  `batched_on` datetime NOT NULL,
  `staff_paid_on` datetime NOT NULL,
  `client_paid_on` datetime NOT NULL,
  PRIMARY KEY (`timesheet_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=67 ;

--
-- Dumping data for table `job_shift_timesheets`
--

INSERT INTO `job_shift_timesheets` (`timesheet_id`, `status`, `status_payrun_staff`, `payrun_id`, `status_invoice_client`, `invoice_id`, `job_id`, `shift_id`, `staff_id`, `supervisor_id`, `client_id`, `job_date`, `start_time`, `finish_time`, `break_time`, `venue_id`, `role_id`, `uniform_id`, `payrate_id`, `payrate_type`, `expenses`, `expenses_staff_cost`, `expenses_client_cost`, `staff_payrates`, `total_minutes`, `total_amount_staff`, `total_amount_client`, `created_on`, `modified_on`, `batched_on`, `staff_paid_on`, `client_paid_on`) VALUES
(1, 3, 3, 5, 0, 4, 18, 188, 1, 1, 31, '2014-03-17', 1395018000, 1395045000, '[{"length":1800,"start_at":1395025200}]', 7, 7, 1, 1, '', '', 0.00, 0.00, '', 420.00, 140.00, 210.00, '2014-03-19 04:00:36', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-24 15:37:20', '2014-03-20 15:52:46'),
(3, 3, 3, 1, 0, 4, 18, 192, 1, 1, 31, '2014-03-21', 1395363600, 1395388800, '[{"length":1800,"start_at":1395370800}]', 7, 7, 1, 1, '', '', 0.00, 0.00, '', 390.00, 130.00, 195.00, '2014-03-19 04:00:37', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-19 15:01:43', '2014-03-20 15:52:46'),
(4, 3, 0, 0, 0, 4, 18, 193, 23, 1, 31, '2014-03-18', 1395104400, 1395140400, '[{"length":1800,"start_at":1395126000}]', 7, 7, 1, 2, '', '', 0.00, 0.00, '', 570.00, 209.00, 332.50, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-20 15:52:46'),
(5, 3, 3, 4, 0, 4, 18, 194, 23, 1, 31, '2014-03-21', 1395363600, 1395399600, '[{"length":1800,"start_at":1395385200}]', 7, 7, 1, 2, '', '', 0.00, 0.00, '', 570.00, 209.00, 332.50, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-24 15:37:14', '2014-03-20 15:52:46'),
(6, 3, 3, 2, 0, 4, 18, 195, 23, 1, 31, '2014-03-22', 1395450000, 1395486000, '[{"length":1800,"start_at":1395471600}]', 7, 7, 1, 2, '', '', 0.00, 0.00, '', 570.00, 249.00, 382.50, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-20 15:18:00', '2014-03-20 15:52:46'),
(7, 3, 3, 2, 0, 4, 18, 196, 23, 1, 31, '2014-03-23', 1395536400, 1395572400, '[{"length":1800,"start_at":1395558000}]', 7, 7, 1, 2, '', '', 0.00, 0.00, '', 570.00, 289.00, 432.50, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-20 15:18:00', '2014-03-20 15:52:46'),
(8, 3, 3, 6, 0, 4, 18, 199, 1, 1, 31, '2014-03-21', 1395363600, 1395399600, '[{"length":1800,"start_at":1395385200}]', 7, 7, 1, 2, '', '', 0.00, 0.00, '', 570.00, 209.00, 332.50, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-24 15:37:53', '2014-03-20 15:52:46'),
(9, 3, 3, 3, 0, 4, 18, 200, 1, 1, 31, '2014-03-22', 1395450000, 1395486000, '[{"length":1800,"start_at":1395471600}]', 7, 7, 1, 2, '', '', 0.00, 0.00, '', 570.00, 249.00, 382.50, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-20 15:23:24', '2014-03-20 15:52:46'),
(10, 3, 3, 2, 0, 4, 18, 203, 23, 1, 31, '2014-03-31', 1396227600, 1396263600, '[{"length":1800,"start_at":1396249200}]', 7, 7, 1, 2, '', '', 0.00, 0.00, '', 570.00, 209.00, 332.50, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-20 15:18:00', '2014-03-20 15:52:46'),
(11, 3, 0, 0, 1, 4, 18, 204, 1, 1, 31, '2014-03-31', 1396227600, 1396265400, '[{"length":2700,"start_at":1396252800}]', 7, 7, 1, 2, '', 'a:2:{i:0;a:4:{s:11:"description";s:4:"Taxi";s:10:"staff_cost";s:3:"200";s:11:"client_cost";i:0;s:3:"tax";s:1:"1";}i:1;a:4:{s:11:"description";s:4:"Taxi";s:10:"staff_cost";s:1:"0";s:11:"client_cost";s:3:"400";s:3:"tax";s:1:"0";}}', 200.00, 400.00, '', 585.00, 214.50, 341.25, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-20 15:52:46'),
(12, 3, 3, 3, 2, 16, 19, 205, 1, 1, 31, '2014-03-21', 1395363600, 1395403200, '[{"length":1800,"start_at":1395381600}]', 7, 11, 1, 3, '', 'a:2:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"25";s:11:"client_cost";s:2:"35";s:3:"tax";s:1:"2";}i:1;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', 47.50, 78.50, '', 630.00, 288.75, 420.00, '2014-03-20 00:04:35', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-20 15:23:24', '0000-00-00 00:00:00'),
(13, 3, 0, 0, 0, 18, 18, 191, 1, 1, 31, '2014-03-20', 1395277200, 1395302400, '[{"length":1800,"start_at":1395284400}]', 7, 7, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:12:"Travel Costs";s:10:"staff_cost";s:2:"25";s:11:"client_cost";s:2:"50";s:3:"tax";s:1:"2";}}', 27.50, 55.00, '', 390.00, 130.00, 195.00, '2014-03-24 03:56:05', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(14, 3, 0, 0, 0, 18, 18, 198, 1, 1, 31, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395730800}]', 7, 7, 5, 2, '', '', 0.00, 0.00, '', 570.00, 209.00, 332.50, '2014-03-24 03:56:05', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(15, 3, 0, 0, 1, 11, 21, 210, 1, 1, 34, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-24 18:27:19'),
(16, 3, 3, 4, 1, 11, 21, 211, 12, 1, 34, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-24 15:37:14', '2014-03-24 18:27:19'),
(17, 3, 1, 0, 1, 12, 21, 212, 11, 1, 34, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-27 17:40:40'),
(18, 3, 1, 0, 1, 13, 21, 213, 19, 1, 34, '2014-03-24', 1395622800, 1395660600, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:12:"Travel Costs";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', 20.00, 40.00, '', 600.00, 200.00, 300.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-27 17:40:23'),
(19, 3, 1, 0, 1, 13, 21, 220, 1, 1, 34, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-27 17:40:23'),
(20, 3, 1, 0, 1, 13, 21, 221, 12, 1, 34, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-27 17:40:23'),
(21, 3, 1, 0, 1, 13, 21, 222, 11, 1, 34, '2014-03-25', 1395709200, 1395745200, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-27 17:40:23'),
(22, 3, 1, 0, 2, 22, 21, 223, 19, 1, 34, '2014-03-25', 1395709200, 1395747000, '[{"length":1800,"start_at":1395720000}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 600.00, 200.00, 300.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(23, 3, 1, 0, 2, 22, 21, 224, 1, 1, 34, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 475.00, 950.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(24, 3, 1, 0, 1, 13, 21, 225, 12, 1, 34, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-03-27 17:40:23'),
(25, 3, 1, 0, 2, 22, 21, 226, 11, 1, 34, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 475.00, 950.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(26, 3, 1, 0, 2, 22, 21, 227, 19, 1, 34, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395806400}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 190.00, 285.00, '2014-03-24 04:05:12', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(27, 3, 1, 0, 2, 22, 21, 214, 1, 1, 34, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', 20.00, 40.00, '', 570.00, 190.00, 285.00, '2014-03-24 07:25:15', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(28, 0, 1, 0, 2, 22, 21, 228, 1, 1, 34, '2014-04-12', 1397268000, 1397304000, '[{"length":1800,"start_at":1397278800}]', 1, 8, 6, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-03-24 07:25:15', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(29, 3, 1, 0, 0, 0, 19, 206, 1, 1, 31, '2014-03-21', 1395363600, 1395405000, '[]', 7, 17, 1, 2, '', 'a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"0";}}', 20.00, 40.00, '', 690.00, 253.00, 402.50, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(30, 3, 1, 0, 2, 22, 21, 216, 12, 1, 34, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 475.00, 950.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(31, 3, 1, 0, 2, 22, 21, 219, 1, 1, 34, '2014-03-24', 1395622800, 1395658800, '[{"length":1800,"start_at":1395633600}]', 1, 8, 6, 1, '', '', 0.00, 0.00, '', 570.00, 475.00, 950.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(32, 0, 1, 0, 0, 25, 18, 273, 1, 1, 31, '2014-03-28', 1395968400, 1396004400, '[{"length":1800,"start_at":1395986400}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(33, 3, 1, 0, 0, 25, 18, 276, 1, 1, 31, '2014-03-26', 1395795600, 1395831600, '[{"length":1800,"start_at":1395813600}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', 22.00, 44.00, '', 570.00, 475.00, 950.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(34, 3, 1, 0, 0, 25, 18, 277, 1, 1, 31, '2014-03-27', 1395882000, 1395918000, '[{"length":1800,"start_at":1395900000}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', 22.00, 44.00, '', 570.00, 475.00, 950.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(35, 3, 1, 0, 0, 25, 18, 278, 1, 1, 31, '2014-03-28', 1395968400, 1396004400, '[{"length":1800,"start_at":1395986400}]', 7, 12, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"2";}}', 22.00, 44.00, '', 570.00, 475.00, 950.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(36, 3, 1, 0, 0, 22, 21, 280, 13, 0, 34, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 13, 5, 1, '', '', 0.00, 0.00, '', 330.00, 275.00, 550.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(37, 3, 1, 0, 0, 22, 21, 283, 19, 0, 34, '2014-03-26', 1395795600, 1395819000, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"Milk";s:10:"staff_cost";s:2:"10";s:11:"client_cost";s:2:"20";s:3:"tax";s:1:"0";}}', 10.00, 20.00, '', 360.00, 300.00, 600.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(38, 3, 1, 0, 0, 22, 21, 284, 19, 0, 34, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', '', 0.00, 0.00, '', 330.00, 275.00, 550.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(39, 3, 0, 0, 0, 22, 21, 288, 10, 0, 34, '2014-03-26', 1395795600, 1395817200, '[{"length":1800,"start_at":1395813600}]', 9, 13, 5, 1, '', '', 0.00, 0.00, '', 330.00, 275.00, 550.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(40, 0, 0, 0, 2, 22, 21, 294, 18, 0, 34, '2014-03-26', 1395795600, 1395819000, '[{"length":1800,"start_at":1395813600}]', 1, 13, 5, 1, '', 'a:1:{i:0;a:4:{s:11:"description";s:4:"hvhv";s:10:"staff_cost";s:1:"0";s:11:"client_cost";s:1:"0";s:3:"tax";s:1:"0";}}', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-03-31 23:09:45', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(41, 0, 0, 0, 0, 0, 23, 301, 24, 1, 31, '2014-04-04', 1396573200, 1396609200, '[{"length":1800,"start_at":1396591200}]', 7, 18, 7, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(42, 0, 0, 0, 0, 0, 23, 305, 24, 1, 31, '2014-04-11', 1397181600, 1397217600, '[{"length":1800,"start_at":1397199600}]', 7, 18, 7, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(43, 0, 0, 0, 0, 0, 23, 306, 24, 1, 31, '2014-04-18', 1397786400, 1397822400, '[{"length":1800,"start_at":1397804400}]', 7, 18, 7, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(44, 0, 0, 0, 0, 0, 23, 307, 24, 1, 31, '2014-04-25', 1398391200, 1398427200, '[{"length":1800,"start_at":1398409200}]', 7, 18, 7, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(45, 3, 1, 0, 3, 24, 24, 308, 1, 1, 33, '2014-04-02', 1396400400, 1396422000, '', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 360.00, 132.00, 210.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(46, 3, 1, 0, 3, 24, 24, 309, 15, 1, 33, '2014-04-02', 1396400400, 1396422000, '', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 360.00, 132.00, 210.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(47, 3, 1, 0, 3, 24, 24, 310, 1, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 360.00, 132.00, 210.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(48, 3, 1, 0, 3, 24, 24, 311, 15, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 360.00, 132.00, 210.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(49, 0, 1, 0, 3, 24, 24, 312, 1, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(50, 0, 1, 0, 3, 24, 24, 313, 15, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(51, 3, 1, 0, 3, 24, 24, 314, 1, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 360.00, 132.00, 210.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(52, 3, 1, 0, 3, 24, 24, 315, 15, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 360.00, 132.00, 210.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(53, 0, 1, 0, 3, 24, 24, 316, 1, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(54, 0, 1, 0, 3, 24, 24, 317, 15, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(55, 3, 1, 0, 3, 24, 24, 318, 1, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 360.00, 132.00, 210.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(56, 0, 1, 0, 3, 24, 24, 319, 15, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(57, 0, 1, 0, 3, 24, 24, 320, 1, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(58, 0, 1, 0, 3, 24, 24, 321, 15, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(59, 0, 1, 0, 3, 24, 24, 322, 1, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(60, 0, 1, 0, 3, 24, 24, 323, 15, 1, 33, '2014-04-03', 1396486800, 1396508400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(61, 0, 1, 0, 3, 24, 24, 324, 1, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(62, 0, 1, 0, 3, 24, 24, 325, 15, 1, 33, '2014-04-04', 1396573200, 1396594800, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(63, 0, 1, 0, 3, 24, 24, 326, 1, 1, 33, '2014-04-09', 1397008800, 1397030400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(64, 0, 1, 0, 3, 24, 24, 327, 15, 1, 33, '2014-04-09', 1397008800, 1397030400, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(65, 0, 1, 0, 3, 24, 24, 328, 1, 1, 33, '2014-04-16', 1397613600, 1397635200, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00'),
(66, 0, 1, 0, 3, 24, 24, 329, 15, 1, 33, '2014-04-16', 1397613600, 1397635200, '[]', 0, 0, 6, 2, '', '', 0.00, 0.00, '', 0.00, 0.00, 0.00, '2014-04-01 22:58:56', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2014-04-02 10:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `logs`
--

CREATE TABLE `logs` (
  `log_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) NOT NULL,
  `module` varchar(255) NOT NULL,
  `object` varchar(255) NOT NULL,
  `object_id` bigint(20) NOT NULL,
  `action` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=319 ;

--
-- Dumping data for table `logs`
--

INSERT INTO `logs` (`log_id`, `user_id`, `module`, `object`, `object_id`, `action`, `description`, `created_on`) VALUES
(1, 1, 'job', 'shift', 190, 'update', 'a:2:{s:8:"staff_id";s:2:"13";s:6:"status";s:1:"1";}', '2014-03-26 04:39:26'),
(2, 1, 'job', 'shift', 215, 'update', 'a:1:{s:11:"finish_time";i:1395660600;}', '2014-03-28 07:29:40'),
(3, 1, 'job', 'shift', 280, 'create', '', '2014-03-28 07:31:29'),
(4, 1, 'job', 'shift', 281, 'create', '', '2014-03-28 07:31:29'),
(5, 1, 'job', 'shift', 282, 'create', '', '2014-03-28 07:31:29'),
(6, 1, 'job', 'shift', 283, 'create', '', '2014-03-28 07:31:29'),
(7, 1, 'job', 'shift', 284, 'create', '', '2014-03-28 07:31:29'),
(8, 1, 'job', 'shift', 285, 'create', '', '2014-03-28 07:31:29'),
(9, 1, 'job', 'shift', 286, 'create', '', '2014-03-28 07:31:29'),
(10, 1, 'job', 'shift', 287, 'create', '', '2014-03-28 07:31:29'),
(11, 1, 'job', 'shift', 288, 'create', '', '2014-03-28 07:31:29'),
(12, 1, 'job', 'shift', 289, 'create', '', '2014-03-28 07:31:29'),
(13, 1, 'job', 'shift', 290, 'create', '', '2014-03-28 07:31:29'),
(14, 1, 'job', 'shift', 291, 'create', '', '2014-03-28 07:31:29'),
(15, 1, 'job', 'shift', 292, 'create', '', '2014-03-28 07:31:29'),
(16, 1, 'job', 'shift', 293, 'create', '', '2014-03-28 07:31:29'),
(17, 1, 'job', 'shift', 294, 'create', '', '2014-03-28 07:31:29'),
(18, 1, 'job', 'shift', 295, 'create', '', '2014-03-28 07:31:29'),
(19, 1, 'job', 'shift', 296, 'create', '', '2014-03-28 07:31:29'),
(20, 1, 'job', 'shift', 297, 'create', '', '2014-03-28 07:31:29'),
(21, 1, 'job', 'shift', 298, 'create', '', '2014-03-28 07:31:29'),
(22, 1, 'job', 'shift', 299, 'create', '', '2014-03-28 07:31:29'),
(23, 1, 'job', 'shift', 280, 'update', 'a:1:{s:8:"venue_id";s:1:"9";}', '2014-03-28 07:33:14'),
(24, 1, 'job', 'shift', 281, 'update', 'a:1:{s:8:"venue_id";s:1:"9";}', '2014-03-28 07:33:14'),
(25, 1, 'job', 'shift', 285, 'update', 'a:1:{s:8:"venue_id";s:1:"9";}', '2014-03-28 07:33:14'),
(26, 1, 'job', 'shift', 286, 'update', 'a:1:{s:8:"venue_id";s:1:"9";}', '2014-03-28 07:33:14'),
(27, 1, 'job', 'shift', 287, 'update', 'a:1:{s:8:"venue_id";s:1:"9";}', '2014-03-28 07:33:14'),
(28, 1, 'job', 'shift', 288, 'update', 'a:1:{s:8:"venue_id";s:1:"9";}', '2014-03-28 07:33:14'),
(29, 1, 'client', 'client', 31, 'update', 'details', '2014-03-28 07:47:04'),
(30, 1, 'job', 'shift', 273, 'update', 'a:1:{s:10:"break_time";s:39:"[{"length":1800,"start_at":1395986400}]";}', '2014-03-31 03:33:18'),
(31, 1, 'staff', 'staff', 29, 'update', 'personal details', '2014-03-31 07:16:06'),
(32, 1, 'job', 'shift', 215, 'update', 'a:2:{s:8:"staff_id";s:2:"11";s:6:"status";s:1:"1";}', '2014-03-31 23:05:02'),
(33, 1, 'job', 'shift', 216, 'update', 'a:2:{s:8:"staff_id";s:2:"12";s:6:"status";s:1:"2";}', '2014-03-31 23:05:19'),
(34, 1, 'job', 'shift', 217, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-03-31 23:05:39'),
(35, 1, 'job', 'shift', 218, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-03-31 23:05:44'),
(36, 1, 'job', 'shift', 219, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"2";}', '2014-03-31 23:05:54'),
(37, 1, 'job', 'shift', 280, 'update', 'a:2:{s:8:"staff_id";s:2:"13";s:6:"status";s:1:"2";}', '2014-03-31 23:06:06'),
(38, 1, 'job', 'shift', 283, 'update', 'a:2:{s:8:"staff_id";s:2:"19";s:6:"status";s:1:"2";}', '2014-03-31 23:06:15'),
(39, 1, 'job', 'shift', 284, 'update', 'a:2:{s:8:"staff_id";s:2:"19";s:6:"status";s:1:"2";}', '2014-03-31 23:06:24'),
(40, 1, 'job', 'shift', 288, 'update', 'a:2:{s:8:"staff_id";s:2:"10";s:6:"status";s:1:"2";}', '2014-03-31 23:06:34'),
(41, 1, 'job', 'shift', 292, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-03-31 23:06:40'),
(42, 1, 'job', 'shift', 293, 'update', 'a:2:{s:8:"staff_id";s:2:"11";s:6:"status";s:1:"1";}', '2014-03-31 23:06:46'),
(43, 1, 'job', 'shift', 294, 'update', 'a:2:{s:8:"staff_id";s:2:"18";s:6:"status";s:1:"2";}', '2014-03-31 23:06:53'),
(44, 1, 'job', 'work', 229, 'applied', '', '2014-03-31 23:07:22'),
(45, 1, 'job', 'work', 230, 'applied', '', '2014-03-31 23:07:59'),
(46, 1, 'job', 'work', 231, 'applied', '', '2014-03-31 23:07:13'),
(47, 1, 'job', 'work', 232, 'applied', '', '2014-03-31 23:07:45'),
(48, 1, 'job', 'work', 233, 'applied', '', '2014-03-31 23:07:16'),
(49, 1, 'job', 'work', 234, 'applied', '', '2014-03-31 23:07:38'),
(50, 1, 'job', 'work', 235, 'applied', '', '2014-03-31 23:07:10'),
(51, 1, 'job', 'shift', 229, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(52, 1, 'job', 'shift', 230, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(53, 1, 'job', 'shift', 231, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(54, 1, 'job', 'shift', 232, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(55, 1, 'job', 'shift', 233, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(56, 1, 'job', 'shift', 234, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(57, 1, 'job', 'shift', 235, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(58, 1, 'job', 'shift', 236, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(59, 1, 'job', 'shift', 237, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(60, 1, 'job', 'shift', 238, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(61, 1, 'job', 'shift', 239, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(62, 1, 'job', 'shift', 240, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(63, 1, 'job', 'shift', 241, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(64, 1, 'job', 'shift', 242, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(65, 1, 'job', 'shift', 243, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(66, 1, 'job', 'shift', 244, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(67, 1, 'job', 'shift', 245, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(68, 1, 'job', 'shift', 246, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(69, 1, 'job', 'shift', 247, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(70, 1, 'job', 'shift', 248, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(71, 1, 'job', 'shift', 249, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(72, 1, 'job', 'shift', 250, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(73, 1, 'job', 'shift', 251, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(74, 1, 'job', 'shift', 252, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(75, 1, 'job', 'shift', 253, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(76, 1, 'job', 'shift', 254, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(77, 1, 'job', 'shift', 255, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(78, 1, 'job', 'shift', 256, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(79, 1, 'job', 'shift', 257, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(80, 1, 'job', 'shift', 258, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(81, 1, 'job', 'shift', 259, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(82, 1, 'job', 'shift', 260, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(83, 1, 'job', 'shift', 261, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(84, 1, 'job', 'shift', 262, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(85, 1, 'job', 'shift', 263, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(86, 1, 'job', 'shift', 264, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(87, 1, 'job', 'shift', 265, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(88, 1, 'job', 'shift', 266, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(89, 1, 'job', 'shift', 267, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(90, 1, 'job', 'shift', 268, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(91, 1, 'job', 'shift', 269, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(92, 1, 'job', 'shift', 270, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(93, 1, 'job', 'shift', 271, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(94, 1, 'job', 'shift', 272, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(95, 1, 'job', 'shift', 281, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(96, 1, 'job', 'shift', 282, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(97, 1, 'job', 'shift', 285, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(98, 1, 'job', 'shift', 286, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(99, 1, 'job', 'shift', 287, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(100, 1, 'job', 'shift', 289, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(101, 1, 'job', 'shift', 290, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(102, 1, 'job', 'shift', 291, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(103, 1, 'job', 'shift', 295, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(104, 1, 'job', 'shift', 296, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(105, 1, 'job', 'shift', 297, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(106, 1, 'job', 'shift', 298, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(107, 1, 'job', 'shift', 299, 'update', 'a:1:{s:7:"role_id";s:1:"8";}', '2014-03-31 23:08:16'),
(108, 1, 'job', 'work', 248, 'applied', '', '2014-03-31 23:09:22'),
(109, 1, 'job', 'work', 249, 'applied', '', '2014-03-31 23:09:08'),
(110, 1, 'job', 'work', 250, 'applied', '', '2014-03-31 23:09:57'),
(111, 1, 'job', 'work', 251, 'applied', '', '2014-03-31 23:09:19'),
(112, 1, 'job', 'work', 252, 'applied', '', '2014-03-31 23:09:49'),
(113, 1, 'job', 'work', 253, 'applied', '', '2014-03-31 23:09:48'),
(114, 1, 'job', 'work', 254, 'applied', '', '2014-03-31 23:09:44'),
(115, 1, 'job', 'work', 255, 'applied', '', '2014-03-31 23:09:57'),
(116, 1, 'job', 'work', 256, 'applied', '', '2014-03-31 23:09:10'),
(117, 1, 'job', 'work', 257, 'applied', '', '2014-03-31 23:09:32'),
(118, 1, 'job', 'work', 258, 'applied', '', '2014-03-31 23:09:16'),
(119, 1, 'job', 'work', 259, 'applied', '', '2014-03-31 23:09:25'),
(120, 1, 'job', 'work', 260, 'applied', '', '2014-03-31 23:09:08'),
(121, 1, 'job', 'work', 261, 'applied', '', '2014-03-31 23:09:45'),
(122, 1, 'job', 'work', 262, 'applied', '', '2014-03-31 23:09:08'),
(123, 1, 'job', 'work', 263, 'applied', '', '2014-03-31 23:09:14'),
(124, 1, 'job', 'work', 264, 'applied', '', '2014-03-31 23:09:39'),
(125, 1, 'job', 'work', 265, 'applied', '', '2014-03-31 23:09:30'),
(126, 1, 'job', 'work', 266, 'applied', '', '2014-03-31 23:09:35'),
(127, 1, 'job', 'work', 267, 'applied', '', '2014-03-31 23:09:27'),
(128, 1, 'job', 'work', 268, 'applied', '', '2014-03-31 23:09:35'),
(129, 1, 'job', 'work', 269, 'applied', '', '2014-03-31 23:09:58'),
(130, 1, 'job', 'work', 270, 'applied', '', '2014-03-31 23:09:45'),
(131, 1, 'job', 'work', 271, 'applied', '', '2014-03-31 23:09:35'),
(132, 1, 'job', 'work', 272, 'applied', '', '2014-03-31 23:09:39'),
(133, 1, 'job', 'shift', 206, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(134, 1, 'job', 'shift', 216, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(135, 1, 'job', 'shift', 219, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(136, 1, 'job', 'shift', 273, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(137, 1, 'job', 'shift', 276, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(138, 1, 'job', 'shift', 277, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(139, 1, 'job', 'shift', 278, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(140, 1, 'job', 'shift', 280, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(141, 1, 'job', 'shift', 283, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(142, 1, 'job', 'shift', 284, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(143, 1, 'job', 'shift', 288, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(144, 1, 'job', 'shift', 294, 'update', 'a:1:{s:6:"status";i:3;}', '2014-03-31 23:09:45'),
(145, 1, 'staff', 'staff', 10, 'update', '', '2014-04-01 00:14:25'),
(146, 1, 'staff', 'staff', 10, 'update', '', '2014-04-01 00:14:28'),
(147, 1, 'job', 'shift', 300, 'create', '', '2014-04-01 00:19:58'),
(148, 1, 'job', 'shift', 301, 'create', '', '2014-04-01 00:19:58'),
(149, 1, 'job', 'shift', 302, 'create', '', '2014-04-01 00:19:58'),
(150, 1, 'job', 'shift', 303, 'create', '', '2014-04-01 00:19:58'),
(151, 1, 'job', 'shift', 304, 'create', '', '2014-04-01 00:19:58'),
(152, 1, 'job', 'shift', 300, 'update', 'a:1:{s:8:"venue_id";s:1:"1";}', '2014-04-01 00:20:11'),
(153, 1, 'job', 'shift', 300, 'update', 'a:1:{s:7:"role_id";s:2:"17";}', '2014-04-01 00:20:14'),
(154, 1, 'job', 'shift', 300, 'update', 'a:1:{s:11:"finish_time";i:1396611000;}', '2014-04-01 00:20:22'),
(155, 1, 'job', 'shift', 300, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-01 00:20:39'),
(156, 1, 'job', 'shift', 301, 'update', 'a:2:{s:8:"staff_id";s:2:"24";s:6:"status";s:1:"2";}', '2014-04-01 00:21:47'),
(157, 1, 'job', 'shift', 305, 'create', '', '2014-04-01 00:22:04'),
(158, 1, 'job', 'shift', 306, 'create', '', '2014-04-01 00:22:04'),
(159, 1, 'job', 'shift', 307, 'create', '', '2014-04-01 00:22:04'),
(160, 1, 'job', 'shift', 305, 'update', 'a:1:{s:7:"role_id";s:2:"18";}', '2014-04-01 00:22:26'),
(161, 1, 'job', 'work', 244, 'applied', '', '2014-04-01 00:25:38'),
(162, 1, 'job', 'work', 244, 'unapplied', '', '2014-04-01 00:25:24'),
(163, 1, 'job', 'work', 244, 'applied', '', '2014-04-01 00:25:02'),
(164, 1, 'job', 'work', 245, 'applied', '', '2014-04-01 00:25:52'),
(165, 1, 'job', 'work', 246, 'applied', '', '2014-04-01 00:25:16'),
(166, 1, 'job', 'work', 247, 'applied', '', '2014-04-01 00:25:15'),
(167, 1, 'job', 'shift', 229, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-01 00:27:50'),
(168, 1, 'job', 'shift', 229, 'update', 'a:1:{s:8:"expenses";s:127:"a:1:{i:0;a:4:{s:11:"description";s:11:"Travel Cost";s:10:"staff_cost";s:2:"20";s:11:"client_cost";s:2:"40";s:3:"tax";s:1:"1";}}";}', '2014-04-01 00:29:36'),
(169, 1, 'job', 'shift', 308, 'create', '', '2014-04-01 22:56:39'),
(170, 1, 'job', 'shift', 309, 'create', '', '2014-04-01 22:56:39'),
(171, 1, 'job', 'shift', 308, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-01 22:56:57'),
(172, 1, 'job', 'shift', 308, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"2";}', '2014-04-01 22:57:02'),
(173, 1, 'job', 'shift', 309, 'update', 'a:2:{s:8:"staff_id";s:2:"15";s:6:"status";s:1:"2";}', '2014-04-01 22:57:13'),
(174, 1, 'job', 'shift', 310, 'create', '', '2014-04-01 22:57:37'),
(175, 1, 'job', 'shift', 311, 'create', '', '2014-04-01 22:57:37'),
(176, 1, 'job', 'shift', 312, 'create', '', '2014-04-01 22:57:37'),
(177, 1, 'job', 'shift', 313, 'create', '', '2014-04-01 22:57:37'),
(178, 1, 'job', 'shift', 314, 'create', '', '2014-04-01 22:57:53'),
(179, 1, 'job', 'shift', 315, 'create', '', '2014-04-01 22:57:53'),
(180, 1, 'job', 'shift', 316, 'create', '', '2014-04-01 22:57:56'),
(181, 1, 'job', 'shift', 317, 'create', '', '2014-04-01 22:57:56'),
(182, 1, 'job', 'shift', 318, 'create', '', '2014-04-01 22:58:05'),
(183, 1, 'job', 'shift', 319, 'create', '', '2014-04-01 22:58:05'),
(184, 1, 'job', 'shift', 320, 'create', '', '2014-04-01 22:58:05'),
(185, 1, 'job', 'shift', 321, 'create', '', '2014-04-01 22:58:05'),
(186, 1, 'job', 'shift', 322, 'create', '', '2014-04-01 22:58:10'),
(187, 1, 'job', 'shift', 323, 'create', '', '2014-04-01 22:58:10'),
(188, 1, 'job', 'shift', 324, 'create', '', '2014-04-01 22:58:16'),
(189, 1, 'job', 'shift', 325, 'create', '', '2014-04-01 22:58:16'),
(190, 1, 'job', 'shift', 326, 'create', '', '2014-04-01 22:58:16'),
(191, 1, 'job', 'shift', 327, 'create', '', '2014-04-01 22:58:16'),
(192, 1, 'job', 'shift', 328, 'create', '', '2014-04-01 22:58:33'),
(193, 1, 'job', 'shift', 329, 'create', '', '2014-04-01 22:58:33'),
(194, 1, 'job', 'shift', 301, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(195, 1, 'job', 'shift', 305, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(196, 1, 'job', 'shift', 306, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(197, 1, 'job', 'shift', 307, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(198, 1, 'job', 'shift', 308, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(199, 1, 'job', 'shift', 309, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(200, 1, 'job', 'shift', 310, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(201, 1, 'job', 'shift', 311, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(202, 1, 'job', 'shift', 312, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(203, 1, 'job', 'shift', 313, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(204, 1, 'job', 'shift', 314, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(205, 1, 'job', 'shift', 315, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(206, 1, 'job', 'shift', 316, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(207, 1, 'job', 'shift', 317, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(208, 1, 'job', 'shift', 318, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(209, 1, 'job', 'shift', 319, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(210, 1, 'job', 'shift', 320, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(211, 1, 'job', 'shift', 321, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(212, 1, 'job', 'shift', 322, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(213, 1, 'job', 'shift', 323, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(214, 1, 'job', 'shift', 324, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(215, 1, 'job', 'shift', 325, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(216, 1, 'job', 'shift', 326, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(217, 1, 'job', 'shift', 327, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(218, 1, 'job', 'shift', 328, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(219, 1, 'job', 'shift', 329, 'update', 'a:1:{s:6:"status";i:3;}', '2014-04-01 22:58:56'),
(220, 1, 'job', 'shift', 330, 'create', '', '2014-04-01 23:02:22'),
(221, 1, 'staff', 'staff', 10, 'update', '', '2014-04-01 23:18:31'),
(222, 1, 'staff', 'staff', 10, 'update', '', '2014-04-01 23:20:03'),
(223, 1, 'job', 'shift', 331, 'create', '', '2014-04-01 23:23:30'),
(224, 1, 'job', 'shift', 332, 'create', '', '2014-04-01 23:23:30'),
(225, 1, 'job', 'shift', 333, 'create', '', '2014-04-01 23:23:30'),
(226, 1, 'job', 'shift', 334, 'create', '', '2014-04-01 23:23:30'),
(227, 1, 'job', 'shift', 335, 'create', '', '2014-04-01 23:23:30'),
(228, 1, 'job', 'shift', 331, 'update', 'a:1:{s:8:"venue_id";s:1:"7";}', '2014-04-01 23:23:46'),
(229, 1, 'job', 'shift', 331, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:23:50'),
(230, 1, 'job', 'shift', 331, 'update', 'a:1:{s:11:"finish_time";i:1396683000;}', '2014-04-01 23:23:54'),
(231, 1, 'job', 'shift', 331, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-01 23:24:09'),
(232, 1, 'job', 'shift', 331, 'update', 'a:2:{s:8:"staff_id";s:2:"10";s:6:"status";i:1;}', '2014-04-01 23:25:30'),
(233, 1, 'job', 'shift', 331, 'update', 'a:2:{s:8:"staff_id";s:2:"10";s:6:"status";s:1:"2";}', '2014-04-01 23:25:37'),
(234, 1, 'job', 'shift', 336, 'create', '', '2014-04-01 23:25:47'),
(235, 1, 'job', 'shift', 337, 'create', '', '2014-04-01 23:25:47'),
(236, 1, 'job', 'shift', 336, 'update', 'a:1:{s:8:"expenses";s:126:"a:1:{i:0;a:4:{s:11:"description";s:10:"TravelCost";s:10:"staff_cost";s:2:"40";s:11:"client_cost";s:2:"80";s:3:"tax";s:1:"1";}}";}', '2014-04-01 23:26:28'),
(237, 1, 'job', 'work', 332, 'applied', '', '2014-04-01 23:27:52'),
(238, 1, 'job', 'work', 333, 'applied', '', '2014-04-01 23:27:09'),
(239, 1, 'job', 'work', 334, 'applied', '', '2014-04-01 23:27:37'),
(240, 1, 'job', 'work', 333, 'unapplied', '', '2014-04-01 23:27:57'),
(241, 1, 'job', 'shift', 230, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(242, 1, 'job', 'shift', 231, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(243, 1, 'job', 'shift', 232, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(244, 1, 'job', 'shift', 233, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(245, 1, 'job', 'shift', 234, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(246, 1, 'job', 'shift', 235, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(247, 1, 'job', 'shift', 236, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(248, 1, 'job', 'shift', 237, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(249, 1, 'job', 'shift', 238, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(250, 1, 'job', 'shift', 239, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(251, 1, 'job', 'shift', 240, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(252, 1, 'job', 'shift', 241, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(253, 1, 'job', 'shift', 242, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(254, 1, 'job', 'shift', 243, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(255, 1, 'job', 'shift', 244, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(256, 1, 'job', 'shift', 245, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(257, 1, 'job', 'shift', 246, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(258, 1, 'job', 'shift', 247, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(259, 1, 'job', 'shift', 248, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(260, 1, 'job', 'shift', 249, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(261, 1, 'job', 'shift', 250, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(262, 1, 'job', 'shift', 251, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(263, 1, 'job', 'shift', 252, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(264, 1, 'job', 'shift', 253, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(265, 1, 'job', 'shift', 254, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(266, 1, 'job', 'shift', 255, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(267, 1, 'job', 'shift', 256, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(268, 1, 'job', 'shift', 257, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(269, 1, 'job', 'shift', 258, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(270, 1, 'job', 'shift', 259, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(271, 1, 'job', 'shift', 260, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(272, 1, 'job', 'shift', 261, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(273, 1, 'job', 'shift', 262, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(274, 1, 'job', 'shift', 263, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(275, 1, 'job', 'shift', 264, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(276, 1, 'job', 'shift', 265, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(277, 1, 'job', 'shift', 266, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(278, 1, 'job', 'shift', 267, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(279, 1, 'job', 'shift', 268, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(280, 1, 'job', 'shift', 269, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(281, 1, 'job', 'shift', 270, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(282, 1, 'job', 'shift', 271, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(283, 1, 'job', 'shift', 272, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(284, 1, 'job', 'shift', 281, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(285, 1, 'job', 'shift', 282, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(286, 1, 'job', 'shift', 285, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(287, 1, 'job', 'shift', 286, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(288, 1, 'job', 'shift', 287, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(289, 1, 'job', 'shift', 289, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(290, 1, 'job', 'shift', 290, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(291, 1, 'job', 'shift', 291, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(292, 1, 'job', 'shift', 295, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(293, 1, 'job', 'shift', 296, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(294, 1, 'job', 'shift', 297, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(295, 1, 'job', 'shift', 298, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(296, 1, 'job', 'shift', 299, 'update', 'a:1:{s:7:"role_id";s:1:"1";}', '2014-04-01 23:51:15'),
(297, 1, 'job', 'shift', 230, 'update', 'a:1:{s:10:"break_time";s:39:"[{"length":1800,"start_at":1397278800}]";}', '2014-04-02 23:49:34'),
(298, 1, 'job', 'shift', 230, 'update', 'a:1:{s:10:"break_time";s:39:"[{"length":1800,"start_at":1397278800}]";}', '2014-04-02 23:49:41'),
(299, 1, 'client', 'client', 36, 'delete', '', '2014-04-03 23:28:00'),
(300, 1, 'client', 'client', 36, 'delete', '', '2014-04-03 23:28:03'),
(301, 1, 'client', 'client', 34, 'delete', '', '2014-04-03 23:28:03'),
(302, 1, 'client', 'client', 35, 'update', 'details', '2014-04-03 23:28:13'),
(303, 1, 'job', 'shift', 248, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-03 23:42:51'),
(304, 1, 'job', 'shift', 250, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-03 23:43:06'),
(305, 1, 'job', 'shift', 252, 'update', 'a:2:{s:8:"staff_id";s:2:"15";s:6:"status";s:1:"1";}', '2014-04-03 23:43:16'),
(306, 1, 'job', 'shift', 251, 'update', 'a:2:{s:8:"staff_id";s:2:"19";s:6:"status";s:1:"2";}', '2014-04-03 23:44:06'),
(307, 1, 'job', 'shift', 249, 'update', 'a:2:{s:8:"staff_id";s:2:"23";s:6:"status";s:1:"2";}', '2014-04-03 23:44:52'),
(308, 1, 'job', 'shift', 255, 'update', 'a:2:{s:8:"staff_id";s:2:"25";s:6:"status";s:1:"1";}', '2014-04-03 23:45:05'),
(309, 1, 'job', 'shift', 257, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-03 23:45:14'),
(310, 1, 'job', 'roster', 248, 'update', 'a:1:{s:6:"status";i:-1;}', '2014-04-03 23:45:14'),
(311, 1, 'job', 'roster', 250, 'update', 'a:1:{s:6:"status";i:-1;}', '2014-04-03 23:45:59'),
(312, 1, 'job', 'roster', 257, 'update', 'a:1:{s:6:"status";i:-1;}', '2014-04-03 23:45:51'),
(313, 1, 'job', 'shift', 248, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-04 00:09:26'),
(314, 1, 'job', 'shift', 248, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-04 00:11:28'),
(315, 1, 'job', 'shift', 248, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-04 00:14:14'),
(316, 1, 'job', 'shift', 230, 'update', 'a:2:{s:8:"staff_id";s:1:"1";s:6:"status";s:1:"1";}', '2014-04-04 01:11:29'),
(317, 1, 'job', 'shift', 218, 'update', 'a:2:{s:8:"staff_id";i:0;s:6:"status";i:0;}', '2014-04-04 01:11:59'),
(318, 1, 'job', 'timesheet', 11, 'submit', '', '2014-04-04 06:15:35');

-- --------------------------------------------------------

--
-- Table structure for table `modules_functions`
--

CREATE TABLE `modules_functions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `modules_mvc_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `access` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `comment` text NOT NULL,
  `params` text NOT NULL,
  `attributes` text NOT NULL,
  `code` text NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=386 ;

--
-- Dumping data for table `modules_functions`
--

INSERT INTO `modules_functions` (`id`, `modules_mvc_id`, `name`, `access`, `description`, `comment`, `params`, `attributes`, `code`, `created`, `modified`) VALUES
(1, 1, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Account\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(2, 2, 'get_locations', 'public', 'ajax function to display custom location select field', '', '(via POST) location_id', '[{"attr_name":"return:","attr_desc":"\\t custom select field for location\\n\\t"}]', 'function get_locations()\n	{\n		$locations = $this->location_model->get_locations($this->input->post(''location_id''));\n		$location_id = $this->input->post(''location_id'');\n		$child_selected = $this->input->post(''child_selected'');\n		if ($this->input->post(''location_id'') && count($locations) > 0)\n		{\n			$array = array();\n			foreach($locations as $location)\n			{\n				$array[] = array(\n					''value'' => $location[''location_id''],\n					''label'' => $location[''name'']\n				);\n			}\n			echo modules::run(''common/field_select'', $array, ''location_id'', $child_selected);\n		}\n		\n	}\n	\n	\n	// begin roles', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(3, 2, 'get_roles', 'public', 'Displayes all the available roles in the system. The user can then sort the data based on Name or Frequency.', '', 'Post data - gets sort paramater', '[{"attr_name":"return","attr_desc":"\\t Lists all roles\\n\\t"}]', 'function get_roles()\n	{\n		$params = $this->input->post(''params'',true);\n		$data[''roles''] = $this->role_model->get_roles($params);\n		$data[''params''] = $params;\n		$this->load->view(''roles/ajax_list_roles'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(4, 2, 'add_role', 'public', 'Adds new role', '', 'Post data - name of the new role', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function add_role()\n	{\n		$data[''name''] = $this->input->post(''name'',true);\n		$this->role_model->insert_role($data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(5, 2, 'edit_role', 'public', 'Edit role', '', 'Post data - updated name of the role', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function edit_role()\n	{\n		$data[''name''] = $this->input->post(''new_name'',true);\n		$edit_id = $this->input->post(''role_id'',true);\n		$this->role_model->update_role($edit_id, $data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(6, 2, 'delete_role', 'public', 'Delete roles', 'Removes roles assigned to staff as well.', 'null', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"},{"attr_name":"action_required","attr_desc":"\\t Create staff and role relationship table\\n\\t"}]', 'function delete_role()\n	{\n		$role_id = $this->input->post(''role_id'',true);\n		$this->role_model->delete_role($role_id);\n		echo ''success'';\n	}\n	\n	// end roles \n	\n	// begin venues', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(7, 2, 'get_roles', 'public', 'Displayes all the available venues in the system. The user can then sort the data based on Name or Frequency.', '', 'Post data - gets sort paramater', '[{"attr_name":"return","attr_desc":"\\t Lists all roles\\n\\t"}]', 'function get_roles()\n	{\n		$params = $this->input->post(''params'',true);\n		$data[''roles''] = $this->role_model->get_roles($params);\n		$data[''params''] = $params;\n		$this->load->view(''roles/ajax_list_roles'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(8, 2, 'add_role', 'public', 'Adds new venue', '', 'Post data - venue data, this includes name, address, suburb, postcode, location details', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function add_role()\n	{\n		$data[''name''] = $this->input->post(''name'',true);\n		$this->role_model->insert_role($data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(9, 2, 'edit_role', 'public', 'Edit Venue', '', 'Post data - updated name of the role', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function edit_role()\n	{\n		$data[''name''] = $this->input->post(''new_name'',true);\n		$edit_id = $this->input->post(''role_id'',true);\n		$this->role_model->update_role($edit_id, $data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(10, 2, 'delete_role', 'public', 'Delete roles', 'Removes roles assigned to staff as well.', 'null', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"},{"attr_name":"action_required","attr_desc":"\\t Create staff and role relationship table\\n\\t"}]', 'function delete_role()\n	{\n		$role_id = $this->input->post(''role_id'',true);\n		$this->role_model->delete_role($role_id);\n		echo ''success'';\n	}\n	\n	// end roles \n	\n	// begin venues', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(11, 2, 'load_current_locations', 'public', 'Load current locations while editing venues', '', 'null', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function load_current_locations()\n	{\n		$location_parent_id = $this->input->post(''location_parent_id'',true);\n		$location_id = $this->input->post(''location_id'',true);\n		if($location_parent_id == 1 || $location_parent_id == 2){\n			$parent_selected = $location_id;\n			$child_selected = 0;\n		}else{\n			$parent_selected = $location_parent_id;	\n			$child_selected = $location_id;\n		}\n		echo modules::run(''attribute/location/field_select'',''parent_location_id_editing'',$parent_selected,$child_selected);	\n	}\n	\n	// end venue\n	\n	// begin uniform', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(12, 2, 'get_uniforms', 'public', 'Displayes all the available uniform in the system. The user can then sort the data based on Name.', '', 'Post data - gets sort paramater', '[{"attr_name":"return","attr_desc":"\\t Lists all uniforms\\n\\t"}]', 'function get_uniforms()\n	{\n		$params = $this->input->post(''params'',true);\n		$data[''uniforms''] = $this->uniform_model->get_uniforms($params);\n		$this->load->view(''uniform/ajax_list_uniforms'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(13, 2, 'add_uniform', 'public', 'Adds new uniform', '', 'Post data - New uniform details', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function add_uniform()\n	{\n		$data = $this->input->post();\n		$this->uniform_model->insert_uniform($data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(14, 2, 'edit_uniform', 'public', 'Edit Uniform', '', 'Post data - updated uniform data', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function edit_uniform()\n	{\n		$data = $this->input->post();\n		$this->uniform_model->update_uniform($data[''uniform_id''], $data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(15, 2, 'delete_uniform', 'public', 'Delete Uniform', 'Removes uniform', 'null', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function delete_uniform()\n	{\n		$uniform_id = $this->input->post(''delete_id'',true);\n		$this->uniform_model->delete_uniform($uniform_id);\n		echo ''success'';\n	}\n	\n	//end uniform\n	\n	\n	//begin groups', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(16, 2, 'get_roles', 'public', 'Displayes all the available groups in the system. The user can then sort the data based on Name or Frequency.', '', 'Post data - gets sort paramater', '[{"attr_name":"return","attr_desc":"\\t Lists all roles\\n\\t"}]', 'function get_roles()\n	{\n		$params = $this->input->post(''params'',true);\n		$data[''roles''] = $this->role_model->get_roles($params);\n		$data[''params''] = $params;\n		$this->load->view(''roles/ajax_list_roles'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(17, 2, 'add_role', 'public', 'Adds new group', '', 'Post data - name of the new group', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function add_role()\n	{\n		$data[''name''] = $this->input->post(''name'',true);\n		$this->role_model->insert_role($data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(18, 2, 'add_role', 'public', 'Edit new group', '', 'Post data - name of the new group', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function add_role()\n	{\n		$data[''name''] = $this->input->post(''name'',true);\n		$this->role_model->insert_role($data);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(19, 2, 'delete_group', 'public', 'Delete Group', 'Removes Group', 'null', '[{"attr_name":"return","attr_desc":"\\t \\n\\t"}]', 'function delete_group()\n	{\n		$group_id = $this->input->post(''delete_id'',true);\n		$this->group_model->delete_group($group_id);\n		echo ''success'';\n	} \n	//end groups\n	\n	\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(20, 3, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Attribute\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(21, 4, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Common\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(22, 5, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Common\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(23, 6, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Common\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(24, 7, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Attribute Pay Rate\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(25, 7, 'build_payrate', 'public', 'This is a function to build the payrate table, to tune the speed of page loading', '', 'id', '[{"attr_name":"return","attr_desc":"     built table\\n\\t"}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(26, 8, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Common\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(27, 9, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Common\\n "},{"attr_name":"author:","attr_desc":"  kaushtuv\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(28, 10, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Common\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(29, 11, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Common\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(30, 16, 'get_roles', 'public', 'This function queries the database and returns the list of roles based on the sort parameter. The roles are sorted in the ascending order of their name by default.', '', 'string(sort parameter)', '[{"attr_name":"return","attr_desc":"\\t Returns array of avaliable roles\\n\\t"}]', 'function get_roles($params = '''')\n	{\n		$sql = "select attribute_roles.*, (select count(staff_roles_id) from staff_roles where attribute_roles.role_id = staff_roles.attribute_role_id) as frequency from attribute_roles";\n		if($params){\n			$sort_param = json_decode($params);	\n			$sql .= " order by $sort_param->sort_by $sort_param->sort_order";\n		}else{\n			$sql .= " order by name asc";\n		}\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(31, 19, 'get_roles', 'public', 'This function queries the database and returns the list of roles based on the sort parameter. The roles are sorted in the ascending order of their name by default.', '', 'string(sort parameter)', '[{"attr_name":"return","attr_desc":"\\t Returns array of avaliable roles\\n\\t"}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(32, 20, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Auth\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(33, 22, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(34, 22, 'update_client', 'public', 'abstract function to update client profile', '', '(int) $user_id, (string) $tab', '[{"attr_name":"return:","attr_desc":"\\t (view) of different update form depends on selected tab\\n\\t"}]', 'function update_client($user_id, $tab)\n	{\n		$data[''client''] = $this->client_model->get_client($user_id);\n		$this->load->view(''edit_'' . $tab, isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(35, 22, 'delete_client', 'public', 'Delete single client', '', '(via POST) user id', '', 'function delete_client()\n	{\n		$user_id = $this->input->post(''user_id'',true);\n		return $this->user_model->update_user($user_id,array(''status'' => 2));	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(36, 22, 'delete_multi_clients', 'public', 'Delete multiple clients', '', '(via POST) user id', '', 'function delete_multi_clients()\n	{\n		$user_ids = $this->input->post(''user_client_selected_user_id'');\n		return $this->user_model->delete_multi_users(implode('','',$user_ids));\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(37, 22, 'update_status_multi_clients', 'public', 'Update rating for multiple clients', '', '(via POST) user id and new rating', '', 'function update_status_multi_clients()\n	{\n		$user_ids = $this->input->post(''user_client_selected_user_id'',true);\n		$new_status = $this->input->post(''new_multi_status'',true);\n		return $this->user_model->update_status_multi_users(implode('','',$user_ids),$new_status);\n	}\n	\n	\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(38, 23, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Client\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(39, 23, 'field_select_status', 'public', 'custom select client status field', '', '- $field_name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional)\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional)\\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom select client status field\\n\\t"}]', 'function field_select_status($field_name, $field_value=null, $size=null)\n	{\n		$array = array(\n			array(''value'' => CLIENT_ACTIVE, ''label'' => ''Active''),\n			array(''value'' => CLIENT_INACTIVE, ''label'' => ''Inactive'')\n		);\n		return modules::run(''common/field_select'', $array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(40, 26, 'field_select', 'public', 'custom select input field', '', '- $array: an array of field value/label pairs', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_name: string of field name\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional): selected value of field\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional): size \\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom view of select input field\\n\\t"}]', 'function field_select($array, $field_name, $field_value=null, $size=null, $title = true) {\n		$data = array(\n			''data'' => $array,\n			''field_name'' => $field_name,\n			''field_value'' => $field_value,\n			''size'' => $size,\n			''title'' => $title\n		);\n		$this->load->view(''field_select'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(41, 26, 'field_select_states', 'public', 'custom select states field', '', '- $field_name: string of field name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional): selected state code\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional): size \\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom view of select states field\\n\\t"}]', 'function field_select_states($field_name, $field_value=null, $size=null) {\n		$states = $this->common_model->get_states();\n		$array = array();\n		foreach($states as $state)\n		{\n			$array[] = array(\n				''value'' => $state[''code''],\n				''label'' => $state[''name'']\n			);\n		}\n		return $this->field_select($array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(42, 26, 'field_select_countries', 'public', 'custom select countries field', '', '- $field_name: string of field name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional): selected country code\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional): size \\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom view of select states field\\n\\t"}]', 'function field_select_countries($field_name, $field_value=null, $size=null) {\n		$countries = $this->common_model->get_countries();\n		if ($field_value == null || $field_value=='''')\n		{\n			$field_value = ''AU'';\n		}\n		$array = array();\n		foreach($countries as $country)\n		{\n			$array[] = array(\n				''value'' => $country[''code''],\n				''label'' => $country[''name'']\n			);\n		}\n		return $this->field_select($array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(43, 26, 'field_select_genders', 'public', 'custom select genders field', '', '- $field_name: string of field name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional): selected gender value\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional): size\\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom select gender field\\n\\t"}]', 'function field_select_genders($field_name, $field_value=null, $size=null) {\n		$array = array(\n			array(''value'' => GENDER_MALE, ''label'' => ''Male''),\n			array(''value'' => GENDER_FEMALE, ''label'' => ''Female'')\n		);\n		return $this->field_select($array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(44, 26, 'field_select_title', 'public', 'custom select title field', '', '- $field_name: string of field name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional): selected gender value\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional): size\\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom select title field\\n\\t"}]', 'function field_select_title($field_name, $field_value=null, $size=null) {\n		$array = array(\n			array(''value'' => ''Mr'', ''label'' => ''Mr''),\n			array(''value'' => ''Miss'', ''label'' => ''Miss''),\n			array(''value'' => ''Mrs'', ''label'' => ''Mrs'')\n		);\n		return $this->field_select($array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(45, 26, 'field_rating', 'public', 'custom input field for rating', '', '- $field_name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional) \\n\\t"},{"attr_name":"return:","attr_desc":"     custom input field for rating \\n\\t"}]', 'function field_rating($field_name,$field_value=null,$selector=''basic'',$ajax_reload_container = ''wp-rating'',$user_id = 0,$ajax_update = false,$disabled=false) {\n		$data[''field_name''] = $field_name;\n		$data[''field_value''] = $field_value;\n		$data[''disabled''] = $disabled;\n		$data[''selector''] = $selector;\n		$data[''ajax_reload_container''] = $ajax_reload_container;\n		$data[''ajax_update''] = $ajax_update;\n		$data[''user_id''] = $user_id;\n		$this->load->view(''field_rating'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(46, 28, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(47, 30, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(48, 31, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(49, 33, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(50, 34, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Dashboard_staff\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(51, 36, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(52, 36, 'load_email_template', 'public', 'ajax function to load (abstract) view of an email template', '', '(string) $object', '[{"attr_name":"return:","attr_desc":"\\t (html) view of email template configuration based on tab\\n\\t"}]', 'function load_email_template($tab=''welcome_staff'') {\n		switch($tab){\n			case ''welcome_staff'':\n				$data[''template''] = $this->email_template_model->get_template(1);\n			break;	\n			case ''roster_update'':\n				$data[''template''] = $this->email_template_model->get_template(2);\n			break;\n			case ''apply_shift'':\n				$data[''template''] = $this->email_template_model->get_template(3);\n			break;\n			case ''shift_reminder'':\n				$data[''template''] = $this->email_template_model->get_template(4);\n			break;\n			case ''work_confirmation'':\n				$data[''template''] = $this->email_template_model->get_template(5);\n			break;\n			case ''forgot_password'':\n				$data[''template''] = $this->email_template_model->get_template(6);\n			break;\n			case ''client_invoice'':\n				$data[''template''] = $this->email_template_model->get_template(7);\n			break;\n			case ''client_quote'':\n				$data[''template''] = $this->email_template_model->get_template(8);\n			break;\n		}\n		$this->load->view($tab, isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(53, 36, 'update_template', 'public', 'Update email template', '', '(via post)', '', 'function update_template()\n	{\n		$name_prefix = $this->input->post(''form_name_prefix'',true);\n		$template_id = $this->input->post(''template_update_id'',true);\n		$email_from = $this->input->post($name_prefix.''email_from'',true);\n		$email_subject = $this->input->post($name_prefix.''email_subject'',true);\n		$email = $this->input->post($name_prefix.''email'');\n		$auto_send =  $this->input->post($name_prefix.''auto_send'',true);\n		$data = array(\n					''template_content'' => $email,\n					''email_from'' => $email_from,\n					''email_subject'' => $email_subject,\n					''auto_send'' => ($auto_send ? ''yes'' : ''no''),\n					''modified'' => date(''Y-m-d H:i:s'')\n					);\n		echo $this->email_template_model->update_template($template_id,$data);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(54, 36, 'get_send_email_modal', 'public', 'Open modal window which contains the view to send email to multiple user', '', '(via POST) modal_header', '', 'function get_send_email_modal()\n	{\n		$data[''email_modal_header''] = "Contact User";\n		$selected_user_ids = $this->input->post(''user_staff_selected_user_id'',true);\n		if($this->input->post(''modal_header'',true)){\n			$data[''email_modal_header''] = $this->input->post(''email_modal_header'',true);	\n		}\n		$data[''total''] = 0;\n		$data[''selected_user_ids''] = '''';\n		if($selected_user_ids){\n			$data[''selected_user_ids''] = json_encode($selected_user_ids);	\n			$data[''total''] = count($selected_user_ids);\n		}\n		$this->load->view(''send_email_modal'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(55, 36, 'send_sample_email', 'public', 'Send sample email to a particular email vai send email modal window UI', '', '(via POST) user id', '', 'function send_sample_email()\n	{\n		$this->load->model(''setting/setting_model'');\n		$company = $this->setting_model->get_profile();	\n		$email_body = $this->input->post(''email_body'');\n		$email_subject = ''Staff Master Test Email'';\n		$email_template_id = $this->input->post(''email_template_select'',true);\n		if($email_template_id){\n			$template_info = $this->email_template_model->get_template($email_template_id);\n			$email_subject = $template_info->email_subject;\n		}\n		$email_to = $this->input->post(''sample_email_to'',true);\n		if($email_to){\n			$email_data = array(\n						''to'' => $email_to,\n						''from'' => $company[''email_c_email''],\n						''from_text'' => ''Admin @ ''.$company[''email_c_name''],\n						''subject'' => $email_subject,\n						''message'' => modules::run(''email/format_template_body'',$email_body)\n					);\n			if(LIVE_SERVER){\n				modules::run(''email/send_email'',$email_data);\n			}else{\n				modules::run(''email/send_email_localhost'',$email_data);\n			}\n		}\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(56, 36, 'send_email', 'private', 'Send email to a particular email vai send email modal window UI. This is a sample function only.', '', '(via POST)', '', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(57, 37, 'main_view', 'public', 'Load the landing page for email template. This is where the user will be able to modify email templates.', '', 'none', '[{"attr_name":"return:","attr_desc":"\\t Loads the UI to update email template\\n\\t"}]', 'function main_view(){\n		$this->load->view(''main_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(58, 37, 'get_email_obj', 'public', 'Create the object needed for a particular template', '', '([int] template id, [int] user id)', '[{"attr_name":"return:","attr_desc":"\\t returns object for a particular email template\\n\\t"}]', 'function get_email_obj($template_id,$user_id,$company,$password = '''')\n	{\n		$obj = array();\n		if($template_id && $user_id && $company){\n			$user = $this->user_model->get_user($user_id);\n			switch($template_id){\n				case 1:\n				//welcome\n				$obj = array(\n							''first_name'' => $user[''first_name''],\n							''last_name'' => $user[''last_name''],\n							''company_name'' => $company[''company_name''],\n							''system_url'' => base_url(),\n							''username'' => $user[''username''],\n							''password'' => $password,\n							);\n				\n				break;\n				\n				case 2:\n				//roster update\n				break;\n				\n				case 3:\n				//apply for shifts\n				break;\n				\n				case 4:\n				//shift reminder\n				break;\n				\n				case 5:\n				//work confirmation\n				break;\n				\n				case 6:\n				//forgot password\n				break;\n				\n				case 7:\n				//client invoice\n				break;\n				\n				case 8:\n				//client quote\n				break;\n			}\n		}\n		return $obj;\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(59, 37, 'email_templates_dropdown', 'public', '', '', '', '', 'function email_templates_dropdown($field_name, $field_value=null, $size=null)\n	{\n		$templates = $this->email_template_model->get_all_templates();\n		$count = 0;\n		if($templates){\n			foreach($templates as $template){\n				  $array[$count] = array(''value'' => $template->email_template_id, ''label'' => $template->template_name);\n				  $count++;\n			}\n		}\n		\n		return modules::run(''common/field_select'', $array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(60, 37, 'format_template_body', 'public', '', '', '', '', 'function format_template_body($email,$obj = NULL)\n	{\n		if($obj){\n				$email = str_replace(''{FirstName}'',$obj[''first_name''],$email);\n				$email = str_replace(''{FamilyName}'',$obj[''last_name''],$email);\n				$email = str_replace(''{CompanyName}'',$obj[''company_name''],$email);\n				$email = str_replace(''{SystemURL}'',$obj[''system_url''],$email);\n				$email = str_replace(''{UserName}'',$obj[''username''],$email);\n				$email = str_replace(''{Password}'',$obj[''password''],$email);\n				$email = str_replace(''{Roster}'',$obj[''roster''],$email);\n				$email = str_replace(''{SelectedShifts}'',$obj[''selected_shifts''],$email);\n		}\n		return $email;\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(61, 37, 'description_merge_fields', 'public', '', '', '', '', 'function description_merge_fields($text_area_id,$template_id = '''')\n	{\n		$data[''text_area_id''] = $text_area_id;\n		if(!$template_id){\n			$template_id = 1;	\n		}\n		$data[''merge_fields''] = $this->email_template_model->get_email_merge_fields_by_template_id($template_id);\n		$this->load->view(''description_merge_fields'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(62, 37, 'send_email', 'public', 'A central function to send email', '', '(array) email data', '', 'function send_email($data)\n	{\n		$to = '''';\n		$from = '''';\n		$cc = '''';\n		$bcc = '''';\n		$from_text = '''';\n		$subject = ''''; \n		$message = ''''; \n		$attachment = ''''; \n		$bcc = '''';\n		if($data){\n			foreach($data as $key=>$val){\n				switch($key){\n					case ''to'':\n						$to = $val;\n					break;\n					\n					case ''from'':\n						$from = $val;\n					break;\n					\n					case ''cc'':\n						$cc = $val;\n					break;\n										\n					case ''bcc'':\n						$bcc = $val;\n					break;\n					\n					case ''from_text'':\n						$from_text = $val;\n					break;\n					\n					case ''subject'':\n						$subject = $val;\n					break;\n					\n					case ''message'':\n						$message = $val;\n					break;\n					\n					case ''attachment'':\n						$attachment = $val;\n					break;	\n				}\n				\n				\n			}\n		\n			$this->load->library(''email'');\n			$config[''mailtype''] = ''html'';\n			$this->email->initialize($config);\n			$this->email->from($from,$from_text);		\n			$this->email->to($to);\n			$this->email->cc($cc);\n			$this->email->bcc($bcc);\n			$company_logo = modules::run(''setting/company_logo'');\n			$email_signature = modules::run(''setting/ajax/get_template_footer'');\n			$this->email->subject($subject);\n			$this->email->message($company_logo . ''<br />''.$message . $email_signature);\n			//$this->email->attach($attachment);\n			$this->email->send();\n			$this->email->clear(true);	\n			return true;\n					\n		}else{\n			return false;	\n		}\n		\n\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(63, 37, 'send_email', 'public', 'Test function to send email from localhost', '', '', '', 'function send_email($data)\n	{\n		$to = '''';\n		$from = '''';\n		$cc = '''';\n		$bcc = '''';\n		$from_text = '''';\n		$subject = ''''; \n		$message = ''''; \n		$attachment = ''''; \n		$bcc = '''';\n		if($data){\n			foreach($data as $key=>$val){\n				switch($key){\n					case ''to'':\n						$to = $val;\n					break;\n					\n					case ''from'':\n						$from = $val;\n					break;\n					\n					case ''cc'':\n						$cc = $val;\n					break;\n										\n					case ''bcc'':\n						$bcc = $val;\n					break;\n					\n					case ''from_text'':\n						$from_text = $val;\n					break;\n					\n					case ''subject'':\n						$subject = $val;\n					break;\n					\n					case ''message'':\n						$message = $val;\n					break;\n					\n					case ''attachment'':\n						$attachment = $val;\n					break;	\n				}\n				\n				\n			}\n		\n			$this->load->library(''email'');\n			$config[''mailtype''] = ''html'';\n			$this->email->initialize($config);\n			$this->email->from($from,$from_text);		\n			$this->email->to($to);\n			$this->email->cc($cc);\n			$this->email->bcc($bcc);\n			$company_logo = modules::run(''setting/company_logo'');\n			$email_signature = modules::run(''setting/ajax/get_template_footer'');\n			$this->email->subject($subject);\n			$this->email->message($company_logo . ''<br />''.$message . $email_signature);\n			//$this->email->attach($attachment);\n			$this->email->send();\n			$this->email->clear(true);	\n			return true;\n					\n		}else{\n			return false;	\n		}\n		\n\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(64, 39, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(65, 39, 'load_object', 'public', 'ajax function to load (abstract) view of an export template', '', '(string) $object', '[{"attr_name":"return:","attr_desc":"\\t (html) (abstract) view of export template configuration\\n\\t"}]', 'function load_object($object=''invoice'') {\n		$data[''object''] = $object;\n		$this->load->view(''object_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(66, 40, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Export\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(67, 42, 'home', 'public', 'This is the landing page of the formbuiler module. This page provides the necessary UI to build custom forms for the user.', 'Build by taking reference from http://minikomi.github.io/Bootstrap-Form-Builder. However it should be noted that the similarity is only limited to the UI and the actual functions are custom build.', 'null', '[{"attr_name":"return","attr_desc":"\\t loads the view file home. which contains the UI elements to generate custom form elements.\\n\\t"},{"attr_name":"author","attr_desc":"\\t kaushtuv\\n\\t"}]', 'function home()\n	{\n		$this->load->view(''home'');	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(68, 42, 'existing_form_elements', 'public', 'Shows the existing form for custom attributes.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Loads existing form elements for custom attributes.\\n\\t"}]', 'function existing_form_elements()\n	{\n		$data[''existing_elements''] = $this->formbuilder_model->get_form_elements();\n		$this->load->view(''existing_form'',isset($data) ? $data : NULL);	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(69, 42, 'home', 'public', 'Add Form', '', 'null', '[{"attr_name":"return","attr_desc":"\\t null\\n\\t"}]', 'function home()\n	{\n		$this->load->view(''home'');	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(70, 42, '_insert_data', 'private', 'This function is used to parse the data posted form formbuilder interface and prepare the data for insertion. Once the data has been prepared it is then inserted into the database.', '', 'object(form_elements),string(type of element),string(state if the form element is inline, default = no)', '[{"attr_name":"return","attr_desc":"\\t does not return anything, simply adds the data to the database\\n\\t"}]', 'function _insert_data($decoded_obj,$type,$decoded_sort_order,$inline_multi = ''no'')\n	{\n		$decoded_array = (array)$decoded_obj;\n		//echo ''<pre>''.print_r($decoded_array,true).''</pre>'';exit(0);\n		\n		if($decoded_array && $type){\n			switch($type){\n				case ''textinput'':\n					foreach($decoded_array as $arr){\n						$data = array(\n							''type'' => $type,\n							''label'' => $arr->label,\n							''name'' => $arr->name,\n							''placeholder'' => $arr->placeholder,\n							''order'' => $this->_get_element_order($decoded_sort_order,$arr->name)\n							);	\n						$this->formbuilder_model->insert_form($data);\n					}\n				break;	\n				\n				case ''textarea'':\n					foreach($decoded_array as $arr){\n						$data = array(\n							''type'' => $type,\n							''label'' => $arr->label,\n							''name'' => $arr->name,\n							''order'' => $this->_get_element_order($decoded_sort_order,$arr->name)\n							);	\n						$this->formbuilder_model->insert_form($data);\n					}\n				break;\n				\n				case ''radio'':\n					foreach($decoded_array as $arr){\n						$data = array(\n							''type'' => $type,\n							''label'' => $arr[''attr'']->label,\n							''name'' => $arr[''attr'']->name,\n							''inline_element'' => $inline_multi,\n							''attributes'' => json_encode($arr[''values'']),\n							''order'' => $this->_get_element_order($decoded_sort_order,$arr[''attr'']->name)\n							);	\n						$this->formbuilder_model->insert_form($data);\n					}\n				break;\n				\n				case ''checkbox'':\n					foreach($decoded_array as $arr){\n						$data = array(\n							''type'' => $type,\n							''label'' => $arr[''attr'']->label,\n							''name'' => $arr[''attr'']->name,\n							''multi_select'' => ''yes'',\n							''inline_element'' => $inline_multi,\n							''attributes'' => json_encode($arr[''values'']),\n							''order'' => $this->_get_element_order($decoded_sort_order,$arr[''attr'']->name)\n							);	\n						$this->formbuilder_model->insert_form($data);\n					}\n				break;\n				\n				case ''select'':\n					foreach($decoded_array as $arr){\n						$data = array(\n							''type'' => $type,\n							''label'' => $arr[''attr'']->label,\n							''name'' => $arr[''attr'']->name,\n							''multi_select'' => $inline_multi,\n							''attributes'' => json_encode($arr[''values'']),\n							''order'' => $this->_get_element_order($decoded_sort_order,$arr[''attr'']->name)\n							);	\n						$this->formbuilder_model->insert_form($data);\n					}\n				break;\n				\n				case ''filebutton'':\n					foreach($decoded_array as $arr){\n						$data = array(\n							''type'' => $type,\n							''label'' => $arr->label,\n							''name'' => $arr->name,\n							''order'' => $this->_get_element_order($decoded_sort_order,$arr->name)\n							);	\n						$this->formbuilder_model->insert_form($data);\n					}\n				break;\n			}\n		}\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(71, 42, '_get_element_order', 'private', 'This returns the order of the element', '', 'array(array of elements and their order),string(element name)', '[{"attr_name":"return","attr_desc":"\\t returns json decoded array that contains objects in inner levels\\n\\t"}]', 'function _get_element_order($order_array,$element_name)\n	{\n		if($order_array && $element_name){\n			foreach($order_array as $key => $val){\n					if($key == $element_name){\n						return $val;	\n					}\n			}\n		}\n		return 0;	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(72, 42, '_manual_jason_decode', 'private', 'This function is used to manually decode the json data. This was done as the php build in json_decode failed to decode the multi level json string.', '', 'json(form elements),enum(status if the data has multi dimension)', '[{"attr_name":"return","attr_desc":"\\t returns json decoded array that contains objects in inner levels\\n\\t"}]', 'function _manual_jason_decode($data,$multi = false)\n	{\n		$temp_arr = array();\n		$final_arr = array();\n		$count = 0;\n		$separator = $multi ? ''],'' : ''},'';\n		$post_fix = $multi ? '']'' : ''}'';\n		if($data){\n			if(!$multi){\n				$temp_arr = explode($separator,$data);\n				if(count($temp_arr) > 1){	\n					$temp_arr[0] = $temp_arr[0].$post_fix;\n				}\n				foreach($temp_arr as $arr){\n					$final_arr[$count] = json_decode($arr);	\n					$count++;	\n				}\n			}else{\n				$temp_arr = explode($separator,$data);\n				if(count($temp_arr) > 1){		\n					$temp_arr[0] = $temp_arr[0].$post_fix;	\n				}\n				$multi_arr = array();\n				foreach($temp_arr as $arr){\n					$multi_arr = json_decode($arr);\n					$inner_counter = 0;\n					$temp_multi_arr = array();\n					if($multi_arr){\n						foreach($multi_arr as $ma){\n							if($inner_counter == 0){\n								$temp_multi_arr[''attr''] = json_decode($ma); 	\n							}else{\n								$temp_multi_arr[''values''][$inner_counter] = json_decode($ma); 	\n							}\n							$inner_counter++;\n						}\n					}\n					$final_arr[$count] = $temp_multi_arr;\n					$count++;	\n				}\n			}\n		}\n		return $final_arr;\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(73, 42, '_manual_jason_decode', 'private', 'This function is used to manually decode the json data for sort order. This was done as the php build in json_decode failed to decode the multi level json string.', '', 'json(form elements)', '[{"attr_name":"return","attr_desc":"\\t returns json decoded array \\n\\t"}]', 'function _manual_jason_decode($data,$multi = false)\n	{\n		$temp_arr = array();\n		$final_arr = array();\n		$count = 0;\n		$separator = $multi ? ''],'' : ''},'';\n		$post_fix = $multi ? '']'' : ''}'';\n		if($data){\n			if(!$multi){\n				$temp_arr = explode($separator,$data);\n				if(count($temp_arr) > 1){	\n					$temp_arr[0] = $temp_arr[0].$post_fix;\n				}\n				foreach($temp_arr as $arr){\n					$final_arr[$count] = json_decode($arr);	\n					$count++;	\n				}\n			}else{\n				$temp_arr = explode($separator,$data);\n				if(count($temp_arr) > 1){		\n					$temp_arr[0] = $temp_arr[0].$post_fix;	\n				}\n				$multi_arr = array();\n				foreach($temp_arr as $arr){\n					$multi_arr = json_decode($arr);\n					$inner_counter = 0;\n					$temp_multi_arr = array();\n					if($multi_arr){\n						foreach($multi_arr as $ma){\n							if($inner_counter == 0){\n								$temp_multi_arr[''attr''] = json_decode($ma); 	\n							}else{\n								$temp_multi_arr[''values''][$inner_counter] = json_decode($ma); 	\n							}\n							$inner_counter++;\n						}\n					}\n					$final_arr[$count] = $temp_multi_arr;\n					$count++;	\n				}\n			}\n		}\n		return $final_arr;\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(74, 42, 'has_multiple_value', 'public', 'Checks if an attribute can have multiple value', '', '(string) name of the attribute', '[{"attr_name":"return","attr_desc":"\\t return true if an attribute can have multiple value otherwise it returns false\\n\\t"}]', 'function has_multiple_value($attribute_name)\n	{\n		$attribute_info = $this->formbuilder_model->get_attribute_info($attribute_name);\n		return  ($attribute_info->multi_select == ''yes'' ? true : false);\n\n	}\n\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(75, 43, 'get_attribute_info', 'public', 'Returns attribute info when name of the attribute is supplied', '', '(string) name of the attribute', '[{"attr_name":"return","attr_desc":"\\t returns attribute details\\n\\t"}]', 'function get_attribute_info($attribute_name)\n	{\n		return $this->db->where(''name'',$attribute_name)->get(''custom_forms'')->row();\n	}\n	\n	\n	\n	\n	\n	\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(76, 44, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(77, 44, 'load_edit_conversation_modal', 'public', 'Loads the most recent conversations', '', '(session) user info stored in the session variable when a user logs in', '[{"attr_name":"return:","attr_desc":"\\t returns 10 most recent conversation\\n\\t"}]', 'function load_edit_conversation_modal($topic_id)\n	{\n		$data[''conversation''] = $this->forum_model->get_conversation_by_id($topic_id);\n		$this->load->view(''create_topic_form'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(78, 44, 'take_poll', 'public', 'Adds survey info into the database when a user takes a survey', '', '([vai post][int] topic id, [int] poll answer id)', '[{"attr_name":"return:","attr_desc":"\\t the poll result\\n\\t"}]', 'function take_poll()\n	{\n		$poll_answer_id = $this->input->post(''poll_answer_id'',true);\n		$topic_id = $this->input->post(''topic_id'',true);\n		$current_answer_stat = $this->forum_model->get_poll_answer_by_id($poll_answer_id);\n		$user = $this->session->userdata(''user_data'');\n		if($current_answer_stat){\n			//update poll answer count\n			$data = array(\n							''answer_count'' => $current_answer_stat->answer_count+1\n						);\n			$this->forum_model->update_poll_answers($poll_answer_id,$data);\n			//mark this user as someone who has already taken the poll\n			$data_user_poll_answers = array(\n											''topic_id'' => $topic_id,\n											''poll_answer_id'' => $poll_answer_id,\n											''user_id'' => $user[''user_id'']\n										);\n			$this->forum_model->add_user_poll_answers($data_user_poll_answers);\n		}\n		echo modules::run(''forum/load_poll'',$topic_id);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(79, 44, 'load_conversation_list', 'public', 'Loads the most recent conversations', '', '(session) user info stored in the session variable when a user logs in', '[{"attr_name":"return:","attr_desc":"\\t returns 10 most recent conversation\\n\\t"}]', 'function load_conversation_list()\n	{\n		$params = $this->input->post(''params'',true);\n		$user = $this->session->userdata(''user_data'');\n		$data[''user''] = $user;\n		$data[''conversations''] = $this->forum_model->get_conversations($user,$params); \n		$this->load->view(''conversation_list'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(80, 44, 'delete_forum_reply', 'public', 'Delete forum reply', '', '([vai post] [int] message id)', '[{"attr_name":"return","attr_desc":"\\t success or failed message\\n\\t"}]', 'function delete_forum_reply()\n	{\n		$message_id = $this->input->post(''message_id'',true);\n		$this->forum_model->delete_conversation_reply($message_id);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(81, 44, 'delete_conversation', 'public', 'Delets conversation from the system including the replies for that conversation along with any documents associated with it.', 'Removes conversation from the system', 'null', '[{"attr_name":"return","attr_desc":"\\t success for failed message\\n\\t"}]', 'function delete_conversation()\n	{\n		$topic_id = $this->input->post(''delete_id'',true);\n		$conversation = $this->forum_model->get_conversation_by_id($topic_id);\n		$file_name = $conversation->document_name;\n		if($conversation->document_type == ''image''){\n			//delete images\n			$path = ''./uploads/conversation/img/''.md5(''forum''.$topic_id);\n			$this->load->helper("file"); // load the helper\n			delete_files($path, true); // delete all files/folders\n			rmdir($path);\n		}elseif($conversation->document_type == ''file''){\n			//delete documents\n			$path = ''./uploads/conversation/docs/''.md5(''forum''.$topic_id);\n			$this->load->helper("file"); // load the helper\n			delete_files($path, true); // delete all files/folders\n			rmdir($path);\n		}\n		\n		//delete replies\n		$this->forum_model->delete_conversation_replies($topic_id);\n		//delete conversation\n		$this->forum_model->delete_conversation_topic($topic_id);\n		//delete forum poll answers\n		$this->forum_model->delete_poll_answers_by_topic_id($topic_id);\n		//delete forum_user_poll_answers\n		$this->forum_model->delete_user_poll_answers_by_topic_id($topic_id);\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(82, 44, 'reload_conversation', 'public', 'This function reloads conversations. Mostly after a new conversation has been created etc.', '', '(null)', '[{"attr_name":"return:","attr_desc":"\\t returns 10 most recent conversation\\n\\t"}]', 'function reload_conversation()\n	{\n		echo modules::run(''forum/load_conversation'');	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(83, 44, 'post_reply', 'public', 'This functions posts reply to a conversation topic', '', '(via post [int] topic id, [text] reply)', '[{"attr_name":"return:","attr_desc":"\\t returns 10 most recent conversation\\n\\t"}]', 'function post_reply()\n	{\n		$reply = $this->input->post(''reply'',true);\n		$topic_id = $this->input->post(''topic_id'',true);\n		$user_info = $this->session->userdata(''user_data'');\n		\n		if($reply && $topic_id && $user_info){\n			$data = array(\n							''topic_id'' => $topic_id,\n							''message'' => $reply,\n							''posted_by'' => $user_info[''user_id'']\n						);	\n			if($this->forum_model->add_reply($data)){\n				echo modules::run(''forum/load_replies'',$topic_id);\n			}\n		}\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(84, 44, 'create_topic_form', 'public', 'Provides user with a UI to start fresh conversation topic. This is generally provided in a modal window.', '', '(null)', '[{"attr_name":"return:","attr_desc":"\\t loads the UI to create conversations (forum topics)\\n\\t"}]', 'function create_topic_form() {\n		$this->load->view(''create_topic_form'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00');
INSERT INTO `modules_functions` (`id`, `modules_mvc_id`, `name`, `access`, `description`, `comment`, `params`, `attributes`, `code`, `created`, `modified`) VALUES
(85, 44, 'start_conversation', 'public', 'Adds new conversation topic', '', '(via post) conversation title, conversation message, documents', '[{"attr_name":"return:","attr_desc":"\\t status of the initiation process i.e. successful or not.\\n\\t"}]', 'function start_conversation()\n	{\n		$title = $this->input->post(''conversation_title'',true);\n		$message = $this->input->post(''conversation_message'',true);\n		$group_id = $this->input->post(''conversation_groups'',true);\n		$send_by_email = $this->input->post(''send_by_email'',true);\n		$update_id = $this->input->post(''update_id'',true);\n		\n		$user_info = $this->session->userdata(''user_data'');\n		$topic_id = 0;\n		\n		if($update_id){\n			//update data\n			$data = array(\n						''title'' => $title,\n						''message'' => $message,\n						''group_id'' => $group_id\n						);\n			$this->forum_model->update_topic($update_id,$data);\n			$topic_id = $update_id;\n		}else{\n			//insert data\n			$data = array(\n						''title'' => $title,\n						''message'' => $message,\n						''group_id'' => $group_id,\n						''created_by'' => $user_info[''user_id'']\n						);\n			$insert_id = $this->forum_model->add_topic($data);\n			$topic_id = $insert_id;\n		}	\n		  //if a file has been uploaded\n		  //this ignores previous files that has been uploaded as the system is cleaned every six month\n		  if($_FILES[''userfile''][''name'']){\n			  //create main folders if not exist\n			  $main_sub_folders = array(''img'',''docs'');\n			  $this->_create_upload_folders(''./uploads/conversation/'',$main_sub_folders);\n		\n			  $path = $_FILES[''userfile''][''name''];\n			  $ext = pathinfo($path, PATHINFO_EXTENSION);\n			  $img_ext_chk = array(''jpg'',''png'',''gif'',''jpeg'');\n			  $doc_ext_chk = array(''pdf'',''doc'',''docx'');\n			  \n			  $main_path = ''./uploads/conversation/'';\n			  $this->load->library(''upload'');\n			  \n			  if (in_array($ext,$img_ext_chk)){\n				  //image\n				  $subfolders = array(''thumb'');\n				  $salt = ''forum''.$topic_id;\n				  //create folders\n				  $folder_name = $this->_create_folders(''./uploads/conversation/img'',$salt,$subfolders);\n				  $file_path = $main_path.''img/'';\n				  $config[''upload_path''] = $file_path.$folder_name;\n				  $config[''allowed_types''] = ''gif|jpg|png|jpeg'';\n				  $config[''max_width'']  = ''2000'';\n				  $config[''max_height'']  = ''2000'';\n				  $document_type = ''image'';\n					  \n			  }elseif (in_array($ext,$doc_ext_chk)){\n				  //documents\n				  $salt = ''forum''.$topic_id;\n				  //create folders\n				  $folder_name = $this->_create_folders(''./uploads/conversation/docs'',$salt);\n				  $file_path = $main_path.''docs/'';\n				  $config[''upload_path''] = $file_path.$folder_name;\n				  $config[''allowed_types''] = ''pdf|doc|docx'';\n				  $document_type = ''file'';\n			  }\n	\n			  $config[''max_size'']	= ''4096''; // 4 MB\n			  $config[''overwrite''] = FALSE;\n			  $config[''remove_space''] = TRUE;\n			  \n			  $this->upload->initialize($config);\n			  \n			  if (!$this->upload->do_upload()){\n				  $this->session->set_flashdata(''error_with_fileupload'',$this->upload->display_errors());			\n			  }else{\n				  $data = array(''upload_data'' => $this->upload->data());\n				  $file_name = $data[''upload_data''][''file_name''];\n				  $file_data = array(\n					  ''document_type'' => $document_type,\n					  ''document_name'' => $file_name									\n				  );\n				  $this->forum_model->update_topic($topic_id,$file_data);\n				  //create thumbnail if file type is image\n				  if (in_array($ext,$img_ext_chk)){\n					  $thumb_path = $main_path.''img/''.$folder_name;\n					  $this->_resize_photo($file_name,$thumb_path,"thumb",450,338);\n				  }\n			  }\n		  }\n		  \n		  if($send_by_email){\n			  //send email to staff	\n			  modules::run(''forum/send_conversation_notification'',$topic_id);\n		  }\n		\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(86, 44, 'create_poll', 'public', 'Adds new poll', '', '(via post) question, poll answers', '[{"attr_name":"return:","attr_desc":"\\t status of the initiation process i.e. successful or not.\\n\\t"}]', 'function create_poll()\n	{\n		$poll_question = $this->input->post(''poll_question'',true);\n		$poll_answers = $this->input->post(''poll_answers'',true);\n		$group_id = $this->input->post(''conversation_groups'',true);\n		$send_by_email = $this->input->post(''send_by_email'',true);\n		\n		$user_info = $this->session->userdata(''user_data'');\n\n		//insert data\n		$data = array(\n					''title'' => $poll_question,\n					''message'' => json_encode($poll_answers),\n					''group_id'' => $group_id,\n					''type'' => ''poll'',\n					''created_by'' => $user_info[''user_id'']\n					);\n		$insert_id = $this->forum_model->add_topic($data);\n		//add poll answers\n		if($poll_answers)\n		foreach($poll_answers as $pa){\n			if($pa){\n				$poll_data = array(\n									''topic_id'' => $insert_id,\n									''answer'' => $pa\n								);\n				$this->forum_model->add_poll_answers($poll_data);\n			}\n		}\n\n		  \n		if($send_by_email){\n			//send email to staff	\n			modules::run(''forum/send_conversation_notification'',$insert_id);\n		}\n		\n		echo ''success'';\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(87, 44, '_create_upload_folders', 'private', 'Creates main folder for documents in the upload folders. This not the folder with md5 hash names. These folders have distinct meaning such as staff_picture etc.', '', '(string) path of the folder, (array) array of subfolders if applicable', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function _create_upload_folders($path,$subfolders = null)\n	{	\n		//create staff specific folders\n		if($path){\n			$dir = $path;\n			if(!is_dir($dir))\n			{\n			  mkdir($dir);\n			  chmod($dir,0777);\n			  $fp = fopen($dir.''/index.html'', ''w'');\n			  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n			  fclose($fp);\n			}\n			\n			$sub_dir = '''';\n			if($subfolders){\n				foreach($subfolders as $folder){\n					$sub_dir = $dir.''/''.$folder;	\n					if(!is_dir($sub_dir))\n					{\n					  mkdir($sub_dir);\n					  chmod($sub_dir,0777);\n					  $fp = fopen($sub_dir.''/index.html'', ''w'');\n					  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n					  fclose($fp);\n					}		\n				}\n			}\n		}\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(88, 44, '_create_folders', 'private', 'Creates folder for documents', '', '(string) path of the folder, (string) salt, (array) array of subfolders if applicable', '[{"attr_name":"return:","attr_desc":"\\t returns the folder name to the control that called this function\\n\\t"}]', 'function _create_folders($path,$salt,$subfolders = null)\n	{	\n		//create staff specific folders\n		if($path && $salt){\n			$newfolder = md5($salt);\n			$dir = $path."/".$newfolder;\n			if(!is_dir($dir))\n			{\n			  mkdir($dir);\n			  chmod($dir,0777);\n			  $fp = fopen($dir.''/index.html'', ''w'');\n			  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n			  fclose($fp);\n			}\n			\n			$sub_dir = '''';\n			if($subfolders){\n				foreach($subfolders as $folder){\n					$sub_dir = $dir.''/''.$folder;	\n					if(!is_dir($sub_dir))\n					{\n					  mkdir($sub_dir);\n					  chmod($sub_dir,0777);\n					  $fp = fopen($sub_dir.''/index.html'', ''w'');\n					  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n					  fclose($fp);\n					}		\n				}\n			}\n			return $newfolder;\n		}\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(89, 44, '_resize_photo', 'private', 'Create thumbnails for images', '', '(string) path of the folder, (string) salt, (array) array of subfolders if applicable', '[{"attr_name":"return:","attr_desc":"\\t returns the folder name to the control that called this function\\n\\t"}]', 'function _resize_photo($name,$directory,$sub,$width,$height,$maintain_ratio = TRUE) \n	{\n		$config = array();\n		$config[''source_image''] = $directory."/".$name;\n		$config[''create_thumb''] = FALSE;\n		$config[''new_image''] = $directory."/".$sub."/".$name;\n		$config[''maintain_ratio''] = $maintain_ratio;\n		$config[''quality''] = 100;\n		$config[''width''] = $width;\n		$config[''height''] = $height;\n		$this->load->library(''image_lib'');\n		$this->image_lib->initialize($config);\n		$this->image_lib->resize();		\n		$this->image_lib->clear();	\n	}\n	\n	\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(90, 45, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Forum\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(91, 45, 'manage_conversation_replies', 'public', 'Loads list of replies to the conversation for editing purpose by the admin.', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t Displays the list of replies to a conversation for admin to edit\\n\\t"},{"attr_name":"action_permitted:","attr_desc":"\\t Delete only\\n\\t"}]', 'function manage_conversation_replies($topic_id)\n	{	\n		$data[''replies''] = $this->forum_model->get_replies($topic_id);\n		$data[''conversation''] = $this->forum_model->get_conversation_by_id($topic_id);\n		$this->load->view(''manage_conversation_replies'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(92, 45, 'load_converation', 'public', 'Loads the most recent conversations', '', '(session) user info stored in the session variable when a user logs in', '[{"attr_name":"return:","attr_desc":"\\t returns 10 most recent conversation\\n\\t"}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(93, 45, 'load_poll', 'public', 'Loads a poll', '', '([int] topic_id)', '[{"attr_name":"return:","attr_desc":"\\t returns a poll\\n\\t"}]', 'function load_poll($topic_id)\n	{\n		$user = $this->session->userdata(''user_data'');\n		$data[''user''] = $user;\n		$data[''topic_id''] = $topic_id;\n		//if a user has already taken the poll show result\n		if($this->forum_model->has_user_taken_poll($user[''user_id''],$topic_id)){\n			$data[''total_answer_count''] = $this->forum_model->get_poll_answer_total_count($topic_id);\n			$data[''poll_results''] = $this->forum_model->get_poll_answers($topic_id);	\n			$this->load->view(''poll_result'', isset($data) ? $data : NULL);\n		}else{\n		//if user has not taken the poll show the poll\n			$data[''poll_answers''] = $this->forum_model->get_poll_answers($topic_id);\n			$this->load->view(''poll'', isset($data) ? $data : NULL);\n		}\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(94, 45, 'get_reply_count', 'public', 'Gets the number of reply a conversation has', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t returns the number of reply a conversation topic has\\n\\t"}]', 'function get_reply_count($topic_id)\n	{\n		return $this->forum_model->get_replies($topic_id,true);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(95, 45, 'load_replies', 'public', 'Loads the most replies for a conversation', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t returns 5 most recent replies\\n\\t"}]', 'function load_replies($topic_id)\n	{\n		$user = $this->session->userdata(''user_data'');\n		$data[''user''] = $user;\n		$data[''replies''] = $this->forum_model->get_replies($topic_id);\n		$this->load->view(''replies'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(96, 45, 'send_conversation_notification', 'public', 'Sends email to staff notifying them of a conversation that has been posted', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t sends email\\n\\t"}]', 'function send_conversation_notification($topic_id)\n	{\n		if($topic_id){\n			$conversation = $this->forum_model->get_conversation_by_id($topic_id);\n			if($conversation){\n				$group_id = $conversation->group_id;\n				if(!$group_id){\n					//group id is zero so send to all staff	\n				}else{\n					//get staff belonging to this group and send email to those staff	\n				}\n			}\n		}\n	}\n	\n	\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(97, 46, 'add_topic', 'public', 'Performs Database operation - insert data to the table forum_topics', '', '(array) array of forum topic data such as title, message etc', '[{"attr_name":"return:","attr_desc":"\\t insert id\\n\\t"}]', 'function add_topic($data)\n	{\n		$this->db->insert(''forum_topics'',$data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(98, 46, 'update_topic', 'public', 'Update existing forum topic. Mostly used during the process of creating if the user has uploaded documents', '', '([int] topic id, [array] update data)', '[{"attr_name":"return:","attr_desc":"\\t returns number of rows affected\\n\\t"}]', 'function update_topic($topic_id,$data)\n	{\n		$this->db->where(''topic_id'', $topic_id);\n		return $this->db->update(''forum_topics'', $data);	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(99, 46, 'add_poll_answer', 'public', 'Performs Database operation - insert data to the table forum_poll_answers', '', '(array) array of forum poll data such as poll answers', '[{"attr_name":"return:","attr_desc":"\\t insert id\\n\\t"}]', 'function add_poll_answers($data)\n	{\n		$this->db->insert(''forum_poll_answers'',$data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(100, 46, 'update_poll_answer', 'public', 'Update existing forum poll answers.', '', '([int] poll_answer_id id, [array] update data)', '[{"attr_name":"return:","attr_desc":"\\t returns number of rows affected\\n\\t"}]', 'function update_poll_answers($poll_answer_id,$data)\n	{\n		$this->db->where(''poll_answer_id'', $poll_answer_id);\n		return $this->db->update(''forum_poll_answers'', $data);	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(101, 46, 'get_poll_answers', 'public', 'This performs database query to get poll answers', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t returns poll answers\\n\\t"}]', 'function get_poll_answers($topic_id)\n	{\n		$sql = "SELECT * FROM forum_poll_answers WHERE topic_id = ".$topic_id;\n		$sql .= " ORDER BY poll_answer_id ASC";\n		return $this->db->query($sql)->result();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(102, 46, 'get_poll_answer_by_id', 'public', 'This performs database query to get poll answer', '', '([int] poll answer id)', '[{"attr_name":"return:","attr_desc":"\\t returns one poll answer\\n\\t"}]', 'function get_poll_answer_by_id($poll_answer_id)\n	{\n		$sql = "SELECT * FROM forum_poll_answers WHERE poll_answer_id = ".$poll_answer_id;\n		return $this->db->query($sql)->row();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(103, 46, 'get_replies', 'public', 'This performs database query to get the most recent replices for a conversation topic.', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t list of most recent replies\\n\\t"}]', 'function get_replies($topic_id,$total = false)\n	{\n		$sql = "SELECT * FROM forum_messages WHERE topic_id = ".$topic_id;\n		$sql .= " ORDER BY posted_on DESC";\n		if($total){\n			$total = $this->db->query($sql)->result();\n			return count($total);\n		}else{\n			//$sql .= '' limit 0,5'';	\n		}\n		return $this->db->query($sql)->result();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(104, 46, 'get_replies', 'public', 'This performs database query to get the most recent replices for a conversation topic.', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t list of most recent replies\\n\\t"}]', 'function get_replies($topic_id,$total = false)\n	{\n		$sql = "SELECT * FROM forum_messages WHERE topic_id = ".$topic_id;\n		$sql .= " ORDER BY posted_on DESC";\n		if($total){\n			$total = $this->db->query($sql)->result();\n			return count($total);\n		}else{\n			//$sql .= '' limit 0,5'';	\n		}\n		return $this->db->query($sql)->result();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(105, 46, 'add_user_poll_answers', 'public', 'Performs Database operation - insert data to the table forum_user_poll_answers', '', '(array) array of forum user poll data such as user id poll answer id', '[{"attr_name":"return:","attr_desc":"\\t insert id\\n\\t"}]', 'function add_user_poll_answers($data)\n	{\n		$this->db->insert(''forum_user_poll_answers'',$data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(106, 46, 'get_conversations', 'public', 'This performs database query to get the most recent conversation mostly 10. For admin dashboard the conversation will be loaded ignoring the groups.', '', '([obj] user)', '[{"attr_name":"return:","attr_desc":"\\t list of most recent conversations\\n\\t"}]', 'function get_conversations($user,$params = array(),$total = false)\n	{\n		$records_per_page = 5;\n		\n		$sql = "SELECT ft.*,(select count(*) FROM forum_messages fm WHERE fm.topic_id = ft.topic_id) AS total_replies, u.first_name, u.last_name FROM forum_topics ft\n				LEFT JOIN users u ON ft.created_by = u.user_id";\n		//if user is not admin\n		if(!$user[''is_admin'']){\n			$staff_groups = modules::run(''staff/get_staff_groups'',$user[''user_id'']);\n			if($staff_groups){\n				$sql .= " WHERE (ft.group_id IN (".$staff_groups.") OR ft.group_id = 0)";\n			}\n		}\n		$sql .= " GROUP BY ft.topic_id";\n		if($params){\n			$sort_param = json_decode($params);	\n			if(isset($sort_param->sort_by)){ $sql .= " ORDER BY ".$sort_param->sort_by." ".$sort_param->sort_order;}				\n			if(isset($sort_param->limit)){ \n				//if limit is not set it will default start the pagination\n				$sql .= " LIMIT " . $sort_param->limit; \n			}else{\n				if(!$total && isset($sort_param->current_page)){\n					$sql .= " LIMIT ".(($sort_param->current_page-1)*$records_per_page)." ,".$records_per_page;\n				}\n			}\n		}else{\n			if(!$params){\n				$sql .= " ORDER BY ft.created_on DESC";	\n			}\n		}\n		return $this->db->query($sql)->result();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(107, 46, 'add_reply', 'public', 'Performs Database operation - insert data to the table forum_messages, everytime someone replies to a conversation topic', '', '(array) array of forum reply data such as reply, topic id, user id etc', '[{"attr_name":"return:","attr_desc":"\\t insert id\\n\\t"}]', 'function add_reply($data)\n	{\n		$this->db->insert(''forum_messages'',$data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(108, 46, 'get_replies', 'public', 'This performs database query to get the most recent replices for a conversation topic.', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t list of most recent replies\\n\\t"}]', 'function get_replies($topic_id,$total = false)\n	{\n		$sql = "SELECT * FROM forum_messages WHERE topic_id = ".$topic_id;\n		$sql .= " ORDER BY posted_on DESC";\n		if($total){\n			$total = $this->db->query($sql)->result();\n			return count($total);\n		}else{\n			//$sql .= '' limit 0,5'';	\n		}\n		return $this->db->query($sql)->result();\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(109, 46, 'get_conversation_by_id', 'public', 'This performs database query to get conversation by id', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t Information for a single conversation \\n\\t"}]', 'function get_conversation_by_id($topic_id)\n	{\n		$conversation = $this->db->where(''topic_id'',$topic_id)->get(''forum_topics'')->row();\n		return $conversation;	\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(110, 46, 'delete_conversation_topic', 'public', 'Permanently removes a conversation topic from the system', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t rows affected \\n\\t"}]', 'function delete_conversation_topic($topic_id)\n	{\n		$this->db->where(''topic_id'', $topic_id);\n		return $this->db->delete(''forum_topics'');\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(111, 46, 'delete_conversation_replies', 'public', 'Permanently removes replies to a conversation topic from the system', '', '([int] topic id)', '[{"attr_name":"return:","attr_desc":"\\t rows affected \\n\\t"}]', 'function delete_conversation_replies($topic_id)\n	{\n		$this->db->where(''topic_id'', $topic_id);\n		return $this->db->delete(''forum_messages'');\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(112, 46, 'delete_conversation_reply', 'public', 'Permanently removes a single reply to a conversation topic from the system', '', '([int] message id)', '[{"attr_name":"return:","attr_desc":"\\t rows affected \\n\\t"}]', 'function delete_conversation_reply($message_id)\n	{\n		$this->db->where(''message_id'', $message_id);\n		return $this->db->delete(''forum_messages'');\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(113, 46, 'delete_poll_answers_by_topic_id', 'public', 'Delete all poll answers by topic id. This function is mostly called when a conversation is deleted', '', '([int] topic_id)', '[{"attr_name":"return:","attr_desc":"\\t rows affected \\n\\t"}]', 'function delete_poll_answers_by_topic_id($topic_id)\n	{\n		$this->db->where(''topic_id'', $topic_id);\n		return $this->db->delete(''forum_poll_answers'');\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(114, 46, 'delete_user_poll_answers_by_topic_id', 'public', 'Delete all user poll answers by topic id. This function is mostly called when a conversation is deleted', '', '([int] topic_id)', '[{"attr_name":"return:","attr_desc":"\\t rows affected \\n\\t"}]', 'function delete_user_poll_answers_by_topic_id($topic_id)\n	{\n		$this->db->where(''topic_id'', $topic_id);\n		return $this->db->delete(''forum_user_poll_answers'');\n	}\n	\n	\n	\n	\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(115, 47, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(116, 47, 'list_temp_invoices', 'public', 'ajax function to get the list of temporary client invoices', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) list of temporary client invoices\\n\\t"}]', 'function list_temp_invoices() {\n		$data[''invoices''] = $this->invoice_model->get_invoiced_clients();\n		$this->load->view(''create/temporary_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(117, 47, 'list_clients', 'public', 'ajax function to get the list of client with batched timesheets', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) layout of list clients\\n\\t"}]', 'function list_clients() {\n		$data[''clients''] = $this->invoice_model->get_clients();\n		$this->load->view(''source/clients_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(118, 47, 'load_client_jobs', 'public', 'ajax function to load all billable jobs of client', '', '(POST) user_id', '[{"attr_name":"return:","attr_desc":"\\t (html) layout of list of jobs by a client\\n\\t"}]', 'function load_client_jobs() {\n		$user_id = $this->input->post(''user_id'');\n		$data[''user_id''] = $user_id;\n		$data[''jobs''] = $this->invoice_model->get_client_jobs($user_id);\n		$this->load->view(''source/client_jobs_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(119, 47, 'load_job_timesheets', 'public', 'ajax function to load all timesheets in a job', '', '(POST) job_id', '[{"attr_name":"return:","attr_desc":"\\t (html) layout of list of timesheets in a job\\n\\t"}]', 'function load_job_timesheets() {\n		$job_id = $this->input->post(''job_id'');\n		$job = $this->invoice_model->get_job($job_id);\n		$data[''job''] = $job;\n		$data[''client''] = modules::run(''client/get_client'', $job[''client_id'']);\n		$data[''timesheets''] = $this->invoice_model->get_timesheets($job_id);\n		$this->load->view(''source/client_job_timesheets_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(120, 47, 'row_client_job', 'public', 'ajax function to load the row (tr) of client job', '', '', '[{"attr_name":"oaram:","attr_desc":"\\t (POST) job_id\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (html) view of the row (tr)\\n\\t"}]', 'function row_client_job() {\n		$job_id = $this->input->post(''job_id'');\n		$data[''job''] = $this->invoice_model->get_job($job_id);\n		$data[''timesheets''] = $this->invoice_model->get_timesheets($job_id);\n		$this->load->view(''source/client_job_row_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(121, 47, 'row_timesheet', 'public', 'ajax function to load the row (tr) of timesheet', '', '(POST) timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view of the row (tr)\\n\\t"}]', 'function row_timesheet() {\n		echo modules::run(''invoice/row_timesheet'', $this->input->post(''timesheet_id''));\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(122, 47, 'row_job', 'public', 'ajax function to load the row (tr) of job', '', '(POST) job_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view of the row (tr)\\n\\t"}]', 'function row_job() {\n		echo modules::run(''invoice/row_job'', $this->input->post(''job_id''));\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(123, 47, 'add_job_to_invoice', 'public', 'ajax function to add a job to the invoice', '', '(POST) job_id', '[{"attr_name":"return:","attr_desc":"\\t json encode of array of time sheet id\\n\\t"}]', 'function add_job_to_invoice() {\n		$job_id = $this->input->post(''job_id'');\n		$this->invoice_model->add_job_to_invoice($job_id);\n		if ($this->input->post(''apply_all'')) {\n			$timesheets = $this->invoice_model->get_timesheets($job_id);\n			$output = array();\n			foreach($timesheets as $timesheet) {\n				$output[] = $timesheet[''timesheet_id''];\n			}\n			echo json_encode($output);\n		}		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(124, 47, 'add_timesheet_to_invoice', 'public', 'ajax function to add a time sheet to the invoice', '', '(POST) timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function add_timesheet_to_invoice() {\n		$timesheet_id = $this->input->post(''timesheet_id'');\n		$this->invoice_model->add_timesheet_to_invoice($timesheet_id);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(125, 47, 'remove_job_from_invoice', 'public', 'ajax function to remove a job from the invoice', '', '(POST) job_id', '[{"attr_name":"(boolean)","attr_desc":"\\t\\t\\t apply_all\\n\\t"},{"attr_name":"return:","attr_desc":"\\t json encode of array of time sheet id\\n\\t"}]', 'function remove_job_from_invoice() {\n		$job_id = $this->input->post(''job_id'');\n		$this->invoice_model->remove_job_from_invoice($job_id);\n		if ($this->input->post(''apply_all'')) {\n			$timesheets = $this->invoice_model->get_timesheets($job_id);\n			$output = array();\n			foreach($timesheets as $timesheet) {\n				$output[] = $timesheet[''timesheet_id''];\n			}\n			echo json_encode($output);\n		}\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(126, 47, 'remove_timesheet_from_invoice', 'public', 'ajax function to remove a time sheet from the invoice', '', '(POST) timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function remove_timesheet_from_invoice() {\n		$timesheet_id = $this->input->post(''timesheet_id'');\n		$this->invoice_model->remove_timesheet_from_invoice($timesheet_id);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(127, 47, 'list_items', 'public', 'ajax function to list all items of the invoice', '', '(POST) invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view of the items list\\n\\t"}]', 'function list_items() {\n		$invoice_id = $this->input->post(''invoice_id'');\n		$invoice = $this->invoice_model->get_invoice($invoice_id);\n		$data[''invoice''] = $invoice;\n		$data[''items''] = $this->invoice_model->get_invoice_items($invoice_id);\n		$this->load->view(''create/items_list'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(128, 47, 'get_total', 'public', 'ajax function to get the total charge details', '', '(POST) invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view of the total charge details\\n\\t"}]', 'function get_total() {\n		$invoice_id = $this->input->post(''invoice_id'');\n		$total = 0;\n		$gst = 0;\n		$items = $this->invoice_model->get_invoice_items($invoice_id);\n		foreach($items as $item) {\n			$total += $item[''amount''];\n			if ($item[''tax'']) {\n				$gst += $item[''amount''] / 11;\n			}\n		}\n		$this->invoice_model->update_invoice($invoice_id, array(''gst'' => $gst,''total_amount'' => $total));\n		$data[''invoice''] = $this->invoice_model->get_invoice($invoice_id);\n		$data[''total''] = $total;\n		$data[''gst''] = $gst;\n		$this->load->view(''create/charge_details'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(129, 47, 'add_item', 'public', 'add new item to the invoice', '', '(POST) array of data', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function add_item() {\n		$data = $this->input->post();\n		if ($data[''tax''] == GST_ADD) {\n			$data[''amount''] = $data[''amount''] * 1.1;\n		}\n		$this->invoice_model->add_invoice_item($data);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(130, 47, 'check_breakdown', 'public', 'ajax function to check if the invoice can be break down or not', '', '(POST) invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (string) \\"true\\" or \\"false\\"\\n\\t"}]', 'function check_breakdown() {\n		$invoice_id = $this->input->post(''invoice_id'');\n		$invoice = $this->invoice_model->get_invoice($invoice_id);\n		$jobs = unserialize($invoice[''jobs'']);\n		$items = $this->invoice_model->get_invoice_items($invoice_id);\n		foreach($items as $key => $item) {\n			if (!$item[''include_timesheets'']) {\n				unset($items[$key]);\n			}\n		}\n		if (count($items) == count($jobs)) {\n			echo ''true'';\n		} else {\n			echo ''false'';\n		}\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(131, 47, 'show_breakdown', 'public', 'ajax function to enable/disable break down items of the invoice', '', '(POST) invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view of the break down item list\\n\\t"}]', 'function show_breakdown() {\n		$invoice_id = $this->input->post(''invoice_id'');\n		if ($this->input->post(''show'') == "true") {\n			$data[''items''] = $this->invoice_model->get_invoice_items($invoice_id);\n			$this->invoice_model->update_invoice($invoice_id, array(''breakdown'' => 1));\n			$this->load->view(''create/breakdown'', isset($data) ? $data : NULL);\n		} else {			\n			$this->invoice_model->update_invoice($invoice_id, array(''breakdown'' => 0));\n		}\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(132, 47, 'delete_item', 'public', 'ajax function to delete an item from the invoice', '', '(POST) item_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean) \\n\\t"}]', 'function delete_item() {\n		return $this->invoice_model->delete_invoice_item($this->input->post(''item_id''));\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(133, 47, 'delete_invoice', 'public', 'ajax function to delete the invoice', '', '(POST) invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function delete_invoice() {\n		$invoice_id = $this->input->post(''invoice_id'');\n		$this->invoice_model->delete_invoice_items($invoice_id);\n		$this->invoice_model->delete_invoice($invoice_id);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(134, 47, 'search_invoices', 'public', 'ajax function to search invoices', '', '(POST) (array) of parameters', '[{"attr_name":"return:","attr_desc":"\\t (array) of invoice objects\\n\\t"}]', 'function search_invoices() {\n		$params = $this->input->post();\n		$data[''invoices''] = $this->invoice_model->search_invoices($params);\n		$this->load->view(''search/results_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(135, 47, 'mark_as_paid', 'public', 'ajax function to mark an invoice as paid', '', '(POST) invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) menu dropdown status of the invoice\\n\\t"}]', 'function mark_as_paid() {\n		$invoice_id = $this->input->post(''invoice_id'');\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, array(\n			''status'' => INVOICE_PAID,\n			''paid_on'' => date(''Y-m-d H:i:s'')\n		));\n		# Update timesheet\n		$this->invoice_model->mark_paid_timesheets($invoice_id);\n		echo modules::run(''invoice/menu_dropdown_status'', $invoice_id);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(136, 47, 'mark_as_unpaid', 'public', 'ajax function to mark an invoice as unpaid', '', '(POST) invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) menu dropdown status of the invoice\\n\\t"}]', 'function mark_as_unpaid() {\n		$invoice_id = $this->input->post(''invoice_id'');\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, array(''status'' => INVOICE_GENERATED));\n		# Update timesheet\n		$this->invoice_model->mark_unpaid_timesheets($invoice_id);\n		echo modules::run(''invoice/menu_dropdown_status'', $invoice_id);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(137, 47, 'edit_client_invoice_title', 'public', 'ajax function to edit template client invoice for TITLE of the invoice', '', '(POST) invoice_id', '', 'function edit_client_invoice_title() {\n		$invoice_id = $this->input->post(''pk'');\n		$title = $this->input->post(''value'');\n		$data = array(''title'' => $title);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(138, 47, 'edit_client_invoice_issued_date', 'public', 'ajax function to edit template client invoice for Issued Date of the invoice', '', '(POST) invoice_id', '', 'function edit_client_invoice_issued_date() {\n		$invoice_id = $this->input->post(''pk'');\n		$issued_date = $this->input->post(''value'');\n		$data = array(''issued_date'' => $issued_date);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(139, 47, 'edit_client_invoice_due_date', 'public', 'ajax function to edit template client invoice for Due Date of the invoice', '', '(POST) invoice_id', '', 'function edit_client_invoice_due_date() {\n		$invoice_id = $this->input->post(''pk'');\n		$due_date = $this->input->post(''value'');\n		$data = array(''due_date'' => $due_date);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(140, 47, 'edit_client_invoice_number', 'public', 'ajax function to edit template client invoice for Invoice Number', '', '(POST) invoice_id', '', 'function edit_client_invoice_number() {\n		$invoice_id = $this->input->post(''pk'');\n		$invoice_number = $this->input->post(''value'');\n		$data = array(''invoice_number'' => $invoice_number);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(141, 47, 'edit_client_invoice_company_name', 'public', 'ajax function to edit template client invoice for profile company name', '', '(POST) invoice_id', '', 'function edit_client_invoice_company_name() {\n		$invoice_id = $this->input->post(''pk'');\n		$profile_company_name = $this->input->post(''value'');\n		$data = array(''profile_company_name'' => $profile_company_name);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(142, 47, 'edit_client_invoice_company_abn', 'public', 'ajax function to edit template client invoice for profile company name', '', '(POST) invoice_id', '', 'function edit_client_invoice_company_abn() {\n		$invoice_id = $this->input->post(''pk'');\n		$profile_abn = $this->input->post(''value'');\n		$data = array(''profile_abn'' => $profile_abn);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(143, 47, 'edit_client_invoice_client_company_name', 'public', 'ajax function to edit template client invoice for client company name', '', '(POST) invoice_id', '', 'function edit_client_invoice_client_company_name() {\n		$invoice_id = $this->input->post(''pk'');\n		$client_company_name = $this->input->post(''value'');\n		$data = array(''client_company_name'' => $client_company_name);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(144, 47, 'edit_client_invoice_client_address', 'public', 'ajax function to edit template client invoice for client address', '', '(POST) invoice_id', '', 'function edit_client_invoice_client_address() {\n		$invoice_id = $this->input->post(''pk'');\n		$client_address = $this->input->post(''value'');\n		$data = array(''client_address'' => $client_address);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(145, 47, 'edit_client_invoice_client_suburb', 'public', 'ajax function to edit template client invoice for client suburb', '', '(POST) invoice_id', '', 'function edit_client_invoice_client_suburb() {\n		$invoice_id = $this->input->post(''pk'');\n		$client_suburb = $this->input->post(''value'');\n		$data = array(''client_suburb'' => $client_suburb);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(146, 47, 'edit_client_invoice_client_state', 'public', 'ajax function to edit template client invoice for client state', '', '(POST) invoice_id', '', 'function edit_client_invoice_client_state() {\n		$invoice_id = $this->input->post(''pk'');\n		$client_state = $this->input->post(''value'');\n		$data = array(''client_state'' => $client_state);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(147, 47, 'edit_client_invoice_client_postcode', 'public', 'ajax function to edit template client invoice for client postcode', '', '(POST) invoice_id', '', 'function edit_client_invoice_client_postcode() {\n		$invoice_id = $this->input->post(''pk'');\n		$client_postcode = $this->input->post(''value'');\n		$data = array(''client_postcode'' => $client_postcode);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(148, 47, 'edit_client_invoice_client_phone', 'public', 'ajax function to edit template client invoice for client phone', '', '(POST) invoice_id', '', 'function edit_client_invoice_client_phone() {\n		$invoice_id = $this->input->post(''pk'');\n		$client_phone = $this->input->post(''value'');\n		$data = array(''client_phone'' => $client_phone);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(149, 47, 'edit_client_invoice_client_email_address', 'public', 'ajax function to edit template client invoice for client email address', '', '(POST) invoice_id', '', 'function edit_client_invoice_client_email_address() {\n		$invoice_id = $this->input->post(''pk'');\n		$client_email_address = $this->input->post(''value'');\n		$data = array(''client_email_address'' => $client_email_address);\n		# Update invoice\n		$this->invoice_model->update_invoice($invoice_id, $data);	\n		\n	}\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(150, 48, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Invoice\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(151, 48, 'main_view', 'public', 'load the main layout of the invoice page', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) load main layout of the invoice page\\n\\t"}]', 'function main_view() {\n		$this->load->view(''main_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(152, 48, 'create_view', 'public', 'view of create invoice tab', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) load main layout of the create invoice tab\\n\\t"}]', 'function create_view() {\n		$this->load->view(''create_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(153, 48, 'search_form', 'public', 'view of search invoice tab', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) load search form of the search invoice tab\\n\\t"}]', 'function search_form() {\n		$this->load->view(''search_form'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(154, 48, 'create', 'public', 'create the invoice record for a client', '', '(int) $user_id', '[{"attr_name":"return:","attr_desc":"\\t (void) redirect to (html) invoice page\\n\\t"}]', 'function create_view() {\n		$this->load->view(''create_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(155, 48, 'edit', 'public', 'edit invoice page', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) edit invoice page\\n\\t"}]', 'function edit($invoice_id) {\n		$invoice = $this->invoice_model->get_invoice($invoice_id);\n		# If invoice is generated, cannot edit anymore, go to view page\n		if ($invoice[''status''] == INVOICE_GENERATED) {\n			redirect(''invoice/view/'' . $invoice_id);\n		}\n		$data[''invoice''] = $invoice;\n		$data[''client''] = modules::run(''client/get_client'', $invoice[''client_id'']);\n		$data[''company_profile''] = modules::run(''setting/company_profile'');\n		if ($invoice[''breakdown'']) {\n			$data[''items''] = $this->invoice_model->get_invoice_items($invoice_id);\n		}\n		$this->load->view(''create/edit_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(156, 48, 'generate', 'public', 'generate the invoice and link timesheets to the invoice', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (void) redirect to view invoice page\\n\\t"}]', 'function generate($invoice_id) {\n		$invoice = $this->invoice_model->get_invoice($invoice_id);\n		# Update invoice status\n		$user = $this->session->userdata(''user_data'');\n		$this->invoice_model->update_invoice($invoice_id, array(\n			''status'' => INVOICE_GENERATED,\n			''issued_by'' => $user[''user_id'']\n		));\n		$this->invoice_model->generate_invoice_timesheets($invoice[''client_id''], $invoice_id);\n		redirect(''invoice/view/'' . $invoice_id);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(157, 48, 'download', 'public', 'generate and download the pdf', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function download($invoice_id) {\n		# As PDF creation takes a bit of memory, we''re saving the created file in /uploads/pdf/\n		$filename = "invoice_" . $invoice_id;\n		$pdfFilePath = "./uploads/pdf/$filename.pdf";\n		\n		$dir = ''./uploads/pdf/'';\n		if(!is_dir($dir))\n		{\n		  mkdir($dir);\n		  chmod($dir,0777);\n		  $fp = fopen($dir.''/index.html'', ''w'');\n		  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n		  fclose($fp);\n		}\n		 \n		ini_set(''memory_limit'',''32M''); # boost the memory limit if it''s low \n		\n		$invoice = $this->invoice_model->get_invoice($invoice_id);\n		$data[''invoice''] = $invoice;\n		$data[''client''] = modules::run(''client/get_client'', $invoice[''client_id'']);\n		$data[''items''] = $this->invoice_model->get_invoice_items($invoice_id);\n		$data[''company_profile''] = modules::run(''setting/company_profile'');\n		$html = $this->load->view(''create/download_view'', isset($data) ? $data : NULL, true); \n\n		\n				\n		$this->load->library(''pdf'');\n		$pdf = $this->pdf->load(); 			\n		$stylesheet = file_get_contents(''./assets/css/pdf.css'');\n		$pdf->WriteHTML($stylesheet,1);\n		$pdf->WriteHTML($html,2);\n		$pdf->Output($pdfFilePath, ''F''); // save to file \n		 \n		redirect("./uploads/pdf/$filename.pdf"); \n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(158, 48, 'view', 'public', 'view of the single invoice', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view invoice page \\n\\t"}]', 'function view($invoice_id) {\n		$invoice = $this->invoice_model->get_invoice($invoice_id);\n		$data[''invoice''] = $invoice;\n		$data[''client''] = modules::run(''client/get_client'', $invoice[''client_id'']);\n		$data[''items''] = $this->invoice_model->get_invoice_items($invoice_id);\n		$data[''company_profile''] = modules::run(''setting/company_profile'');\n		$this->load->view(''create/generated_view'', isset($data) ? $data : NULL); \n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(159, 48, 'row_job', 'public', 'view of row of a job', '', '(int) $job_id', '[{"attr_name":"return:","attr_desc":"\\t (html) row (tr) of the job\\n\\t"}]', 'function row_job($job_id) {\n		$data[''job''] = $this->invoice_model->get_job($job_id);\n		$data[''timesheets''] = $this->invoice_model->get_timesheets($job_id);\n		$this->load->view(''source/job_row_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(160, 48, 'row_timesheet', 'public', 'view of row of a timesheet', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) row (tr) of a job\\n\\t"}]', 'function row_timesheet($timesheet_id) {\n		$data[''timesheet''] = $this->invoice_model->get_timesheet($timesheet_id);\n		$this->load->view(''source/timesheet_row_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(161, 48, 'get_job_timesheets', 'public', 'get invoiced timesheets of an invoiced job', '', '(int) $job_id', '[{"attr_name":"(int)","attr_desc":"\\t\\t\\t $status\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (array) of time sheet objects\\n\\t"}]', 'function get_job_timesheets($job_id, $status) {\n		return $this->invoice_model->get_job_timesheets($job_id, $status);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(162, 48, 'field_select_status', 'public', 'custom field select status of invoice', '', '- $field_name: string of field name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional): selected value of field\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional): size \\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom select input field\\n\\t"}]', 'function field_select_status($field_name, $field_value=null, $size=null) {\n		$array = array(\n			array(''value'' => INVOICE_GENERATED, ''label'' => ''Unpaid''),\n			array(''value'' => INVOICE_PAID, ''label'' => ''Paid'')\n		);\n		return modules::run(''common/field_select'', $array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(163, 48, 'menu_dropdown_status', 'public', 'generate the dropdown menu of invoice status', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (html) dropdown menu of invoice status\\n\\t"}]', 'function menu_dropdown_status($invoice_id) {\n		$data[''invoice''] = $this->invoice_model->get_invoice($invoice_id);\n		$this->load->view(''search/menu_dropdown_status'', isset($data) ? $data : NULL);\n	}\n	\n}', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(164, 49, 'add_client_invoice', 'public', 'create the client invoice', '', '(array) $data', '[{"attr_name":"return:","attr_desc":"\\t (int) invoice_id\\n\\t"}]', 'function add_client_invoice($data) {\n		$this->db->insert(''invoices'', $data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(165, 49, 'add_invoice_item', 'public', 'add item to the invoice', '', '(array) $data', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function add_invoice_item($data) {\n		$this->db->insert(''invoice_items'', $data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(166, 49, 'get_job_timesheets', 'public', 'get invoiced time sheet of invoiced job', '', '(int) $job_id', '[{"attr_name":"(int)","attr_desc":"\\t\\t\\t $invoice_status\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (array) of time sheet objects\\n\\t"}]', 'function get_job_timesheets($job_id, $invoice_status) {\n		$this->db->where(''job_id'', $job_id);\n		$this->db->where(''status'', TIMESHEET_BATCHED);\n		$this->db->where(''status_invoice_client >='', $invoice_status);\n		$query = $this->db->get(''job_shift_timesheets'');\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(167, 49, 'delete_invoice_item', 'public', 'delete an item from the invoice', '', '(int) $item_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function delete_invoice_item($item_id) {\n		$this->db->where(''item_id'', $item_id);\n		return $this->db->delete(''invoice_items'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(168, 49, 'delete_invoice_items', 'public', 'delete all items of an invoice', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function delete_invoice_items($invoice_id) {\n		$this->db->where(''invoice_id'', $invoice_id);\n		return $this->db->delete(''invoice_items'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(169, 49, 'delete_invoice', 'public', 'delete the invoice itselft', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function delete_invoice_item($item_id) {\n		$this->db->where(''item_id'', $item_id);\n		return $this->db->delete(''invoice_items'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00');
INSERT INTO `modules_functions` (`id`, `modules_mvc_id`, `name`, `access`, `description`, `comment`, `params`, `attributes`, `code`, `created`, `modified`) VALUES
(170, 49, 'get_invoice_items', 'public', 'get all items of an invoice', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (array) of item objects\\n\\t"}]', 'function get_invoice_items($invoice_id) {\n		$this->db->where(''invoice_id'', $invoice_id);\n		$this->db->order_by(''job_id'', ''asc'');\n		$query = $this->db->get(''invoice_items'');\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(171, 49, 'update_invoice', 'public', 'update invoice object', '', '(int) $invoice_id', '[{"attr_name":"(array)","attr_desc":"\\t\\t\\t $data\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function update_invoice($invoice_id, $data) {\n		$this->db->where(''invoice_id'', $invoice_id);\n		return $this->db->update(''invoices'', $data);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(172, 49, 'get_invoice', 'public', 'get invoice object by id', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (object) invoice\\n\\t"}]', 'function get_invoice_items($invoice_id) {\n		$this->db->where(''invoice_id'', $invoice_id);\n		$this->db->order_by(''job_id'', ''asc'');\n		$query = $this->db->get(''invoice_items'');\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(173, 49, 'get_client_invoice', 'public', 'get ready timesheet to be invoiced of a client', '', '(int) $user_id', '[{"attr_name":"return:","attr_desc":"\\t array of time sheet objects\\n\\t"}]', 'function get_client_invoice($user_id) {\n		$sql = "SELECT j.*, sum(js.total_amount_client) as `total_amount` FROM `job_shift_timesheets` js\n						LEFT JOIN `jobs` j ON js.job_id = j.job_id\n						WHERE js.status = " . TIMESHEET_BATCHED . "\n						AND js.status_invoice_client = " . INVOICE_READY . "\n						AND js.client_id = " . $user_id . "\n						GROUP BY js.job_id";\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(174, 49, 'get_invoiced_clients', 'public', 'get clients that has temporary invoices', '', '', '[{"attr_name":"return:","attr_desc":"\\t array of client objects\\n\\t"}]', 'function get_invoiced_clients() {\n		$sql = "SELECT uc.*, sum(j.total_amount_client) as `total_amount`, count(*) as `total_timesheets` FROM `job_shift_timesheets` j\n					LEFT JOIN `user_clients` uc ON j.client_id = uc.user_id\n					WHERE j.status = " . TIMESHEET_BATCHED . "\n					AND j.status_invoice_client = " . INVOICE_READY . "\n					GROUP BY j.client_id";\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(175, 49, 'get_clients', 'public', 'get list of clients that has timesheets can be billed', '', '', '[{"attr_name":"return:","attr_desc":"\\t (array) of client objects\\n\\t"}]', 'function get_clients() {\n		$sql_select_job_id = "SELECT job_id \n								FROM `job_shift_timesheets` \n								WHERE status = " . TIMESHEET_BATCHED . "\n								AND status_invoice_client <= " . INVOICE_READY . "\n								GROUP BY job_id";\n		$sql = "SELECT uc.*, count(*) as `total_jobs` FROM user_clients uc\n					LEFT JOIN jobs j ON j.client_id = uc.user_id\n					WHERE j.job_id IN ($sql_select_job_id) GROUP BY uc.user_id";\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(176, 49, 'get_client_jobs', 'public', 'get list of jobs that has timesheets can be billed', '', '', '[{"attr_name":"return:","attr_desc":"\\t (array) of job objects\\n\\t"}]', 'function get_client_jobs($user_id) {\n		$sql_select_job_id = "SELECT job_id \n								FROM `job_shift_timesheets` \n								WHERE status = " . TIMESHEET_BATCHED . "\n								AND status_invoice_client <= " . INVOICE_READY . "\n								GROUP BY job_id";\n		$sql = "SELECT * FROM jobs WHERE client_id = " . $user_id . " AND job_id IN ($sql_select_job_id)";\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(177, 49, 'get_job', 'public', 'get a job object by id', '', '(int) $job_id', '[{"attr_name":"return:","attr_desc":"\\t (object) of job\\n\\t"}]', 'function get_job_timesheets($job_id, $invoice_status) {\n		$this->db->where(''job_id'', $job_id);\n		$this->db->where(''status'', TIMESHEET_BATCHED);\n		$this->db->where(''status_invoice_client >='', $invoice_status);\n		$query = $this->db->get(''job_shift_timesheets'');\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(178, 49, 'get_timesheet', 'public', 'get a time sheet by id', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (object) of time sheet\\n\\t"}]', 'function get_timesheet($timesheet_id) {\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		$this->db->where(''status'', TIMESHEET_BATCHED);\n		$query = $this->db->get(''job_shift_timesheets'');\n		return $query->first_row(''array'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(179, 49, 'get_timesheets', 'public', 'get list of ready time sheets oj a job', '', '(int) $job_id', '[{"attr_name":"return:","attr_desc":"\\t (array) of time sheet objects\\n\\t"}]', 'function get_timesheets($job_id) {\n		$this->db->where(''job_id'', $job_id);\n		$this->db->where(''status'', TIMESHEET_BATCHED);\n		$this->db->where(''status_invoice_client <='', INVOICE_READY);\n		$query = $this->db->get(''job_shift_timesheets'');\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(180, 49, 'add_job_to_invoice', 'public', 'add all time sheets of the job to the invoice', '', '(int) $job_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function add_job_to_invoice($job_id) {\n		$this->db->where(''job_id'', $job_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_invoice_client'' => INVOICE_READY));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(181, 49, 'remove_job_from_invoice', 'public', 'remove all time sheets of the job from the invoice', '', '(int) $job_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function remove_job_from_invoice($job_id) {\n		$this->db->where(''job_id'', $job_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_invoice_client'' => INVOICE_PENDING));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(182, 49, 'add_timesheet_to_invoice', 'public', 'update the timesheet invoice status to ready', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function add_timesheet_to_invoice($timesheet_id) {\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_invoice_client'' => INVOICE_READY));		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(183, 49, 'remove_timesheet_from_invoice', 'public', 'update the timesheet invoice status to pending', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function remove_timesheet_from_invoice($timesheet_id) {\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_invoice_client'' => INVOICE_PENDING));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(184, 49, 'generate_invoice_timesheets', 'public', 'linked all timesheets to the invoice and update time sheets status to invoice generated', '', '(int) $client_id', '[{"attr_name":"(int)","attr_desc":"\\t\\t\\t $invoice_id\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function generate_invoice_timesheets($client_id, $invoice_id) {\n		$data = array(\n			''invoice_id'' => $invoice_id,\n			''status_invoice_client'' => INVOICE_GENERATED\n		);\n		$this->db->where(''client_id'', $client_id);\n		$this->db->where(''status_invoice_client'', INVOICE_READY);\n		$this->db->where(''invoice_id'', 0);		\n		return $this->db->update(''job_shift_timesheets'', $data);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(185, 49, 'mark_paid_timesheets', 'public', 'update timesheets of an invoice to paid status', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function mark_paid_timesheets($invoice_id) {\n		$data = array(\n			''status_invoice_client'' => INVOICE_PAID,\n			''client_paid_on'' => date(''Y-m-d H:i:s'')\n		);\n		$this->db->where(''invoice_id'', $invoice_id);\n		return $this->db->update(''job_shift_timesheets'', $data);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(186, 49, 'mark_unpaid_timesheets', 'public', 'update timesheets of an invoice to unpaid status', '', '(int) $invoice_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function mark_unpaid_timesheets($invoice_id) {\n		$data = array(\n			''status_invoice_client'' => INVOICE_GENERATED\n		);\n		$this->db->where(''invoice_id'', $invoice_id);\n		return $this->db->update(''job_shift_timesheets'', $data);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(187, 49, 'search_invoices', 'public', 'search invoices by parameters', '', '(array)', '[{"attr_name":"return:","attr_desc":"\\t (array) of invoice objects\\n\\t"}]', 'function search_invoices($params) {\n		if (isset($params[''client_id'']) && $params[''client_id''] != 0 ) {\n			$this->db->where(''client_id'', $params[''client_id'']);\n		}\n		if (isset($params[''issued_by'']) && $params[''issued_by''] != 0) {\n			$this->db->where(''issued_by'', $params[''issued_by'']);\n		}\n		if (isset($params[''status'']) && $params[''status''] != 0) {\n			$this->db->where(''status'', $params[''status'']);\n		}\n		if (isset($params[''keywords'']) && $params[''keywords''] != '''') {\n			$this->db->like(''jobs'', $params[''keywords'']);\n		}\n		if (isset($params[''date_from'']) && $params[''date_from''] != '''') {\n			$date_from = date(''Y-m-d'', strtotime($params[''date_from'']));\n			$this->db->where(''issued_date >='', $date_from);\n		}\n		if (isset($params[''date_to'']) && $params[''date_to''] != '''') {\n			$date_to = date(''Y-m-d'', strtotime($params[''date_to'']));\n			$this->db->where(''issued_date <='', $date_to);\n		}\n		$this->db->where(''status > '', 0);\n		$query = $this->db->get(''invoices'');\n		return $query->result_array();\n	}\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(188, 50, '', '', 'ajax controller, provides ajax functions for Job module', '', '', '[{"attr_name":"author:","attr_desc":"\\t namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(189, 50, 'search_jobs', 'public', 'ajax function to search job(s)', '', 'an array of search parameters (POST)', '[{"attr_name":"return:","attr_desc":"\\t view of list of jobs\\n\\t"}]', 'function search_jobs()\n	{\n		$data = $this->input->post();\n		$data[''jobs''] = $this->job_model->search_jobs($data);\n		$this->load->view(''jobs_search_results_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(190, 50, 'create_shifts', 'public', 'ajax function to create shift(s) for a job', '', 'an array of shift parameters (POST)', '[{"attr_name":"return:","attr_desc":"\\t json encode of result\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t failed: {ok: false, error_id: (string)}\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t success: {ok: true, job_date: (string) YYYYDDMM\\n\\t"}]', 'function create_shifts()\n	{\n		$data = $this->input->post();\n		$filter_data = array();\n		$filter_data[''job_id''] = $data[''job_id''];\n		$filter_data[''job_date''] = date(''Y-m-d'', strtotime($data[''job_date'']));\n		\n		if (strtotime($data[''job_date'']) <= now())\n		{\n			# Job start date can not be in the past\n			echo json_encode(array(''ok'' => false, ''error_id'' => ''start_date''));\n			return;\n		}	\n		\n		$filter_data[''start_time''] = strtotime($data[''job_date'']);		\n		$filter_data[''finish_time''] = strtotime($data[''finish_time'']);\n				\n		\n		if ($filter_data[''finish_time''] <= $filter_data[''start_time''])\n		{\n			# Finish time can not be less than start time\n			echo json_encode(array(''ok'' => false, ''error_id'' => ''finish_time''));\n			return;\n		}\n		\n		if ($data[''break_length''] > 0)\n		{\n			$break_time = array(\n				''length'' => $data[''break_length''] * 60, # seconds\n				''start_at'' => strtotime($data[''break_start_at''])\n			);\n			\n			if ($break_time[''start_at''] <= $filter_data[''start_time''] || $break_time[''start_at''] >= $filter_data[''finish_time''])\n			{\n				echo json_encode(array(''ok'' => false, ''error_id'' => ''break_start_at''));\n				return;\n			}\n			$breaks = array();\n			$breaks[] = $break_time;\n			$filter_data[''break_time''] = json_encode($breaks);\n		}\n		if ($data[''venue''])\n		{\n			$venue = modules::run(''attribute/venue/get_venue_by_name'', $data[''venue'']);\n			if (!$venue)\n			{\n				echo json_encode(array(''ok'' => false, ''error_id'' => ''venue''));\n				return;\n			}\n			else\n			{\n				$filter_data[''venue_id''] = $venue[''venue_id''];\n			}\n		}\n		else\n		{\n			$filter_data[''venue_id''] = $data[''venue''];\n		}\n		\n		if ($data[''supervisor''])\n		{\n			$supervisor = modules::run(''staff/get_staff_by_name'', $data[''supervisor'']);\n			if (!$supervisor) {\n				echo json_encode(array(''ok'' => false, ''error_id'' => ''supervisor''));\n				return;\n			} else {\n				$filter_data[''supervisor_id''] = $supervisor[''user_id''];\n			}\n		}\n		\n		$filter_data[''role_id''] = $data[''role_id''];\n		$filter_data[''uniform_id''] = $data[''uniform_id''];\n		$filter_data[''payrate_id''] = $data[''payrate_id''];\n		#$filter_data[''payrate_type''] = $data[''payrate_type''];\n		\n		$count = $data[''count''];\n		if ($count < 1)\n		{\n			echo json_encode(array(''ok'' => false, ''error_id'' => ''count''));\n			return;\n		}\n		\n		for($i=0; $i < $count; $i++)\n		{\n			$this->job_shift_model->insert_job_shift($filter_data);\n		}\n		echo json_encode(array(''ok'' => true, ''job_date'' => $filter_data[''job_date'']));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(191, 50, 'sort_shifts', 'public', 'ajax function to set sort key & value when getting shifts', '', '(POST) ''key''', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function sort_shifts()\n	{\n		$key = $this->input->post(''key'');\n		$shifts_sort_value = ''asc'';\n		$shifts_sort_key = $this->session->userdata(''shifts_sort_key'');\n		if ($shifts_sort_key == $key)\n		{\n			# Change sort value\n			$shifts_sort_value = $this->session->userdata(''shifts_sort_value'');\n			if ($shifts_sort_value == ''asc'')\n			{\n				$shifts_sort_value = ''desc'';\n			} else\n			{\n				$shifts_sort_value = ''asc'';\n			}\n		}\n		else\n		{\n			# Init sort key & value\n			$shifts_sort_key = $key;\n		}\n		$this->session->set_userdata(''shifts_sort_key'', $shifts_sort_key);\n		$this->session->set_userdata(''shifts_sort_value'', $shifts_sort_value);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(192, 50, 'load_day_shifts', 'public', 'ajax function to load list view of shifts by day', '', '(POST) (int) job_id, (string: YYYY-MM-DD) job_date', '[{"attr_name":"return:","attr_desc":"\\t list view (table) of shifts\\n\\t"}]', 'function load_day_shifts()\n	{\n		$job_id = $this->input->post(''job_id'');\n		# Get all dates of the job\n		$job_dates = $this->job_shift_model->get_job_dates($job_id);\n		\n		# Get selected date from POST request first\n		$date = $this->input->post(''date'');\n		\n		# Then check the session\n		if (!$date)\n		{\n			$date = $this->session->userdata(''job_date'');\n		}\n		\n		# Otherwise, get the very next day\n		if (!$date) {\n			foreach($job_dates as $job_date)\n			{\n				if (strtotime($job_date[''job_date'']) >= strtotime(date(''Y-m-d'', now())))\n				{\n					$date = $job_date[''job_date''];\n					break;\n				}\n			}\n		}\n		\n		$this->session->set_userdata(''job_date'', $date);\n		\n		$data[''total_date''] = count($job_dates);\n		\n		# Get previous and next days\n		$key = 0;\n		foreach($job_dates as $index => $value)\n		{\n			if ($value[''job_date''] == $date)\n			{\n				$key = $index;\n			}\n		}		\n		if ($key == 0) {\n			$right_index = 2;\n			$left_index = 0;\n		} else if ($key == count($job_dates) - 1) {\n			$right_index = $key;\n			$left_index = $key - 2;\n		} else {\n			$right_index = $key + 1;\n			$left_index = $key - 1;\n		}\n		\n		# Optimized job dates array\n		$op_job_dates = array();\n		foreach($job_dates as $index => $value)\n		{\n			if ($index >= $left_index && $index <= $right_index)\n			{\n				$op_job_dates[] = $value;\n			}\n		}\n		\n		$data[''job_id''] = $job_id;\n		$data[''job_dates''] = $op_job_dates;\n		$data[''job_shifts''] = $this->job_shift_model->get_job_shifts($job_id, $date,\n						$this->session->userdata(''shifts_sort_key''),\n						$this->session->userdata(''shifts_sort_value''));\n		$this->load->view(''shifts_day_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(193, 50, 'load_month_view', 'public', 'ajax function to set calendar_view to month', '', '(POST) (int) ''date'' timestamp', '[{"attr_name":"return:","attr_desc":"\\t (string) YYYY-MM-DD\\n\\t"}]', 'function load_month_view()\n	{\n		$this->session->set_userdata(''calendar_view'', ''month'');\n		echo date(''Y-m-d'', $this->input->post(''date''));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(194, 50, 'load_week_view', 'public', 'ajax function to set calendar_view to week', '', '(POST) (int) ''date'' timestamp', '[{"attr_name":"return:","attr_desc":"\\t (string) YYYY-MM-DD\\n\\t"}]', 'function load_week_view()\n	{\n		$this->session->set_userdata(''calendar_view'', ''week'');\n		echo date(''Y-m-d'', $this->input->post(''date''));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(195, 50, 'load_job_calendar', 'public', 'ajax function to load calendar view (month/week) of shifts', '', '(POST) (int) ''job_id''', '[{"attr_name":"return:","attr_desc":"\\t (view) calendar view\\n\\t"}]', 'function load_job_calendar()\n	{\n		$job_id = $this->input->post(''job_id'');\n		$job_dates = $this->job_shift_model->get_job_dates($job_id);\n		$data[''custom_date''] = now();\n		if ($job_dates)\n		{\n			$data[''custom_date''] = strtotime($job_dates[0][''job_date'']);\n		}\n		if ($this->input->post(''date''))\n		{\n			$data[''custom_date''] = strtotime($this->input->post(''date''));\n		}\n		if ($data[''custom_date''] < now())\n		{\n			$data[''custom_date''] = now();\n		}\n		$data[''job_id''] = $job_id;\n		\n		if (!$this->session->userdata(''calendar_view'') || $this->session->userdata(''calendar_view'') == ''week'') {\n			$this->load->view(''shifts_week_view'', isset($data) ? $data : NULL);	\n		} \n		else if ($this->session->userdata(''calendar_view'') == ''month'') {\n			$out = array();\n			foreach($job_dates as $date)\n			{\n				\n				#$unassign = modules::run(''job/count_job_shifts'', $job_id, $date[''job_date''], ''0'');\n				#$completed = modules::run(''job/count_job_shifts'', $job_id, $date[''job_date''], SHIFT_FINISHED); \n\n\n				$out[] = array(\n					''unassigned'' => $this->job_shift_model->count_job_shifts($job_id, $date[''job_date''], ''0''),\n					''unconfirmed'' => $this->job_shift_model->count_job_shifts($job_id, $date[''job_date''], SHIFT_UNCONFIRMED),\n					''rejected'' => $this->job_shift_model->count_job_shifts($job_id, $date[''job_date''], SHIFT_REJECTED),\n					''confirmed'' => $this->job_shift_model->count_job_shifts($job_id, $date[''job_date''], SHIFT_CONFIRMED),\n					''completed'' => $this->job_shift_model->count_job_shifts($job_id, $date[''job_date''], SHIFT_FINISHED),\n					''title'' => $job_id,\n					''url'' => $date[''job_date''],\n					''start'' => strtotime($date[''job_date'']) . ''000'',\n					''end'' => strtotime($date[''job_date'']) . ''000'',\n				);\n			}\n			$data[''events_source''] = json_encode($out);\n			$this->load->view(''shifts_month_view'', isset($data) ? $data : NULL);\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(196, 50, 'load_shift_staff', 'public', 'ajax function to load view of assign staff to a shift', '', '(via POST) pk: (int) id of the shift', '[{"attr_name":"return:","attr_desc":"\\t (view) form to assign staff to the shift\\n\\t"}]', 'function load_shift_staff()\n	{\n		$shift_id = $this->input->post(''pk'');\n		$shift = $this->job_shift_model->get_job_shift($shift_id);\n		$data[''staff''] = modules::run(''staff/get_staff'', $shift[''staff_id'']);\n		$data[''shift''] = $shift;\n		$this->load->view(''shift_staff'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(197, 50, 'search_staff_for_shift', 'public', 'ajax function to search staffs for a shift', '', '(via POST) query: (string) keyword for staff name', '[{"attr_name":"return:","attr_desc":"\\t (view) of list of searched staffs\\n\\t"}]', 'function search_staff_for_shift()\n	{\n		$query = $this->input->post(''query'');\n		$this->load->model(''staff/staff_model'');\n		$data[''staffs''] = $this->staff_model->search_staffs(array(''keyword'' => $query, ''limit'' => 6));\n		$this->load->view(''staffs_for_shift'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(198, 50, 'update_shift_staff', 'public', 'ajax function to update staff assign / status to the shift', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t\\t shift_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t shift_staff_id: (int) id of staff\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t status: (int) 1 assigned \\/ 2 confirmed \\/ 3 rejected\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t shift_staff: (string) staff first name and last name\\n\\t"},{"attr_name":"return:","attr_desc":"\\t json encode\\n\\t"}]', 'function update_shift_staff()\n	{\n		$data = $this->input->post();\n		$update_shift_data = array();\n		if ($data[''shift_staff''])\n		{\n			$staff = modules::run(''staff/get_staff'', $data[''shift_staff_id'']);\n			\n			if ($staff)\n			{\n				$update_shift_data = array(\n					''staff_id'' => $data[''shift_staff_id''],\n					''status'' => $data[''status'']\n				);\n			}\n			else {\n				echo json_encode(array(''ok'' => false, ''msg'' => ''Staff not found''));\n				return;\n			}\n		}\n		else {\n			$update_shift_data = array(\n				''staff_id'' => 0,\n				''status'' => 0\n			);\n		}\n		\n		$this->job_shift_model->update_job_shift($data[''shift_id''], $update_shift_data);\n		echo json_encode(array(\n			''ok'' => true, \n			''shift_id'' => $data[''shift_id''], \n			''value'' => ($data[''shift_staff'']) ? $data[''shift_staff''] : ''No Staff Assigned'',\n			''class_name'' => modules::run(''job/status_to_class'', $update_shift_data[''status''])\n		));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(199, 50, 'load_shift_breaks', 'public', 'ajax function to load all breaks of the shift', '', '(int) shift_id, via POST', '[{"attr_name":"return:","attr_desc":"\\t (view) form with shift break information filled in\\n\\t"}]', 'function load_shift_breaks()\n	{\n		$shift_id = $this->input->post(''pk'');\n		$shift = $this->job_shift_model->get_job_shift($shift_id);\n		$data[''breaks''] = json_decode($shift[''break_time'']);\n		$data[''shift_id''] = $shift_id;\n		$data[''shift''] = $shift;\n		$this->load->view(''shift_breaks'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(200, 50, 'add_shift_break', 'public', 'ajax function to load form view to add new break to the shift', '', '(int) shift_id, via POST', '[{"attr_name":"return:","attr_desc":"\\t (view) form to enter new break for the shift\\n\\t"}]', 'function add_shift_break()\n	{\n		$shift_id = $this->input->post(''pk'');\n		$shift = $this->job_shift_model->get_job_shift($shift_id);\n		$data[''shift''] = $shift;\n		$this->load->view(''shift_add_break'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(201, 50, 'update_job_shift_breaks', 'public', 'ajax function to update breaks of the shift', '', 'two arrays of breaks length and start time (via POST)', '[{"attr_name":"return:","attr_desc":"\\t json encode - if successful {ok: true, shift_id: (int), minutes: int}\\n\\t"},{"attr_name":"","attr_desc":"\\t\\t\\t\\t\\t\\t - if failed\\t{ok: false, number: error_number}\\n\\t"}]', 'function update_job_shift_breaks()\n	{\n		$length = $this->input->post(''break_length'');\n		$start_at = $this->input->post(''break_start_at'');\n		$job_shift = $this->job_shift_model->get_job_shift($this->input->post(''shift_id''));\n		\n		$breaks = array();\n		$total = 0;\n		foreach($length as $index => $value)\n		{\n			if ($value > 0)\n			{\n				$break_time = array(\n					''length'' => $value * 60,\n					''start_at'' => strtotime($start_at[$index])\n				);\n				\n				if ($break_time[''start_at''] <= $job_shift[''start_time''] || $break_time[''start_at''] >=$job_shift[''finish_time''])\n				{\n					echo json_encode(array(''ok'' => false, ''number'' => $index));\n					return;\n				}\n				$total += $value;\n				$breaks[] = $break_time;\n			}\n		}\n		\n		if ($this->job_shift_model->update_job_shift($job_shift[''shift_id''], array(''break_time'' => json_encode($breaks))))\n		{\n			if ($total > 0) {				\n				$minutes = $total . '' mins'';\n				echo json_encode(array(''ok'' => true, ''shift_id'' => $job_shift[''shift_id''],''minutes'' => $minutes));\n			}\n			else\n			{\n				echo json_encode(array(''ok'' => true, ''shift_id'' => $job_shift[''shift_id''],''minutes'' => 0));\n			}\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(202, 50, 'delete_shifts', 'public', 'ajax function to delete shift(s)', '', 'an array of integers (via POST), which are primary keys of shifts', '[{"attr_name":"return:","attr_desc":"\\t json encode {job_id: (int) $job_id, job_date: (YYYY-MM-DD) $job_date}  \\n\\t"}]', 'function delete_shifts()\n	{\n		$shifts = $this->input->post(''shifts'');\n		$shift = null;\n		$result = array();\n		foreach($shifts as $shift_id)\n		{\n			$shift = $this->job_shift_model->get_job_shift($shift_id);\n			$this->job_shift_model->delete_job_shift($shift_id);\n		}\n		if ($shift)\n		{\n			$result[''job_id''] = $shift[''job_id''];\n			if (modules::run(''job/count_job_shifts'', $shift[''job_id''], strtotime($shift[''job_date''])) > 0)\n			{\n				$result[''job_date''] = $shift[''job_date''];\n			}\n		}		\n		echo json_encode($result);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(203, 50, 'load_shifts_copy', 'public', 'ajax function to load the calendar popup for copying shifts across', '', 'string of shift id 1~2~3~4 (via GET)', '[{"attr_name":"return:","attr_desc":"\\t calendar view\\n\\t"}]', 'function load_shifts_copy($s = '''')\n	{\n		$shifts = explode(''~'', $s);\n		\n		$data[''shift''] = $this->job_shift_model->get_job_shift($shifts[0]);\n		$data[''shifts''] = $shifts;		\n		$this->load->view(''shifts_copy'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(204, 50, 'update_selected_day', 'public', 'ajax function to update selected day (to the sessions of array of all selected days) for copying shift function', '', 'null', '[{"attr_name":"return:","attr_desc":"\\t json encode {success: true\\/false, msg: ''''}\\n\\t"}]', 'function update_selected_day()\n	{\n		$ts = $this->input->post(''ts'');\n		$all_ts = $this->session->userdata(''all_ts'');\n		if (!$all_ts) {\n			$all_ts = array();\n		}\n		$key = array_search($ts, $all_ts);\n		if ($key !== false) {\n			unset($all_ts[$key]);\n		}\n		else\n		{\n			if ($ts > now())\n			{\n				$all_ts[] = $ts;\n			}\n			else\n			{				\n				echo json_encode(array(''success'' => false, ''msg'' => ''Cannot copy to date in the past''));\n				return;\n			}\n		}\n		\n		$this->session->set_userdata(''all_ts'', $all_ts);\n		echo json_encode(array(''success'' => true));	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(205, 50, 'clear_selected_days', 'public', 'ajax function to clear session of selected days for copy', '', '(none)', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function clear_selected_days()\n	{\n		$this->session->unset_userdata(''all_ts'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(206, 50, 'copy_selected_days', 'public', 'ajax function to copy selected shifts to selected days', '', 'array of shift id', '[{"attr_name":"return:","attr_desc":"\\t json encode {success: (boolean), msg: (string)}\\n\\t"}]', 'function copy_selected_days()\n	{\n		$all_ts = $this->session->userdata(''all_ts'');\n		if ($all_ts)\n		{\n			$shifts = $this->input->post(''shifts'');\n			foreach($all_ts as $ts)\n			{\n				foreach($shifts as $shift_id)\n				{\n					$shift = $this->job_shift_model->get_job_shift($shift_id);\n					$new_shift = $shift;\n					unset($new_shift[''shift_id'']);\n					unset($new_shift[''created_on'']);\n					unset($new_shift[''modified_on'']);\n					$new_shift[''job_date''] = date(''Y-m-d'', $ts);\n					$start_time = strtotime(date(''Y-m-d'', $ts) . '' '' . date(''H:i'', $shift[''start_time'']));\n					$finish_time = $start_time + $shift[''finish_time''] - $shift[''start_time''];\n					$new_shift[''start_time''] = $start_time;\n					$new_shift[''finish_time''] = $finish_time;\n					\n					$breaks = json_decode($shift[''break_time'']);\n					$new_breaks = array();\n					foreach($breaks as $break)\n					{\n						$new_breaks[] = array(\n							''length'' => $break->length,\n							''start_at'' => $start_time + $break->start_at - $shift[''start_time'']\n						);\n					}\n					$new_shift[''break_time''] = json_encode($new_breaks);\n					$this->job_shift_model->insert_job_shift($new_shift);\n				}				\n			}\n			$this->session->unset_userdata(''all_ts'');\n			echo json_encode(array(''success'' => true));\n		}\n		else\n		{\n			echo json_encode(array(''success'' => false, ''msg'' => ''No day selected''));\n		}		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(207, 51, '', '', 'Ajax controller for calenadar', '', '', '', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(208, 51, 'get_calendar_data', 'public', 'Loads company calendar which contains all the shift count for a month based on their status', '', '(post) date', '[{"attr_name":"return","attr_desc":"\\t loads view file which shows the shift data in a monthly calendar\\n\\t"}]', 'function get_calendar_data()\n	{\n		$new_date = $this->input->post(''new_date'',true);\n		$month = date(''m'',strtotime($new_date));\n		$year = date(''Y'',strtotime($new_date));\n		$data[''custom_date''] = $new_date;\n		$data[''events_source''] = modules::run(''job/calendar/get_company_calendar_data'',$month,$year);\n		echo $this->load->view(''calendar/company_calendar'', isset($data) ? $data : NULL);\n		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(209, 51, 'get_calendar_data_summary', 'public', 'Loads shift total counts for a month based on their status', '', '(post) date', '', 'function get_calendar_data_summary()\n	{\n		$new_date = $this->input->post(''new_date'',true);\n		$month = date(''m'',strtotime($new_date));\n		$year = date(''Y'',strtotime($new_date));	\n		$data[''job_campaign''] = $this->job_shift_model->get_job_campaing_count_by_year_and_month($month,$year,true); \n		$data[''unassigned''] = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''unassigned'',true); //status 0\n		$data[''unconfirmed''] = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''unconfirmed'',true);//status 1\n		$data[''rejected''] = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''rejected'',true);//status -1\n		$data[''confirmed''] = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''confirmed'',true);//status 2\n		echo json_encode($data);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(210, 51, 'set_company_calendar_filter', 'public', 'This sets the filter data for company calendar. The current filters are filter by client and filter by state', '', '(via post) user id of client and state id', '', 'function set_company_calendar_filter()\n	{\n		$client_user_id = $this->input->post(''client_user_id'',true);\n		if($client_user_id){\n			$this->session->set_userdata(''company_calendar_filter_client_id'',$client_user_id);\n		}\n		echo ''filter set'';\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(211, 52, '', '', 'Ajax controller for job_shift', '', '', '', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(212, 53, '', '', 'Calendar controller', '', '', '', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(213, 53, 'home', 'public', 'Loads company calendar which contains all the shift count for a month based on their status', '', '(post) date', '[{"attr_name":"return","attr_desc":"\\t loads view file which shows the shift data in a monthly calendar\\n\\t"}]', 'function home()\n	{\n		$selected_client_user_id = 0;\n		if($this->session->userdata(''company_calendar_filter_client_id'')){\n			$selected_client_user_id = $this->session->userdata(''company_calendar_filter_client_id'');\n		}\n		$data[''selected_client_user_id''] = $selected_client_user_id;\n		$data[''clients''] = modules::run(''client/get_clients'');\n		$this->load->view(''calendar/home'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(214, 53, 'get_company_calendar_data', 'public', 'Formats company calendar data for each calendar day', '', '(string / int) month , (string / int) year', '[{"attr_name":"return","attr_desc":"\\t json encoded array of events for the calendar\\n\\t"}]', 'function get_company_calendar_data($month = '''',$year = '''')\n	{\n		if(!$month){\n			$month = date(''m'');\n		}\n		if(!$year){\n			$year = date(''Y'');	\n		}\n		$new_date = $month.'' ''.$year;\n		$job_campaign = $this->job_shift_model->get_job_campaing_count_by_year_and_month($month,$year); \n		$unassigned = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''unassigned'');//status 0\n		$unconfirmed = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''unconfirmed'');//status 1\n		$rejected = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''rejected'');//status -1\n		$confirmed = $this->job_shift_model->get_shift_by_year_and_month($month,$year,''confirmed'');//status 2\n		\n		\n		//merge the records in one array\n		//this is so that the its easier to display. \n		$merged_array = array();\n		\n		foreach($job_campaign as $jc){\n			$merged_array[$jc->job_date][''job_campaign''][''count''] = $jc->total_jobs;\n		}\n		foreach($unassigned as $ua){\n			$merged_array[$ua->job_date][''unassigned''][''count''] = $ua->total_shifts;\n		}\n		foreach($unconfirmed as $uc){\n			$merged_array[$uc->job_date][''unconfirmed''][''count''] = $uc->total_shifts;\n		}\n		foreach($rejected as $rs){\n			$merged_array[$rs->job_date][''rejected''][''count''] = $rs->total_shifts;	\n		}\n		foreach($confirmed as $cs){\n			$merged_array[$cs->job_date][''confirmed''][''count''] = $cs->total_shifts;\n		}\n		\n		foreach($merged_array as $key => $val){\n			$out[] = array(\n							''active_job_campaigns'' => isset($val[''job_campaign''][''count'']) ? $val[''job_campaign''][''count''] : '''',\n							''unfilled_shifts'' => isset($val[''unassigned''][''count'']) ? $val[''unassigned''][''count''] : '''',\n							''unconfirmed_shift'' => isset($val[''unconfirmed''][''count'']) ? $val[''unconfirmed''][''count''] : '''',\n							''rejected_shift'' => isset($val[''rejected''][''count'']) ? $val[''rejected''][''count''] : '''',\n							''confirmed_shift'' => isset($val[''confirmed''][''count'']) ? $val[''confirmed''][''count''] : '''',\n							''url'' => ''test'',\n							''start'' => strtotime($key).''000'',\n							''end'' => strtotime($key).''000''\n						);\n		}\n		if(!$out){\n			$out[] = array(\n				''active_job_campaigns'' => ''-'',\n				''unfilled_shifts'' => ''-'',\n				''unconfirmed_shift'' => ''-'',\n				''rejected_shift'' => ''-'',\n				''confirmed_shift'' => ''-'',\n				''url'' => ''test'',\n				''start'' => strtotime($new_date).''000'',\n				''end'' => strtotime($new_date).''000''\n				);\n		}\n		\n		return json_encode($out);\n	}\n	\n	\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(215, 54, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Job\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(216, 54, 'count_job_shifts', 'public', 'function to count number of shifts in a job, optionally in a specified date', '', '(int) $job_id, (int - timestamp) $job_date', '[{"attr_name":"return:","attr_desc":"\\t (int)\\n\\t"}]', 'function count_job_shifts($job_id, $job_date = null, $status = null)\n	{\n		if ($job_date)\n		{\n			$job_date = date(''Y-m-d'', $job_date);\n		}\n		echo $this->job_shift_model->count_job_shifts($job_id, $job_date, $status);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(217, 54, 'get_day_shifts', 'public', 'function to get list of shifts in a day', '', '(int) $job_id, (int - timestamp) $job_date', '[{"attr_name":"return:","attr_desc":"\\t (array)\\n\\t"}]', 'function get_day_shifts($job_id, $job_date)\n	{\n		$job_date = date(''Y-m-d'', $job_date);\n		$shifts = $this->job_shift_model->get_job_shifts($job_id, $job_date);\n		$ids = array();\n		foreach($shifts as $shift)\n		{\n			$ids[] = $shift[''shift_id''];\n		}\n		return $ids;\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(218, 54, 'field_select_shift_status', 'public', 'custom select shift status field', '', '- $field_name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional)\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional)\\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom select staff status field\\n\\t"}]', 'function field_select_shift_status($field_name, $field_value=null, $size=null)\n	{\n		$array = array(\n			array(''value'' => ''active'', ''label'' => ''All Active Shifts''),\n			array(''value'' => ''unassigned'', ''label'' => ''Un-Filled Shifts''),\n			array(''value'' => ''unconfirmed'', ''label'' => ''Un-Confirmed Shifts''),\n			array(''value'' => ''confirmed'', ''label'' => ''Confirmed Shifts'')\n		);\n		\n		return modules::run(''common/field_select'', $array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(219, 55, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Job\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(220, 57, 'get_shift_by_year_and_month', 'public', 'Function to get shifts based on their status', '', 'int month, int year', '[{"attr_name":"return","attr_desc":"\\t Returns array of avaliable roles\\n\\t"}]', 'function get_shift_by_year_and_month($month,$year,$status,$only_total = false)\n	{\n		$client_user_id = 0;\n		if($this->session->userdata(''company_calendar_filter_client_id'')){\n			$client_user_id = $this->session->userdata(''company_calendar_filter_client_id'');\n		}\n		$sql = "select s.job_date,count(s.shift_id) as total_shifts from job_shifts s";\n		if($client_user_id && $client_user_id != ''all''){\n			$sql .= " join jobs j on s.job_id = j.job_id and j.client_id = ".$client_user_id;	\n		}else{\n			$sql .= " where s.shift_id != ''''";	\n		}\n				\n		$sql .= " and month(s.job_date) = ''".$month."'' and year(s.job_date) = ''".$year."''";\n		switch($status){\n			case ''active'':\n				$sql .= " and (s.status > -2)";	\n			break;\n			case ''unassigned'':\n				$sql .= " and s.status = 0";\n			break;\n			case ''unconfirmed'':\n				$sql .= " and s.status = 1";\n			break;\n			case ''rejected'':\n				$sql .= " and s.status = -1";\n			break;\n			case ''confirmed'':\n				$sql .= " and s.status = 2";\n			break;	\n		}\n		if($only_total){\n			$shift = $this->db->query($sql)->row();\n			return $shift->total_shifts;\n		}else{\n			$sql .= " group by s.job_date order by s.job_date asc";\n			$shifts = $this->db->query($sql)->result();\n			return $shifts;\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(221, 58, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(222, 59, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(223, 61, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(224, 63, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(225, 63, 'list_staffs', 'public', 'ajax function to get the list of staff with batched timesheets', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) main layout of list pay runs \\n\\t"}]', 'function list_staffs() {\n		$data[''staffs''] = $this->payrun_model->get_staffs();\n		$this->load->view(''source/staffs_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(226, 63, 'get_payrun_stats', 'public', 'ajax function to get the stats of pay run', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) view of pay run stats\\n\\t"}]', 'function get_payrun_stats() {\n		$this->load->view(''stats'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(227, 63, 'set_filter', 'public', 'ajax function to set filter for list pay runs and save to sessions', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t name\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t value\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function set_filter() {\n		$this->session->set_userdata(''prf_'' . $this->input->post(''name''), $this->input->post(''value''));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(228, 63, 'row_timesheets_staff', 'public', 'ajax function to display the row (tr) content of batched staff', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t (int) user_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t (boolean) expanded\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (html) the row (tr) of batched staff\\n\\t"}]', 'function row_timesheets_staff() {\n		echo modules::run(''payrun/row_batched_staff'', $this->input->post(''user_id''), $this->input->post(''expanded''));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(229, 63, 'row_timesheet', 'public', 'ajax function to display the row (tr) content of single timesheet', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t (int) timesheet_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t (int) user_id\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (html) the row (tr) of single timesheet\\n\\t"}]', 'function row_timesheets_staff() {\n		echo modules::run(''payrun/row_batched_staff'', $this->input->post(''user_id''), $this->input->post(''expanded''));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(230, 63, 'process_staff_payruns', 'public', 'ajax function to add all timesheets of staff to payrun', '', '(POST) user_id', '[{"attr_name":"return:","attr_desc":"\\t json encode of array of all timesheet id\\n\\t"}]', 'function process_staff_payruns() {\n		$user_id = $this->input->post(''user_id'');\n		$this->payrun_model->process_staff_payruns($user_id);\n		$timesheets = $this->payrun_model->get_staff_timesheets($user_id);\n		$output = array();\n		foreach($timesheets as $timesheet)\n		{\n			$output[] = $timesheet[''timesheet_id''];\n		}\n		echo json_encode($output);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(231, 64, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Payrun\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(232, 64, 'main_view', 'public', 'load the main layout of the payrun page', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (void) load main layout of the payrun page\\n\\t"}]', 'function main_view() {\n		$this->load->view(''main_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(233, 64, 'row_staff', 'public', 'load view of a row (tr) of staff', '', '(int) $user_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view of a row (tr) of a staff\\n\\t"}]', 'function row_staff($user_id) {\n		$timesheets = $this->payrun_model->get_staff_timesheets($user_id);\n		$data[''staff_timesheets''] = $timesheets;\n		$data[''staff''] = $this->staff_model->get_staff($user_id);\n		$data[''expanded''] = $expanded;\n		return $this->load->view(''source/staff_row_view'', isset($data) ? $data : NULL, true);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(234, 64, 'row_batched_staff', 'public', 'load the row (tr) of batched timesheets of a specified staff', '', '(int) $user_id', '[{"attr_name":"(boolean)","attr_desc":"\\t\\t\\t $expanded (default: false)\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (html) row (tr) content of batched timesheets of a specified staff\\n\\t"}]', 'function row_batched_staff($user_id, $expanded = false) {\n		$timesheets = $this->payrun_model->get_staff_timesheets($user_id);\n		$data[''staff_timesheets''] = $timesheets;\n		$data[''staff''] = $this->staff_model->get_staff($user_id);\n		$data[''expanded''] = $expanded;\n		$checked = false;\n		$payrun_timesheets = $this->session->userdata(''payrun_timesheets'');\n		if (is_array($payrun_timesheets)) {\n			foreach($timesheets as $timesheet) {\n				if (in_array($timesheet[''timesheet_id''], $payrun_timesheets)) {\n					$checked = true;\n				}\n			}\n		}	\n		\n		$data[''checked''] = $checked;\n		return $this->load->view(''batched_staff_row'', isset($data) ? $data : NULL, true);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(235, 64, 'row_timesheet', 'public', 'load the row (tr) of single timesheet', '', '(int) $timesheet_id', '[{"attr_name":"(int)","attr_desc":"\\t\\t\\t $user_id\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (html) row (tr) content of single timesheet\\n\\t"}]', 'function row_timesheet($timesheet_id, $user_id) {\n		$data[''timesheet''] = $this->payrun_model->get_timesheet($timesheet_id);\n		$data[''user_id''] = $user_id;\n		$this->load->view(''source/timesheet_row'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(236, 64, 'row_timesheets_staff', 'public', 'load the rows (tr) of all timesheets of a specified staff', '', '(int) $user_id', '[{"attr_name":"return:","attr_desc":"\\t (html) rows (tr) of all timesheets of a specified staff \\n\\t"}]', 'function row_timesheets_staff($user_id) \n	{\n		$timesheets = $this->payrun_model->get_staff_timesheets($user_id);\n		foreach($timesheets as $timesheet) {\n			$this->row_timesheet($timesheet[''timesheet_id''], $user_id);\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(237, 64, 'field_select_type', 'public', 'custom field select type of payrun', '', '- $field_name: string of field name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional): selected value of field\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional): size \\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom select input field\\n\\t"}]', 'function field_select_type($field_name, $field_value=null, $size=null) {\n		$array = array(\n			array(''value'' => STAFF_TFN, ''label'' => ''TFN''),\n			array(''value'' => STAFF_ABN, ''label'' => ''ABN'')\n		);\n		return modules::run(''common/field_select'', $array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(238, 64, 'menu_dropdown', 'public', 'generate the dropdown menu of pay run', '', '(string) $id', '[{"attr_name":"(string)","attr_desc":"\\t\\t\\t $label\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (html) dropdown menu of pay run filter\\n\\t"}]', 'function menu_dropdown($id, $label) {\n		$data = array(\n			array(''value'' => '''', ''label'' => ''Any''),\n			array(''value'' => PAYRUN_READY, ''label'' => ''Yes'')\n		);\n		return modules::run(''common/menu_dropdown'', $data, $id, $label);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(239, 64, 'menu_dropdown_actions', 'public', 'generate the dropdown menu of actions', '', '(string) $id', '[{"attr_name":"(string)","attr_desc":"\\t\\t\\t $label\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (html) dropdown menu of actions\\n\\t"}]', 'function menu_dropdown_actions($id, $label) {\n		$data = array(\n			array(''value'' => ''process'', ''label'' => ''Set Yes for Pay Run''),\n			array(''value'' => ''unprocess'', ''label'' => ''Set No for Pay Run''),\n			array(''value'' => ''archive'', ''label'' => ''Set as Paid & Archive''),\n			array(''value'' => ''revert'', ''label'' => ''Revert Selected'')\n		);\n		return modules::run(''common/menu_dropdown'', $data, $id, $label);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(240, 65, 'count_staff', 'public', 'count the number of staffs ready for pay run', '', '(int) $tfn (1: TFN, 2: ABN)', '[{"attr_name":"return:","attr_desc":"\\t (int) number of staffs\\n\\t"}]', 'function count_staff($tfn=STAFF_TFN) {\n		$sql = "SELECT u.* FROM `job_shift_timesheets` j\n					LEFT JOIN `user_staffs` u ON j.staff_id = u.user_id\n					WHERE j.status = " . TIMESHEET_BATCHED . " \n					AND j.status_payrun_staff = " . PAYRUN_READY . " \n					AND u.f_employed = " . $tfn . " GROUP BY j.staff_id";\n		$query = $this->db->query($sql);\n		return $query->num_rows();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00');
INSERT INTO `modules_functions` (`id`, `modules_mvc_id`, `name`, `access`, `description`, `comment`, `params`, `attributes`, `code`, `created`, `modified`) VALUES
(241, 65, 'get_total_amount', 'public', 'get total amount ready for staff pay run', '', '(int) $tfn (1: TFN, 2: ABN)', '[{"attr_name":"return:","attr_desc":"\\t (decimal) total amount to pay\\n\\t"}]', 'function get_total_amount($tfn=STAFF_TFN) {\n		$sql = "SELECT sum(j.total_amount_staff) as `total` FROM `job_shift_timesheets` j\n					LEFT JOIN `user_staffs` u ON j.staff_id = u.user_id\n					WHERE j.status = " . TIMESHEET_BATCHED . " \n					AND j.status_payrun_staff = " . PAYRUN_READY . " \n					AND u.f_employed = " . $tfn;\n		$query = $this->db->query($sql);\n		$result = $query->first_row(''array'');\n		if ($result && isset($result[''total''])) {\n			return $result[''total''];\n		}\n		return 0;\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(242, 65, 'get_staffs', 'public', 'get all staffs have timesheets need to be paid', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (array) of staff object\\n\\t"}]', 'function get_staffs() {\n		$sql = "SELECT u.* FROM `job_shift_timesheets` j\n					LEFT JOIN `users` u ON j.staff_id = u.user_id\n					LEFT JOIN `user_staffs` s ON j.staff_id = s.user_id\n					WHERE j.status = " . TIMESHEET_BATCHED . "\n					AND j.status_payrun_staff <= " . PAYRUN_READY;\n		\n		$prf_state = $this->session->userdata(''prf_state'');\n		if ($prf_state) {\n			$sql .= " AND u.state = ''" . $prf_state . "''";\n		}\n		$prf_tfn = $this->session->userdata(''prf_tfn'');\n		if ($prf_tfn != "") {\n			$sql .= " AND s.f_employed = ''" . $prf_tfn . "''";\n		}\n		$prf_status = $this->session->userdata(''prf_status'');\n		if ($prf_status != "") {\n			$sql .= " AND j.status_payrun_staff = ''" . $prf_status . "''";\n		}\n		$sql .= " GROUP BY j.staff_id";\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(243, 65, 'get_timesheet', 'public', 'get batched timesheet', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (obj) timesheet object\\n\\t"}]', 'function get_timesheet($timesheet_id) {\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		$this->db->where(''status'', TIMESHEET_BATCHED);\n		$query = $this->db->get(''job_shift_timesheets'');\n		return $query->first_row(''array'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(244, 65, 'get_staff_timesheets', 'public', 'get all timesheets by a staff', '', '(int) $user_id', '[{"attr_name":"return:","attr_desc":"\\t (array) of timesheet objects\\n\\t"}]', 'function get_staff_timesheets($user_id) {\n		$this->db->where(''staff_id'', $user_id);\n		$this->db->where(''status'', TIMESHEET_BATCHED);\n		$this->db->where(''status_payrun_staff <= '', PAYRUN_READY);\n		\n		$prf_status = $this->session->userdata(''prf_status'');\n		if ($prf_status != "") {\n			$this->db->where(''status_payrun_staff'', $prf_status);\n		}\n		\n		$query = $this->db->get(''job_shift_timesheets'');\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(245, 65, 'process_staff_payruns', 'public', 'set all timesheets of a staff to be ready for pay run', '', '(int) $staff_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function process_staff_payruns($staff_id) {\n		$this->db->where(''staff_id'', $staff_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_payrun_staff'' => PAYRUN_READY));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(246, 65, 'process_payrun', 'public', 'set a timesheet to be ready for pay run', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function process_payrun($timesheet_id)\n	{\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_payrun_staff'' => PAYRUN_READY));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(247, 65, 'unprocess_staff_payruns', 'public', 'set all timesheets of a staff to not be ready for pay run', '', '(int) $staff_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function unprocess_staff_payruns($staff_id)\n	{\n		$this->db->where(''staff_id'', $staff_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_payrun_staff'' => PAYRUN_PENDING));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(248, 65, 'unprocess_payrun', 'public', 'set a timesheet to not be ready for pay run', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function unprocess_payrun($timesheet_id)\n	{\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status_payrun_staff'' => PAYRUN_PENDING));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(249, 65, 'revert_staff_payruns', 'public', 'revert all timesheets of a staff to previous status (not batched)', '', '(int) $staff_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function revert_staff_payruns($staff_id)\n	{\n		$this->db->where(''staff_id'', $staff_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status'' => TIMESHEET_APPROVED));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(250, 65, 'revert_payrun', 'public', 'revert a timesheet to previous status (not batched)', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function revert_payrun($timesheet_id)\n	{\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		return $this->db->update(''job_shift_timesheets'', array(''status'' => TIMESHEET_APPROVED));\n	}\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(251, 66, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(252, 67, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(253, 68, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(254, 71, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(255, 72, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Profile\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(256, 74, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Report\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(257, 76, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(258, 78, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Resource\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(259, 80, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Dashboard_staff\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(260, 80, 'load_month_rosters', 'public', 'ajax function to set active month to the session', '', '(POST) ts (timestamp)', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function load_month_rosters() {\n		$this->session->set_userdata(''active_month_roster'', $this->input->post(''ts''));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(261, 83, 'update_company', 'public', 'abstract function to call element of company profile', '', '(string) $tab', '[{"attr_name":"return:","attr_desc":"\\t (view) of different update form depends on selected tab\\n\\t"}]', 'function update_company($tab)\n	{\n		$data[''company''] = $this->setting_model->get_profile();				\n		$this->load->view(''edit_'' . $tab, isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(262, 83, 'update_company_profile', 'public', 'abstract function to update company profile. When no company profile data, it will create otherwise it will update the data', '', 'POST', '', 'function update_company_profile()\n	{\n		$data = $this->input->post();\n		$company_data = array(\n			''company_name'' => $data[''company_name''],\n			''address'' => $data[''address''],\n			''suburb'' => $data[''suburb''],\n			''postcode'' => $data[''postcode''],\n			''state'' => $data[''state''],\n			''country'' => $data[''country''],			\n			''email'' => $data[''email''],			\n			''telephone'' => $data[''telephone''],\n			''fax'' => $data[''fax''],\n			''website_account'' => $data[''website_account''],\n			''abn_acn'' => $data[''abn_acn''],\n			''bank_account_name'' => $data[''bank_account_name''],\n			''bank_account_no'' => $data[''bank_account_no''],\n			''bank_bsb'' => $data[''bank_bsb''],\n			''super_fund_name'' => $data[''super_fund_name''],\n			''super_product_id'' => $data[''super_product_id''],\n			''super_fund_phone'' => $data[''super_fund_phone''],\n			''super_fund_website'' => $data[''super_fund_website''],\n			''term_and_conditions'' => $data[''term_and_conditions''],\n			''email_c_name'' => $data[''company_name''],\n			''email_c_address'' => $data[''address''],\n			''email_c_suburb'' => $data[''suburb''],\n			''email_c_postcode'' => $data[''postcode''],\n			''email_c_state'' => $data[''state''],\n			''email_c_country'' => $data[''country''],			\n			''email_c_email'' => $data[''email''],			\n			''email_c_telephone'' => $data[''telephone''],\n			''email_c_fax'' => $data[''fax''],\n			''email_c_website'' => $data[''website_account''],\n		);\n		if($data[''company_id'']==0){			\n			$this->setting_model->create_company_profile($company_data);		\n		}\n		else\n		{\n			$this->setting_model->update_profile($data[''company_id''], $company_data);		\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(263, 83, 'update_company_signature', 'public', 'abstract function to update company profile. When no company profile data, it will create otherwise it will update the data', '', 'POST', '', 'function update_company_signature()\n	{\n		$data = $this->input->post();\n		$company_data = array(			\n			''email_c_name'' => $data[''email_c_name''],\n			''email_c_address'' => $data[''email_c_address''],\n			''email_c_suburb'' => $data[''email_c_suburb''],\n			''email_c_postcode'' => $data[''email_c_postcode''],\n			''email_c_state'' => $data[''email_c_state''],\n			''email_c_country'' => $data[''email_c_country''],			\n			''email_c_email'' => $data[''email_c_email''],			\n			''email_c_telephone'' => $data[''email_c_telephone''],\n			''email_c_fax'' => $data[''email_c_fax''],\n			''email_c_website'' => $data[''email_c_website''],\n			''email_s_facebook'' => $data[''email_s_facebook''],\n			''email_s_twitter'' => $data[''email_s_twitter''],\n			''email_s_linkedin'' => $data[''email_s_linkedin''],\n			''email_s_google'' => $data[''email_s_google''],\n			''email_s_youtube'' => $data[''email_s_youtube''],\n			''email_s_instagram'' => $data[''email_s_instagram''],	\n			''email_background_colour'' => $data[''email_background_colour''],			\n			''email_font_colour'' => $data[''email_font_colour''],\n			''email_common_text'' => $data[''email_common_text'']			\n		);\n		if($data[''company_id'']==0){			\n			$this->setting_model->create_company_profile($company_data);		\n		}\n		else\n		{\n			$this->setting_model->update_profile($data[''company_id''], $company_data);		\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(264, 83, 'upload_logo', 'public', 'Upload logo of the company. the image will be resized with ratio 150:150 stored on thumbnail folder. There is no thumbnail needed for upload logo', '', '(via POST) (int) company_id', '', 'function upload_logo()\n	{\n		\n		$company_id = $this->input->post(''company_id'');\n		\n		if($company_id==0){$comp_id=1;}else{$comp_id=$company_id;}\n		$path = "./uploads/company";\n		$dir = $path;\n		if(!is_dir($dir))\n		{\n		  mkdir($dir);\n		  chmod($dir,0777);\n		  $fp = fopen($dir.''/index.html'', ''w'');\n		  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n		  fclose($fp);\n		}\n		\n		$path = "./uploads/company/logo";\n		$dir = $path;\n		if(!is_dir($dir))\n		{\n		  mkdir($dir);\n		  chmod($dir,0777);\n		  $fp = fopen($dir.''/index.html'', ''w'');\n		  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n		  fclose($fp);\n		}\n		$path = "./uploads/company/logo";\n		$newfolder = md5($comp_id);\n		$dir = $path."/".$newfolder;\n		if(!is_dir($dir))\n		{\n		  mkdir($dir);\n		  chmod($dir,0777);\n		  $fp = fopen($dir.''/index.html'', ''w'');\n		  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n		  fclose($fp);\n		}		\n		$config[''upload_path''] = $dir;\n		$config[''allowed_types''] = ''gif|jpg|png'';\n		$config[''max_size'']	= ''4096''; // 4 MB\n		$config[''max_width'']  = ''2000'';\n		$config[''max_height'']  = ''2000'';\n		$config[''overwrite''] = FALSE;\n		$config[''remove_space''] = TRUE;\n	\n		$this->load->library(''upload'', $config);\n		\n				\n		\n		if ( ! $this->upload->do_upload())\n		{\n			$this->session->set_flashdata(''error_addphoto'',$this->upload->display_errors());			\n		}	\n		else\n		{\n			$data = array(''upload_data'' => $this->upload->data());\n			$file_name = $data[''upload_data''][''file_name''];\n			$width = $data[''upload_data''][''image_width''];\n			$height = $data[''upload_data''][''image_height''];\n			$photo = array(				\n				''company_logo'' => $file_name,\n				''modified'' => date(''Y-m-d H:i:s''),				\n			);\n			if($company_id==0){			\n				$company_id = $this->setting_model->create_company_profile($photo);		\n			}\n			else\n			{\n				$this->setting_model->update_profile($company_id, $photo);		\n			}\n			\n			\n			$dirs=$dir.''/thumbnail'';\n			if(!is_dir($dirs))\n			{\n			  mkdir($dirs);\n			  chmod($dirs,0777);\n			  $fp = fopen($dirs.''/index.html'', ''w'');\n			  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n			  fclose($fp);\n			}						\n			copy($dir.''/''.$file_name, $dirs."/".$file_name);\n			$target = $dirs."/".$file_name;\n			$this->imageResizer($target,$target,150,150);	\n			\n			\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(265, 83, 'imageResizer', 'public', 'Resize Image from uploaded logo. this will resize based on ratio parameter which is in this case 150:150', '', 'image, url target, width and height ratio image', '', 'function imageResizer($image_u,$target, $width, $height) {        \n        list($width_orig, $height_orig) = getimagesize($image_u);\n		$myImage = imagecreatefromjpeg($image_u);\n        $ratio_orig = $width_orig/$height_orig;\n\n        if ($width/$height > $ratio_orig) {\n          $width = $height*$ratio_orig;\n        } else {\n          $height = $width/$ratio_orig;\n        }\n\n        // This resamples the image\n        $image_p = imagecreatetruecolor($width, $height);\n        $image = imagecreatefromjpeg($image_u);\n        imagecopyresampled($image_p, $image, 0, 0, 0, 0, $width, $height, $width_orig, $height_orig);\n\n        // Output the image\n        imagejpeg($image_p, $target, 100);\n    }', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(266, 83, 'load_picture', 'public', 'show the company logo picture', '', '(via POST) (int) company_id', '', 'function load_picture($company_id)\n	{\n		$company_id = $this->input->post(''company_id'',true);\n		$data[''company''] = $this->setting_model->get_profile();				\n		\n		$this->load->view(''setting/list_photo'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(267, 83, 'delete_logo', 'public', 'Delete the currently logo and will be replaced with the default logo staff master', '', '(via POST) (int) company_id', '', 'function delete_logo($company_id)\n	{\n		$company_id = $this->input->post(''company_id'');\n		$photo = array(				\n				''company_logo'' => '''',\n				''modified'' => date(''Y-m-d H:i:s''),				\n		);\n		if($company_id!=0){	$this->setting_model->update_profile($company_id, $photo);}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(268, 83, 'get_template_footer', 'public', 'Get Email Footer Template', '', '(via POST) Background color and Font color', '', 'function get_template_footer()\n	{\n		$company = $this->setting_model->get_profile();\n		\n		$color = $company[''email_background_colour''];\n		$font_color = $company[''email_font_colour''];\n		\n		if($_POST){\n			$color = $this->input->post(''color'');\n			$font_color = $this->input->post(''font_color'');\n		}\n		\n		\n		\n		\n		\n		$data[''color''] = $color;\n		$data[''font_color''] = $font_color;\n		$data[''company''] = $company;\n		$this->load->view(''setting/email_footer_template'', isset($data) ? $data : NULL);	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(269, 83, 'send_email_template', 'public', 'Function to send email the templaete email', '', '', '', 'function send_email_template()\n	{\n		\n		$config = Array(\n			''protocol'' => ''smtp'',\n			''smtp_host'' => ''ssl://smtp.googlemail.com'',\n			''smtp_port'' => 465,\n			''smtp_user'' => ''propagate.au@gmail.com'', // change it to yours\n			''smtp_pass'' => ''morem0n3y'', // change it to yours\n			''mailtype'' => ''html'',\n			''charset'' => ''iso-8859-1'',\n			''wordwrap'' => TRUE\n		);\n		\n		$subject ="Email Template Company Profile";\n		$this->load->library(''email'', $config);\n		$this->email->set_newline("\\r\\n");\n		$this->email->from(''propagate.au@gmail.com''); // change it to yours\n		$this->email->to(''raquel@propagate.com.au'');// change it to yours\n		$company_logo = modules::run(''setting/company_logo'');\n		$email_signature = modules::run(''setting/ajax/get_template_footer'');\n		$this->email->subject($subject);\n		$this->email->message($company_logo . ''<br />''.$message . $email_signature);\n		\n		if($this->email->send())\n		{\n		echo ''Email sent.'';\n		}\n		else\n		{\n			show_error($this->email->print_debugger());\n		}\n		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(270, 84, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Setting\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(271, 84, 'company', 'public', 'function to call the view of one of company profile', '', '', '[{"attr_name":"return:","attr_desc":"\\t view based on tab\\n\\t"}]', 'function company()\n	{\n		$company = $this->setting_model->get_profile();				\n		$data[''company''] = $company;\n		$this->load->view(''company_profile'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(272, 84, 'update_profile', 'public', 'function to update company profile', '', '', '[{"attr_name":"return:","attr_desc":"\\t view based on tab\\n\\t"}]', 'function update_profile()\n	{\n		$company = $this->setting_model->get_profile();\n		$company_email = $this->setting_model->get_profile_email_template();\n		if ($this->input->post())\n		{\n			$data = $this->input->post();\n			$this->setting_model->update_profile(1, array(\n				''company_name'' => $data[''company_name''],\n				''company_address'' => $data[''company_address''], \n				''company_suburb'' => $data[''company_suburb''],\n				''company_postcode'' => $data[''company_postcode''],\n				''company_state'' => $data[''company_state''],\n				''company_country'' => $data[''company_country''],\n				''company_email'' => $data[''company_email''],\n				''company_website'' => $data[''company_website''],\n				''company_phone'' => $data[''company_phone''],\n				''company_fax'' => $data[''company_fax''],\n				''company_abn'' => $data[''company_abn''],\n				''company_account_name'' => $data[''company_account_name''],\n				''company_account_no'' => $data[''company_account_no''],\n				''company_bsb'' => $data[''company_bsb''],\n				''super_name'' => $data[''super_name''],\n				''super_product_id'' => $data[''super_product_id''],\n				''super_fund_phone'' => $data[''super_fund_phone''],\n				''super_fund_website'' => $data[''super_fund_website''],\n			));\n		}\n		$data[''states''] = $this->user_model->get_states();\n		$data[''company''] = $company;		\n		$this->load->view(''company_profile'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(273, 84, 'get_template_footer', 'public', 'Get Email Footer Template', '', '(via POST) Background color and Font color', '', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(274, 84, 'company_logo', 'public', 'ajax function to get company logo', '', '', '', 'function company_logo()\n	{\n		$data[''company''] = $this->setting_model->get_profile();\n		$this->load->view(''company_logo'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(275, 84, 'company_profile', 'public', 'ajax function to get company logo', '', '', '', 'function company_profile()\n	{\n		return $this->setting_model->get_profile();		\n	}\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(276, 86, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(277, 86, 'update_staff', 'public', 'abstract function to update staff profile', '', '(int) $user_id, (string) $tab', '[{"attr_name":"return:","attr_desc":"\\t (view) of different update form depends on selected tab\\n\\t"}]', 'function update_staff($user_id, $tab)\n	{\n		$data[''staff''] = $this->staff_model->get_staff($user_id);		\n		$this->load->view(''edit_'' . $tab, isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(278, 86, 'get_staff_roles', 'public', 'Displayes all the available roles in the system and the roles that has been asigned to the staff.', '', 'Post data - sort parameter and user id (staff id)', '[{"attr_name":"return","attr_desc":"\\t Lists all roles with roles that has been assigned to staffs checked\\n\\t"}]', 'function get_staff_roles()\n	{\n		$params = $this->input->post(''params'',true);\n		$data[''roles''] = $this->role_model->get_roles($params);\n		$data[''params''] = $params;\n		$this->load->view(''ajax_list_roles_staff_profile'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(279, 86, 'update_roles', 'public', 'ajax function to add or delete roles', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t\\t (int) user_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t (int) role_id\\n\\t"}]', 'function update_roles()\n	{\n		$user_id = $this->input->post(''staff_id'');\n		$role_id = $this->input->post(''role_id'');\n		if($this->staff_model->update_staff_role($user_id,$role_id)){\n			echo ''success'';	\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(280, 86, 'add_location', 'public', 'ajax function to add location of staff', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t\\t (int) location_parent_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t (int) location_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t (int) user_id\\n\\t"},{"attr_name":"return:","attr_desc":"\\t json encode array {ok: (true\\/false)}\\n\\t"}]', 'function add_location() {		\n		$parent_id = $this->input->post(''location_parent_id'');\n		if (!$parent_id) {\n			echo json_encode(array(''ok'' => false));\n			return;\n		}\n		$location_id = $this->input->post(''location_id'');\n		\n		$data = array();\n		$location = array();		\n		\n		if (!$location_id) { # Select all locations within location_parent_id\n			$all = modules::run(''attribute/location/get_locations'', $parent_id);\n			foreach($all as $a) {\n				$location[] = $a[''location_id''];\n			}\n		}\n		else\n		{\n			$location[] = $location_id;\n		}\n		$data[$parent_id] = $location;\n		\n		\n		# Now merging with current locations data\n		$staff = $this->staff_model->get_staff($this->input->post(''user_id''));\n		$locations = json_decode($staff[''locations'']);\n		\n		if (count($locations) > 0) foreach($locations as $o_parent_id => $o_childrens)\n		{\n			if ($o_parent_id != $parent_id) # Adding old parent locations\n			{\n				$data[$o_parent_id] = $o_childrens;\n			}\n			else\n			{\n				if (!$location_id)\n				{\n					$data[$parent_id] = $location;\n				}\n				else if (!in_array($location_id, $o_childrens))\n				{\n					$data[$parent_id] = array_merge($o_childrens, $location);\n				}\n				else\n				{\n					$data[$parent_id] = $o_childrens;\n				}\n			}\n		}\n		\n		$this->staff_model->update_staff($staff[''user_id''], array(''locations'' => json_encode($data)));\n		echo json_encode(array(''ok'' => true));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(281, 86, 'remove_location', 'public', 'ajax function to remove location of staff', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t\\t (int) parent_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t (int) location_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t (int) user_id\\n\\t"},{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function remove_location() {\n		var_dump($this->input->post());\n		$staff = $this->staff_model->get_staff($this->input->post(''user_id''));\n		$parent_id = $this->input->post(''parent_id'');\n		$location_id = $this->input->post(''location_id'');\n		$locations = json_decode($staff[''locations'']);\n		\n		$data = array();\n		if (!$location_id)\n		{\n			foreach($locations as $o_parent_id => $childrens)\n			{\n				if ($o_parent_id != $parent_id)\n				{\n					$data[$o_parent_id] = $childrens;\n				}\n			}\n		}\n		else\n		{\n			foreach($locations as $o_parent_id => $childrens)\n			{\n				$new_locations = array();\n				foreach($childrens as $child)\n				{\n					if ($child != $location_id) {\n						$new_locations[] = $child;\n					}\n				}\n				$data[$o_parent_id] = $new_locations;\n			}\n			\n		}\n		$this->staff_model->update_staff($staff[''user_id''], array(''locations'' => json_encode($data)));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(282, 86, 'load_locations', 'public', 'ajax function to load staff locations view', '', '(via POST) (int) user_id', '[{"attr_name":"return:","attr_desc":"\\t (view) staff locations\\n\\t"}]', 'function load_locations()\n	{\n		$staff = $this->staff_model->get_staff($this->input->post(''user_id''));\n		$data[''staff''] = $staff;\n		$data[''locations''] = json_decode($staff[''locations'']);\n		$this->load->view(''staff_locations'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(283, 86, 'load_availability', 'public', 'ajax function to load staff availability view. If staff doesn''t have availability, the funcition will create avaiability record as available all days all times', '', '(via POST) (int) user_id', '[{"attr_name":"return:","attr_desc":"\\t (view) staff availability\\n\\t"}]', 'function load_availability()\n	{\n		$user_id = $this->input->post(''user_id'');\n		$availability = $this->staff_model->get_availability($user_id);\n		if(count($availability)<=0){\n			$this->initiate_availability($user_id);\n			$availability = $this->staff_model->get_availability($user_id);\n		}\n		$data[''user_id''] = $user_id;\n		$data[''availability''] = $availability;\n		$this->load->view(''staff/availability_table_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(284, 86, 'initiate_availability', 'public', 'initiate value of staff availability time, if there is no data yet. It will be initiated as available all days and all times', '', '(via parameter) (int) user_id', '', 'function initiate_availability($user_id)\n	{\n		$values = '''';			\n		for($day=1; $day <=7; $day++) {\n			for($hour=0; $hour <=23; $hour++) {\n				$values .= ''(''.$user_id.'',''.$day.'',''.$hour.'',1),''; 		\n			}\n		}  \n		$values = rtrim($values,'','');\n		$sql = "INSERT INTO `user_staff_availability` (`user_id`, `day`, `hour`, `value`) VALUES ".$values;\n		$this->db->query($sql);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(285, 86, 'update_availability', 'public', 'update value of staff availability time', '', '(via POST) (int) user_id,name,value', '', 'function update_availability()\n	{\n		$value = $this->input->post(''value_avail'');\n		$name = $this->input->post(''name'');\n		$fields = explode(''-'', $name);		\n		$day = $fields[1];\n		$hour = $fields[2];\n		$this->staff_model->update_available_data($this->input->post(''user_id''), $day, $hour, $value);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(286, 86, 'get_staff_roles', 'public', 'Displayes all the available groups in the system and the roles that has been asigned to the staff.', '', 'Post data - sort parameter and user id (staff id)', '[{"attr_name":"return","attr_desc":"\\t Lists all roles with roles that has been assigned to staffs checked\\n\\t"}]', 'function get_staff_roles()\n	{\n		$params = $this->input->post(''params'',true);\n		$data[''roles''] = $this->role_model->get_roles($params);\n		$data[''params''] = $params;\n		$this->load->view(''ajax_list_roles_staff_profile'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(287, 86, 'update_groups', 'public', 'ajax function to add or delete groups', '', '(via POST)', '[{"attr_name":"-","attr_desc":"\\t\\t\\t (int) user_id\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t (int) group_id\\n\\t"}]', 'function update_groups()\n	{\n		$user_id = $this->input->post(''staff_id'');\n		$group_id = $this->input->post(''group_id'');\n		if($this->staff_model->update_staff_group($user_id,$group_id)){\n			echo ''success'';	\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(288, 86, 'load_picture', 'public', 'show the profile picture and gallery', '', '(via POST) (int) user_id', '', 'function load_picture()\n	{\n		$user_id = $this->input->post(''user_id'',true);\n		$photos = $this->staff_model->get_all_photos($user_id);\n		$hero_photo = $this->staff_model->get_hero($user_id);	\n		$data[''hero_photo''] = $hero_photo;\n		$data[''photos''] = $photos;\n		$data[''user_id''] = $user_id;				\n		$this->load->view(''staff/list_photo'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(289, 86, 'update_custom_attributes', 'public', 'Update custom attribute of a staff', '', '(via POST) custom attributes data', '', 'function update_custom_attributes()\n	{\n		$post_data = $this->input->post();\n		$user_id = $this->input->post(''user_staff_id'',true);\n		//delete existing data\n		$this->staff_model->delete_staff_custom_attributes($user_id);\n		foreach($post_data as $key => $val){\n			if($key != ''user_staff_id''){\n				//for checkbox and multi select \n				if(modules::run(''formbuilder/has_multiple_value'',$key)){\n					$custom_attr = array(\n										''user_id'' => $user_id,\n										''attribute_name'' => $key,\n										''attributes'' => json_encode($val)\n									);\n				}else{\n					$custom_attr = array(\n										''user_id'' => $user_id,\n										''attribute_name'' => $key,\n										''attributes'' => $val\n									);	\n				}\n				$this->staff_model->insert_staff_custom_attributes($custom_attr);\n			}\n		}\n		echo ''success'';\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(290, 86, 'set_hero', 'public', 'Set hero image', '', '(via POST) user_staff_picture_id', '', 'function set_hero_photo()\n	{\n		$user_staff_picture_id = $this->input->post(''user_staff_picture_id'',true);\n		$user_id = $this->input->post(''user_id'',true);\n		$this->staff_model->uset_hero($user_id);\n		echo $this->staff_model->update_user_staff_picture($user_staff_picture_id,array(''hero''=> 1));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(291, 86, 'set_hero', 'public', 'Set hero image', '', '(via POST) user id', '', 'function set_hero_photo()\n	{\n		$user_staff_picture_id = $this->input->post(''user_staff_picture_id'',true);\n		$user_id = $this->input->post(''user_id'',true);\n		$this->staff_model->uset_hero($user_id);\n		echo $this->staff_model->update_user_staff_picture($user_staff_picture_id,array(''hero''=> 1));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(292, 86, 'reload_staff_edit_page_avatar', 'public', 'Reloads profile avatars whenever an update to profile image is made', '', '(via POST) user id', '[{"attr_name":"return:","attr_desc":"\\t Reloads staff profile avatars\\n\\t"}]', 'function reload_staff_edit_page_avatar()\n	{\n		$staff_user_id = $this->input->post(''user_id'',true);\n		echo modules::run(''staff/get_profile_picture'',$staff_user_id);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(293, 86, 'delete_photo', 'public', 'Delete staff photo', '', '(via POST) photo id', '', 'function delete_photo()\n	{\n		$photo_id = $this->input->post(''photo_id'',true);\n		$photo = $this->staff_model->get_user_staff_photo_by_photo_id($photo_id);\n		$path = ''./uploads/staff/profile/''.md5($photo->user_id);\n		$sub_folders = array(''thumbnail'',''thumbnail2'');\n		$file_name = $photo->name;\n		modules::run(''staff/delete_files'',$path,$file_name,$sub_folders);\n		if($this->staff_model->delete_photo($photo_id)){\n			echo ''success'';\n		}else{\n			echo ''failed'';\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(294, 86, 'update_ratings', 'public', 'Update rating', '', '(via POST) field name of the rating to populate back, user id, ajax reload container, new rating', '', 'function update_ratings()\n	{\n		$field_name = $this->input->post(''field_name'',true);\n		$user_id = $this->input->post(''user_id'',true);\n		$ajax_reload_container = $this->input->post(''ajax_reload_container'',true);\n		$selector = $this->input->post(''selector'',true);\n		$new_rating = $this->input->post(''new_rating'',true);\n		$data = array(''rating'' => $new_rating);\n		$this->staff_model->update_staff($user_id,$data);\n		\n		echo modules::run(''common/field_rating'', $field_name, $new_rating,$selector,$ajax_reload_container,$user_id,true,false);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(295, 86, 'delete_staff', 'public', 'Delete single staff', '', '(via POST) user id', '', 'function delete_staff()\n	{\n		$user_id = $this->input->post(''user_id'',true);\n		return $this->user_model->update_user($user_id,array(''status'' => 2));	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(296, 86, 'delete_staff', 'public', 'Delete multiple staff', '', '(via POST) user id', '', 'function delete_staff()\n	{\n		$user_id = $this->input->post(''user_id'',true);\n		return $this->user_model->update_user($user_id,array(''status'' => 2));	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(297, 86, 'update_rating_multi_staffs', 'public', 'Update rating for multiple staff', '', '(via POST) user id and new rating', '', 'function update_rating_multi_staffs()\n	{\n		$user_ids = $this->input->post(''user_staff_selected_user_id'',true);\n		$new_rating = $this->input->post(''multi_rating'',true);\n		return $this->staff_model->update_rating_multi_staffs(implode('','',$user_ids),$new_rating);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(298, 86, 'update_status_multi_staffs', 'public', 'Update status for multiple staff', '', '(via POST) user id and new stats', '', 'function update_status_multi_staffs()\n	{\n		$user_ids = $this->input->post(''user_staff_selected_user_id'',true);\n		$new_status = $this->input->post(''new_multi_status'',true);\n		return $this->user_model->update_status_multi_users(implode('','',$user_ids),$new_status);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(299, 86, 'send_email', 'private', 'Send email to a particular email vai send email modal window UI.', '', '(via POST)', '', 'function send_email()\n	{\n		$this->load->model(''setting/setting_model'');\n		$this->load->model(''email/email_template_model'');\n		//get company profile\n		$company = $this->setting_model->get_profile();	\n		//get post data\n		$email_body = $this->input->post(''email_body'');\n		$selected_user_ids = $this->input->post(''selected_user_ids'',true);\n		$email_template_id = $this->input->post(''email_template_select'',true);\n		\n		$email_subject = ''Staff Master '';\n		if($email_template_id){\n			$template_info = $this->email_template_model->get_template($email_template_id);\n			$email_subject = $template_info->email_subject;\n		}\n		\n		if($selected_user_ids){\n			//create obj parameters based on user and email template eg\n			$user_ids = json_decode($selected_user_ids);\n			foreach($user_ids as $user_id){\n				$email = $this->user_model->get_user_email_from_user_id($user_id);\n				$obj = modules::run(''email/get_email_obj'',$email_template_id,$user_id,$company);\n				if($email){\n					$email_data = array(\n								''to'' => $email,\n								''from'' => $company[''email_c_email''],\n								''from_text'' => ''Admin @ ''.$company[''email_c_name''],\n								''subject'' => $email_subject,\n								''message'' => modules::run(''email/format_template_body'',$email_body,$obj)\n							);\n					if(LIVE_SERVER){\n						modules::run(''email/send_email'',$email_data);\n					}else{\n						modules::run(''email/send_email_localhost'',$email_data);\n					}\n				}\n			}\n		}\n		$this->session->unset_userdata(''selected_user_ids'');\n		echo ''success'';\n	}\n	\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(300, 87, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Job\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(301, 87, 'search_staffs', 'private', 'function to load search staffs form', '', '(POST) array of search parameters', '[{"attr_name":"return:","attr_desc":"\\t (void) load search staffs form\\n\\t"}]', 'private function search_staffs()\n	{\n		$data[''weekdays''] = array(\n							array(''value'' => 1, ''label'' => ''Monday''),\n							array(''value'' => 2, ''label'' => ''Tuesday''),\n							array(''value'' => 3, ''label'' => ''Wednesday''),\n							array(''value'' => 4, ''label'' => ''Thursday''),\n							array(''value'' => 5, ''label'' => ''Friday''),\n							array(''value'' => 6, ''label'' => ''Saturday''),\n							array(''value'' => 7, ''label'' => ''Sunday'')\n							);\n		$data[''age_groups''] = array(\n							array(''value'' => ''0-17'', ''label'' => ''Under 18 Years Old''),\n							array(''value'' => ''18-25'', ''label'' => ''18 - 25 Years Old''),\n							array(''value'' => ''26-35'', ''label'' => ''26 - 35 Years Old''),\n							array(''value'' => ''36-100'', ''label'' => ''35+ Years Old'')\n							);\n		$this->load->view(''search_form'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(302, 87, 'field_select_status', 'public', 'custom select staff status field', '', '- $field_name', '[{"attr_name":"-","attr_desc":"\\t\\t\\t $field_value (optional)\\n\\t"},{"attr_name":"-","attr_desc":"\\t\\t\\t $size (optional)\\n\\t"},{"attr_name":"return:","attr_desc":"\\t custom select staff status field\\n\\t"}]', 'function field_select_status($field_name, $field_value=null, $size=null)\n	{\n		$array = array(\n			array(''value'' => STAFF_ACTIVE, ''label'' => ''Active''),\n			array(''value'' => STAFF_PENDING, ''label'' => ''Pending''),\n			array(''value'' => STAFF_INACTIVE, ''label'' => ''Inactive'')\n		);\n		\n		return modules::run(''common/field_select'', $array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(303, 87, 'check_staff_has_role', 'public', 'Checks if a staff has been assigned this role.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Returns is based on the return_bool value. If it is true or empty it return true or false, if it is false it \\n\\t"}]', 'function check_staff_has_role($staff_user_id,$role_id)\n	{\n		$has = $this->staff_model->staff_has_role($staff_user_id,$role_id);\n		if($has){\n			return true;\n		}else{\n			return false;\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(304, 87, 'check_staff_has_role', 'public', 'Checks if a staff has been assigned this role.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Returns is based on the return_bool value. If it is true or empty it return true or false, if it is false it \\n\\t"}]', 'function check_staff_has_role($staff_user_id,$role_id)\n	{\n		$has = $this->staff_model->staff_has_role($staff_user_id,$role_id);\n		if($has){\n			return true;\n		}else{\n			return false;\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(305, 87, 'get_availability_data', 'public', 'function to return value of availability of user based on day and time', '', '(via parameter) (int) user_id, day, hour', '[{"attr_name":"return:","attr_desc":"\\t (int) value of staff availability\\n\\t"}]', 'function get_availability_data($user_id, $day, $hour)\n	{\n		return $this->staff_model->get_availability_data($user_id, $day, $hour);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(306, 87, 'get_total_staffs', 'public', 'Returns total staff based on status. If status is not passed it returns the total staffs', '', 'string, int status', '[{"attr_name":"return:","attr_desc":"\\t (int) total staff\\n\\t"}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(307, 87, 'get_staff_custom_attribute', 'public', 'Get custom attribute of a staff member if it has been set', '', '(int) user id of staff, (string) the name of the custom attribute', '[{"attr_name":"return:","attr_desc":"\\t (int) total staff\\n\\t"}]', 'function get_staff_custom_attribute($staff_user_id,$attribute_name)\n	{\n		//first get attribute type\n		$has_multiple_value = modules::run(''formbuilder/has_multiple_value'',$attribute_name);\n		$staff_attribute = $this->staff_model->get_staff_custom_attribute($staff_user_id,$attribute_name);\n		$data[''has_multi''] = false;\n		if($staff_attribute){\n			if($has_multiple_value){\n				$data[''attributes''] = json_decode($staff_attribute->attributes);\n				$data[''staff_custom_attributes_id''] = $staff_attribute->staff_custom_attributes_id;\n				$data[''has_multi''] = true;\n			}else{\n				$data[''attributes''] = $staff_attribute->attributes;	\n				$data[''staff_custom_attributes_id''] = $staff_attribute->staff_custom_attributes_id;\n			}\n		}else{\n			$data[''attributes''] = '''';\n			$data[''staff_custom_attributes_id''] = '''';	\n		}\n		return $data;\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(308, 87, 'upload_custom_document', 'public', 'Uploads document that has been created using the custom attributes.', '', '(file) data is posted', '[{"attr_name":"return:","attr_desc":"\\t redirect to staff profile \\n\\t"}]', 'function upload_custom_document()\n	{\n		$user_staff_id = $this->input->post(''user_staff_id'',true);\n		$salt = ''custom_files''.$user_staff_id;\n		$file_path = ''./uploads/staff/custom_attributes'';\n		//create folder\n		$folder_name = $this->_create_folders(''./uploads/staff/custom_attributes'',$salt);\n		$this->load->library(''upload'');\n		foreach($_FILES as $key => $val){\n			if ($_FILES[$key][''name'']){\n			//image upload\n			$config[''upload_path''] = $file_path."/".$folder_name;	\n			$config[''allowed_types''] = ''gif|jpg|png|jpeg|doc|docx|pdf'';\n			$config[''max_size'']	= ''4096''; // 4 MB\n			$config[''max_width'']  = ''4000'';\n			$config[''max_height'']  = ''4000'';\n			$config[''overwrite''] = FALSE;\n			$config[''remove_space''] = TRUE;\n			\n			$this->upload->initialize($config);\n			if (!$this->upload->do_upload($key)) {\n					//image upload filed abort file upload\n					$data[''upload_error''] = $this->upload->display_errors();\n					$valid_upload = false;\n				}\n				else\n				{\n					$data = array(''upload_data'' => $this->upload->data());\n					$file_name = $data[''upload_data''][''file_name''];\n	\n					//update database\n					$custom_file = array(\n										''user_id'' => $user_staff_id,\n										''attribute_name'' => $key,\n										''attributes'' => $file_name,\n										''file_upload'' => ''yes''\n									);										\n					$this->staff_model->insert_staff_custom_attributes($custom_file);\n				}\n			}\n		}\n		$this->session->set_flashdata(''load_document_tab'',true);\n		redirect(''staff/edit/''.$user_staff_id);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(309, 87, 'delete_custom_document', 'public', 'Delete custom documents', '', 'int(staff custom attribute id)', '[{"attr_name":"return:","attr_desc":"\\t redirect to staff profile \\n\\t"}]', 'function delete_custom_document($staff_custom_attributes_id)\n	{\n		$file_details = $this->staff_model->get_staff_custom_attribute_by_id($staff_custom_attributes_id);\n		$file_name = $file_details->attributes;	\n		$staff_user_id = $file_details->user_id;\n		$folder =  md5(''custom_files''.$staff_user_id);\n		$this->_delete_document($folder,$file_name);\n		$this->staff_model->delete_staff_custom_attributes_by_id($staff_custom_attributes_id);\n		$this->session->set_flashdata(''load_document_tab'',true);\n		redirect(''staff/edit/''.$staff_user_id);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(310, 87, '_create_folders', 'private', 'Creates folder for documents', '', '(string) path of the folder, (string) salt, (array) array of subfolders if applicable', '[{"attr_name":"return:","attr_desc":"\\t returns the folder name to the control that called this function\\n\\t"}]', 'function _create_folders($path,$salt,$subfolders = null)\n	{	\n		//create staff specific folders\n		if($path && $salt){\n			$newfolder = md5($salt);\n			$dir = $path."/".$newfolder;\n			if(!is_dir($dir))\n			{\n			  mkdir($dir);\n			  chmod($dir,0777);\n			  $fp = fopen($dir.''/index.html'', ''w'');\n			  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n			  fclose($fp);\n			}\n			\n			$sub_dir = '''';\n			if($subfolders){\n				foreach($subfolders as $folder){\n					$sub_dir = $dir.''/''.$folder;	\n					if(!is_dir($sub_dir))\n					{\n					  mkdir($sub_dir);\n					  chmod($sub_dir,0777);\n					  $fp = fopen($sub_dir.''/index.html'', ''w'');\n					  fwrite($fp, ''<html><head>Permission Denied</head><body><h3>Permission denied</h3></body></html>'');\n					  fclose($fp);\n					}		\n				}\n			}\n			return $newfolder;\n		}\n		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(311, 87, '_delete_document', 'private', 'Deletes custom documents', '', '(string) folder name, (string) file name', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function _delete_document($folder,$document_name)\n	{\n		if($document_name && $folder){\n			$main_path = "./uploads/staff/custom_attributes/".$folder;\n			//delete doc\n			if(file_exists($main_path.''/''.$document_name)){\n				unlink($main_path.''/''.$document_name);\n			}\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(312, 87, '', 'public', 'Returns the gender of the staff', '', '(int) user id', '[{"attr_name":"name:get_staff_gender","attr_desc":"\\t\\n\\t"},{"attr_name":"returns","attr_desc":"\\t (string) m or f\\n\\t"}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(313, 87, 'delete_files', 'public', 'Deletes file from server', '', '(string) path to the main folder, (string) name of the file, (array) sub folder names', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function delete_files($path,$file_name,$sub_folders = array())\n	{\n		if(file_exists($path.''/''.$file_name)){\n			unlink($path.''/''.$file_name);\n		}\n		if($sub_folders){\n			foreach($sub_folders as $folder){\n				if(file_exists($path.''/''.$folder.''/''.$file_name)){\n					unlink($path.''/''.$folder.''/''.$file_name);\n				}	\n			}\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(314, 87, 'custom_attributes_for_staff_profile', 'public', 'Shows the existing form for custom attributes in staff profile.', '', '(int) user id of staff', '[{"attr_name":"return","attr_desc":"\\t Loads existing form elements for custom attributes in staff profile.\\n\\t"}]', 'function custom_attributes_for_staff_profile($staff_user_id)\n	{\n		$data[''existing_elements''] = $this->formbuilder_model->get_form_elements(true);\n		$data[''user_id''] = $staff_user_id;\n		$this->load->view(''custom_attributes_for_staff_profile'',isset($data) ? $data : NULL);	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(315, 87, 'custom_file_uploads_for_staff_profile', 'public', 'Shows the existing form for custom attributes in staff profile.', '', '(int) user id of staff', '[{"attr_name":"return","attr_desc":"\\t Loads existing file upload form elements for custom attributes in staff profile.\\n\\t"}]', 'function custom_file_uploads_for_staff_profile($staff_user_id)\n	{\n		$data[''existing_elements''] = $this->formbuilder_model->get_form_elements(false);\n		$data[''user_id''] = $staff_user_id;\n		$this->load->view(''custom_upload_fields_for_staff_profile'',isset($data) ? $data : NULL);	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(316, 87, 'custom_attributes', 'public', 'Shows the existing form for custom attributes.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Loads existing form elements for custom attributes.\\n\\t"}]', 'function custom_attributes_for_staff_profile($staff_user_id)\n	{\n		$data[''existing_elements''] = $this->formbuilder_model->get_form_elements(true);\n		$data[''user_id''] = $staff_user_id;\n		$this->load->view(''custom_attributes_for_staff_profile'',isset($data) ? $data : NULL);	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00');
INSERT INTO `modules_functions` (`id`, `modules_mvc_id`, `name`, `access`, `description`, `comment`, `params`, `attributes`, `code`, `created`, `modified`) VALUES
(317, 87, 'get_custom_attrs', 'public', 'This function gets all the posted value from the search staff page then filters and returns only the custom attributes search parameters to the calling method.', '', '(via POST) gets posted data from the search staff page', '[{"attr_name":"return","attr_desc":"\\t Returns the custom attributes only values from all the posted data \\n\\t"}]', 'function get_custom_attrs($search_params)\n	{\n		$custom_attrs = array();\n		$normal_prefix = ''custom_attrs_'';\n		$file_prefix = ''custom_file_'';\n		if($search_params){\n			foreach($search_params as $key => $val){\n				if($val){\n					if(substr($key,0,strlen($normal_prefix)) == $normal_prefix){\n						$new_key = substr($key, strlen($normal_prefix));\n						$custom_attrs[''normal_elements''][$new_key] = $val;	\n					}\n					if(substr($key,0,strlen($file_prefix)) == $file_prefix){\n						$new_key = substr($key, strlen($file_prefix));\n						$custom_attrs[''file_uploads''][$new_key] = $val;	\n					}\n				}\n			}	\n		}\n		return $custom_attrs;\n	\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(318, 87, 'profile_image', 'public', 'this functio to get single image of staff with url on the image', '', '(via GET) get the value of user_id', '[{"attr_name":"return","attr_desc":"\\t Returns the image of staff profile with url (a tag)\\n\\t"}]', 'function profile_image($user_id=NULL)\n	{		\n		\n		$staff = $this->staff_model->get_staff($user_id);\n		$photo = $this->staff_model->get_hero($user_id);\n		$data[''staff''] = $staff;\n		$data[''photo''] = $photo;\n\n		$this->load->view(''staff_picture'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(319, 87, 'profile_image', 'public', 'this functio to get single image of staff without having url on the image', '', '(via GET) get the value of user_id', '[{"attr_name":"return","attr_desc":"\\t Returns the image of staff profile\\n\\t"}]', 'function profile_image($user_id=NULL)\n	{		\n		\n		$staff = $this->staff_model->get_staff($user_id);\n		$photo = $this->staff_model->get_hero($user_id);\n		$data[''staff''] = $staff;\n		$data[''photo''] = $photo;\n\n		$this->load->view(''staff_picture'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(320, 87, 'get_staff_groups', 'public', 'Returns group id that an staff has been assigned to', '', '([int] user id)', '[{"attr_name":"return","attr_desc":"\\t Returns an array with group id if a staff member has been assigned to a group or false if the staff has not been assigned to any group\\n\\t"}]', 'function get_staff_groups($user_id)\n	{\n		return $this->staff_modal->get_staff_groups($user_id);\n	}\n	\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(321, 88, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Profile\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(322, 89, 'get_total_staffs_count', 'public', 'Returns total staff based on status. If status is not passed it returns the total staffs', '', 'string, int status', '[{"attr_name":"return:","attr_desc":"\\t (int) total staff count\\n\\t"}]', 'function get_total_staffs_count($status='''')\n	{\n		$sql = ''select count(staff_id) as total from user_staffs'';\n		if($status){\n			$sql .= '''';	\n		}\n		$total = $this->db->query($sql)->row();\n		if($total){\n			return $total->total;	\n		}\n		return 0;\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(323, 89, 'staff_has_role', 'public', 'Checks if a staff has been assigned this role.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Returns true if this role has been assigned to staff and vice versa\\n\\t"}]', 'function staff_has_role($staff_user_id,$role_id)\n	{\n		$query = $this->db->where(''user_id'',$staff_user_id)->where(''attribute_role_id'',$role_id)->get(''staff_roles'')->row();\n		if($query){\n			return true;	\n		}\n		return false;\n		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(324, 89, 'get_role_frequency', 'public', 'This function returns the frequency of the role. It returns the number of times this role has been assigned to staffs.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Return the number of times this roles has been assigned to staffs.\\n\\t"}]', 'function get_role_frequency($role_id)\n	{\n		$sql = "SELECT count(staff_roles_id) as total FROM `staff_roles` WHERE `attribute_role_id` = ".$role_id;\n		$total = $this->db->query($sql)->row_array();\n		if($total){\n			return $total[''total''];	\n		}\n		return 0;\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(325, 89, 'update_staff_role', 'public', 'Update staff role. Adds or deletes role based on user input', '', '(int) role_id, (int) user_staff_id', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function update_staff_role($user_staff_id,$role_id)\n	{\n		$staff_has_role = $this->staff_has_role($user_staff_id,$role_id);\n		if($staff_has_role){\n			return $this->delete_staff_role($user_staff_id,$role_id);\n		}else{\n			return $this->add_staff_role($user_staff_id,$role_id);\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(326, 89, 'add_staff_role', 'public', 'Assign role to a staff', '', '(int) role_id, (int) user_staff_id', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function add_staff_role($user_staff_id,$role_id)\n	{\n		$data = array(\n					''user_id'' => $user_staff_id,\n					''attribute_role_id'' => $role_id\n				);\n		$this->db->insert(''staff_roles'', $data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(327, 89, 'delete_staff_role', 'public', 'Delete role from the staff', '', '(int) role_id, (int) user_staff_id', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function delete_staff_role($user_staff_id,$role_id)\n	{\n		$sql = "delete from staff_roles where user_id = ".$user_staff_id." and attribute_role_id = ".$role_id;\n		return $this->db->query($sql);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(328, 89, 'staff_has_role', 'public', 'Checks if a staff has been assigned this role.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Returns true if this role has been assigned to staff and vice versa\\n\\t"}]', 'function staff_has_role($staff_user_id,$role_id)\n	{\n		$query = $this->db->where(''user_id'',$staff_user_id)->where(''attribute_role_id'',$role_id)->get(''staff_roles'')->row();\n		if($query){\n			return true;	\n		}\n		return false;\n		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(329, 89, 'update_staff_group', 'public', 'Update staff group. Adds or deletes group based on user input', '', '(int) group_id, (int) user_staff_id', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function update_staff_group($user_staff_id,$group_id)\n	{\n		$staff_has_group = $this->staff_has_group($user_staff_id,$group_id);\n		if($staff_has_group){\n			return $this->delete_staff_group($user_staff_id,$group_id);\n		}else{\n			return $this->add_staff_group($user_staff_id,$group_id);\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(330, 89, 'add_staff_group', 'public', 'Assign group to a staff', '', '(int) group_id, (int) user_staff_id', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function add_staff_group($user_staff_id,$group_id)\n	{\n		$data = array(\n					''user_id'' => $user_staff_id,\n					''attribute_group_id'' => $group_id\n				);\n		$this->db->insert(''staff_groups'', $data);\n		return $this->db->insert_id();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(331, 89, 'delete_staff_group', 'public', 'Delete group from the staff', '', '(int) group_id, (int) user_staff_id', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function delete_staff_group($user_staff_id,$group_id)\n	{\n		$sql = "delete from staff_groups where user_id = ".$user_staff_id." and attribute_group_id = ".$group_id;\n		return $this->db->query($sql);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(332, 89, 'delete_staff_custom_attributes', 'public', 'Delete custom attributes of a staff', '', '(int) user id of staff', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function delete_staff_custom_attributes($user_staff_id)\n	{\n		$sql = "delete from staff_custom_attributes where file_upload = ''no'' and user_id = ".$user_staff_id;\n		return $this->db->query($sql);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(333, 89, 'insert_staff_custom_attributes', 'public', 'Add custom attributes of staff.', '', '(int) user id of staff', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function insert_staff_custom_attributes($data)\n	{\n		$this->db->insert(''staff_custom_attributes'',$data);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(334, 89, 'get_staff_custom_attribute', 'public', 'Get staff customa attribute from user id and attribute name', '', 'int(user id), (string) attribute name', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function get_staff_custom_attribute($user_id,$attribute_name)\n	{\n		return $this->db->where(''user_id'',$user_id)->where(''attribute_name'',$attribute_name)->get(''staff_custom_attributes'')->row();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(335, 89, 'delete_staff_custom_attributes_by_id', 'public', 'Delete custom attributes of a staff by delete_staff_custom_attributes_by_id', '', '(int) delete_staff_custom_attributes_by_id', '[{"attr_name":"return:","attr_desc":"\\t null\\n\\t"}]', 'function delete_staff_custom_attributes_by_id($staff_custom_attributes_id)\n	{\n		$sql = "delete from staff_custom_attributes where staff_custom_attributes_id = ".$staff_custom_attributes_id;\n		return $this->db->query($sql);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(336, 89, 'uset_hero', 'public', 'Unset hero image', '', '(int) user id', '', 'function uset_hero($user_id)\n	{\n		$this->db->where(''user_id'',$user_id)->update(''user_staff_picture'',array(''hero'' => 0));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(337, 89, 'update_rating_multi_staffs', 'public', 'Update rating of multiple staff at once', '', '(int) user ids of staff and new rating', '', 'function update_rating_multi_staffs($user_ids,$new_rating)\n	{\n		$sql = "UPDATE user_staffs SET rating = ".$new_rating." WHERE user_id IN (".$user_ids.")";\n		return $this->db->query($sql);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(338, 89, 'staff_has_role', 'public', 'Checks if a staff has been assigned this role.', '', 'null', '[{"attr_name":"return","attr_desc":"\\t Returns true if this role has been assigned to staff and vice versa\\n\\t"}]', 'function staff_has_role($staff_user_id,$role_id)\n	{\n		$query = $this->db->where(''user_id'',$staff_user_id)->where(''attribute_role_id'',$role_id)->get(''staff_roles'')->row();\n		if($query){\n			return true;	\n		}\n		return false;\n		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(339, 90, '', '', '', '', '', '[{"attr_name":"module:","attr_desc":"\\t Timesheet\\n "},{"attr_name":"controller:","attr_desc":"\\t Ajax\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(340, 90, 'search_timesheets', 'public', 'ajax function to search timesheets', '', '(POST)', '[{"attr_name":"return:","attr_desc":"\\t (html) view of list of timesheets\\n\\t"}]', 'function search_timesheets() {\n		$params = $this->input->post();\n		$data[''timesheets''] = $this->timesheet_model->search_timesheets($params);\n		$this->load->view(''table_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(341, 90, 'batch_timesheet', 'public', 'ajax function to batch a timesheet', '', '(POST) timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function batch_timesheet() {\n		$timesheet_id = $this->input->post(''timesheet_id'');\n		modules::run(''timesheet/update_timesheet_hour_rate'', $timesheet_id);\n		$this->timesheet_model->update_timesheet($timesheet_id, array(''status'' => TIMESHEET_BATCHED));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(342, 90, 'details', 'public', 'ajax function to load details modal view of a timesheet', '', '$timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) details modal view\\n\\t"}]', 'function details($timesheet_id) {\n		$data[''timesheet''] = $this->timesheet_model->get_timesheet($timesheet_id);\n		$this->load->view(''details_modal_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(343, 90, 'delete_timesheet', 'public', 'ajax function to delete a timesheet', '', '(POST) timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function delete_timesheet() {\n		$timesheet_id = $this->input->post(''timesheet_id'');\n		# First get the timesheet\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		\n		# Delete the timesheet\n		$this->timesheet_model->delete_timesheet($timesheet_id);\n		\n		# Unlock the shift\n		$this->load->model(''job/job_shift_model'');\n		$this->job_shift_model->update_job_shift($timesheet[''shift_id''], array(''status'' => SHIFT_CONFIRMED));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(344, 90, 'update_timesheet_start_time', 'public', 'ajax function to update timesheet start time (inline edit)', '', '(POST) pk, value', '[{"attr_name":"return:","attr_desc":"\\t (JSON) {status: boolean, value: $new_start_time}\\n\\t"}]', 'function update_timesheet_start_time() {\n		$timesheet_id = $this->input->post(''pk'');\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$new_start_time = strtotime($this->input->post(''value'') . '':00'');\n		if ($new_start_time >= $timesheet[''finish_time'']) {\n			$this->output->set_status_header(''400'');\n			echo ''Start time cannot be greater than finish time'';\n		} else {\n			$this->timesheet_model->update_timesheet($timesheet_id, array(''start_time'' => $new_start_time));\n			echo json_encode(array(''status'' => ''success'', ''value'' => $new_start_time));\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(345, 90, 'update_timesheet_finish_time', 'public', 'ajax function to update timesheet finish time (inline edit)', '', '(POST) pk, value', '[{"attr_name":"return:","attr_desc":"\\t (JSON) {status: boolean, value: $new_finish_time}\\n\\t"}]', 'function update_timesheet_finish_time() {\n		$timesheet_id = $this->input->post(''pk'');\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$new_finish_time = strtotime($this->input->post(''value'') . '':00'');\n		if ($new_finish_time <= $timesheet[''start_time'']) {\n			$this->output->set_status_header(''400'');\n			echo ''Finish time cannot be less than start time'';\n		} else {\n			$this->timesheet_model->update_timesheet($timesheet_id, array(''finish_time'' => $new_finish_time));\n			echo json_encode(array(''status'' => ''success'', ''value'' => $new_finish_time));\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(346, 90, 'update_timesheet_payrate', 'public', 'ajax function to update timesheet pay rate', '', '(POST) pk, value', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function update_timesheet_payrate() {\n		$timesheet_id = $this->input->post(''pk'');\n		$this->timesheet_model->update_timesheet($timesheet_id, array(''payrate_id'' => $this->input->post(''value'')));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(347, 90, 'refresh_timesheet', 'public', 'ajax function to reload timesheet', '', '(POST) timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) tr view of one timesheet\\n\\t"}]', 'function refresh_timesheet() {\n		$timesheet_id = $this->input->post(''timesheet_id'');\n		echo modules::run(''timesheet/row_timesheet'', $timesheet_id);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(348, 90, 'load_ts_breaks', 'public', 'ajax function to load break edit view', '', '(POST) pk - timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) edit view of break\\n\\t"}]', 'function load_ts_breaks() {\n		$timesheet_id = $this->input->post(''pk'');\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$data[''breaks''] = json_decode($timesheet[''break_time'']);\n		$data[''timesheet_id''] = $timesheet_id;\n		$data[''timesheet''] = $timesheet;\n		$this->load->view(''edit/break/list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(349, 90, 'add_ts_break', 'public', 'ajax function to load add break form view', '', '(POST) pk - timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) add form view\\n\\t"}]', 'function add_ts_break() {\n		$timesheet_id = $this->input->post(''pk'');\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$data[''timesheet''] = $timesheet;\n		$this->load->view(''edit/break/add_form_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(350, 90, 'update_ts_breaks', 'public', 'ajax function to update breaks', '', '(POST) break_length (array of minutes), break_start_at (array of datetime)', '[{"attr_name":"return:","attr_desc":"\\t (JSON) {ok: boolean}\\n\\t"}]', 'function update_ts_breaks() {\n		$length = $this->input->post(''break_length'');\n		$start_at = $this->input->post(''break_start_at'');\n		$timesheet = $this->timesheet_model->get_timesheet($this->input->post(''timesheet_id''));\n		\n		$breaks = array();\n		foreach($length as $index => $value) {\n			if ($value > 0) {\n				$break_time = array(\n					''length'' => $value * 60,\n					''start_at'' => strtotime($start_at[$index])\n				);\n				\n				if ($break_time[''start_at''] <= $timesheet[''start_time''] || $break_time[''start_at''] >= $timesheet[''finish_time'']) {\n					echo json_encode(array(''ok'' => false, ''number'' => $index));\n					return;\n				}\n				$breaks[] = $break_time;\n			}\n		}\n		\n		if ($this->timesheet_model->update_timesheet($timesheet[''timesheet_id''], array(''break_time'' => json_encode($breaks)))) {\n			echo json_encode(array(''ok'' => true));\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(351, 90, 'load_ts_staff', 'public', 'ajax function to load search staff form', '', '(POST) pk - timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) view of search staff form\\n\\t"}]', 'function load_ts_staff() {\n		$timesheet_id = $this->input->post(''pk'');\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$data[''timesheet''] = $timesheet;\n		$data[''staff''] = modules::run(''staff/get_staff'', $timesheet[''staff_id'']);\n		$this->load->view(''edit/staff/search_form_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(352, 90, 'search_staff_for_ts', 'public', 'ajax function to search staff', '', '(POST) query', '[{"attr_name":"return:","attr_desc":"\\t (html) search results view\\n\\t"}]', 'function search_staff_for_ts() {\n		$query = $this->input->post(''query'');\n		$this->load->model(''staff/staff_model'');\n		$data[''staffs''] = $this->staff_model->search_staffs(array(''keyword'' => $query, ''limit'' => 6));\n		$this->load->view(''edit/staff/search_results_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(353, 90, 'update_ts_staff', 'public', 'ajax function to update staff of the timesheet', '', '(POST)', '[{"attr_name":"return:","attr_desc":"\\t (JSON) {ok:boolean, msg: string}\\n\\t"}]', 'function update_ts_staff() {\n		$data = $this->input->post();\n		$update_ts_data = array();\n		if ($data[''ts_staff'']) {\n			$staff = modules::run(''staff/get_staff_by_name'', $data[''ts_staff'']);\n			\n			if ($staff) {\n				$this->timesheet_model->update_timesheet($data[''timesheet_id''], array(''staff_id'' => $data[''ts_staff_id'']));\n				echo json_encode(array(''ok'' => true));\n			}\n			else {\n				echo json_encode(array(''ok'' => false, ''msg'' => ''Staff not found''));\n				return;\n			}\n		}\n		else {\n			echo json_encode(array(''ok'' => false, ''msg'' => ''This field cannot be empty''));\n			return;\n		}		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(354, 90, 'load_expenses_modal', 'public', 'ajax function to open modal of timesheet expenses', '', '(int) $timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) modal view of expense\\n\\t"}]', 'function load_expenses_modal($timesheet_id) {\n		$data[''timesheet_id''] = $timesheet_id;\n		$this->load->view(''edit/expense/modal_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(355, 90, 'list_expenses', 'public', 'ajax function to list expenses of a timesheet', '', '(POST) timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) list view of expense items\\n\\t"}]', 'function list_expenses() {\n		$timesheet_id = $this->input->post(''timesheet_id'');\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		if($timesheet) {\n			$data[''expenses''] = unserialize($timesheet[''expenses'']);\n		}\n		$data[''timesheet_id''] = $timesheet_id;\n		$this->load->view(''edit/expense/table_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(356, 90, 'add_expense', 'public', 'ajax function to add an expense item of a timesheet', '', '(POST) description, staff_cost, client_cost, tax, timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (JSON) {ok:(boolean)}\\n\\t"}]', 'function add_expense() {\n		$data = $this->input->post();\n		if ($data[''description''] == '''') {\n			echo json_encode(array(''ok'' => false, ''error_id'' => ''description''));\n			return;\n		}\n		if (!is_numeric($data[''staff_cost''])) {\n			echo json_encode(array(''ok'' => false, ''error_id'' => ''staff_cost''));\n			return;\n		}\n		if (!is_numeric($data[''client_cost''])) {\n			echo json_encode(array(''ok'' => false, ''error_id'' => ''client_cost''));\n			return;\n		}\n		$timesheet = $this->timesheet_model->get_timesheet($data[''timesheet_id'']);\n		$expenses = $timesheet[''expenses''];\n		if ($expenses == '''') {\n			$expenses = array();\n		} else {\n			$expenses = unserialize($expenses);\n		}\n		array_push( $expenses, array(\n			''description'' => $data[''description''],\n			''staff_cost'' => $data[''staff_cost''],\n			''client_cost'' => $data[''client_cost''],\n			''tax'' => $data[''tax'']\n		));\n		$updated = $this->timesheet_model->update_timesheet($data[''timesheet_id''], array(\n			''expenses'' => serialize($expenses)\n		));\n		if ($updated) {\n			echo json_encode(array(''ok'' => true));\n		}\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(357, 90, 'delete_expense', 'public', 'ajax function to delete an expense item of a timesheet', '', '(POST) 	timesheet_id, i (index of the expense item)', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function delete_expense() {\n		$timesheet_id = $this->input->post(''timesheet_id'');\n		$index = $this->input->post(''i'');\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$expenses = unserialize($timesheet[''expenses'']);\n		$array = array();\n		if ($expenses) {\n			$i = 0;\n			foreach($expenses as $expense) {\n				if ($i!=$index) {\n					$array[] = $expense;\n				}\n				$i++;\n			}\n		}\n		$this->timesheet_model->update_timesheet($timesheet_id, array(\n			''expenses'' => serialize($array)\n		));\n	}\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(358, 91, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Job\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(359, 92, '', '', '', '', '', '[{"attr_name":"module:","attr_desc":"\\t Timesheet\\n "},{"attr_name":"controller:","attr_desc":"\\t Timesheet\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(360, 92, 'main_view', 'public', 'load main view of timesheet module (landing page)', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) view of the timesheet module landing page\\n\\t"}]', 'function main_view() {\n		$this->load->view(''main_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(361, 92, 'search_form', 'public', 'load search timesheets form view', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) view of search timesheets form\\n\\t"}]', 'function search_form() {\n		$this->load->view(''search_form_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(362, 92, 'row_timesheet', 'public', 'load row view (tr) of one timesheet', '', '$timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) tr view of one timesheet\\n\\t"}]', 'function row_timesheet($timesheet_id) {\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$data[''client''] = modules::run(''client/get_client'', $timesheet[''client_id'']);\n		$data[''staff''] = modules::run(''staff/get_staff'', $timesheet[''staff_id'']);\n		$data[''timesheet''] = $timesheet;\n		$data[''shift''] = $this->job_shift_model->get_job_shift($timesheet[''shift_id'']);\n		$data[''job''] = modules::run(''job/get_job'', $timesheet[''job_id'']);\n		$this->load->view(''row_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(363, 92, 'update_timesheet_hour_rate', 'public', 'calculate and update client/staff cost of a timesheet based on hours & pay rate', '', '$timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function update_timesheet_hour_rate($timesheet_id) {\n		$timesheet = $this->timesheet_model->get_timesheet($timesheet_id);\n		$payrate_id = $timesheet[''payrate_id''];\n		$start_time = $timesheet[''start_time''];\n		$finish_time = $timesheet[''finish_time''];\n		$total_mins = 0;\n		$total_amount_staff = 0;\n		$total_amount_client = 0;\n		for($i=$start_time; $i < $finish_time; $i = $i + 60*15) { # Every 15 minutes\n			$day = date(''N'', $i); # Get day of the week (1: for monday, 7 for sunday)\n			$hour = date(''G'', $i); # Get hour of the day (0 - 23)\n			\n			# Amount paid calculated by 15 minute\n			\n			$total_amount_staff += $this->payrate_model->get_payrate_data($payrate_id, 0, $day, $hour)/4;\n			$total_amount_client += $this->payrate_model->get_payrate_data($payrate_id, 1, $day, $hour)/4;\n			$total_mins = $total_mins + 15;\n		}\n		\n		# Deduct the break\n		\n		$breaks = json_decode($timesheet[''break_time'']);\n		if (count($breaks) > 0) {\n			foreach($breaks as $break)\n			{\n				$length = $break->length;\n				$start_at = $break->start_at;\n				for($i=0; $i < $length; $i = $i + 60*15) { # Every 15 minute\n					$start_at = $start_at + $i;\n					$day = date(''N'', $i);\n					$hour = date(''G'', $i);\n					$total_amount_staff -= $this->payrate_model->get_payrate_data($payrate_id, 0, $day, $hour)/4;\n					$total_amount_client -= $this->payrate_model->get_payrate_data($payrate_id, 1, $day, $hour)/4;\n					$total_mins = $total_mins - 15;\n				}\n			}\n		}\n		\n		return $this->timesheet_model->update_timesheet($timesheet_id, array(\n			''total_minutes'' => $total_mins,\n			''total_amount_staff'' => $total_amount_staff,\n			''total_amount_client'' => $total_amount_client\n		));\n		\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(364, 92, 'field_select_status', 'public', 'custom field select timesheet status', '', '$field_name, $field_value (optional), $size (optional)', '[{"attr_name":"return:","attr_desc":"\\t (html) custom field select\\n\\t"}]', 'function field_select_status($field_name, $field_value=null, $size=null) {\n		$array = array(\n			array(''value'' => TIMESHEET_PENDING, ''label'' => ''Pending''),\n			array(''value'' => TIMESHEET_SUBMITTED, ''label'' => ''Submitted''),\n			array(''value'' => TIMESHEET_APPROVED, ''label'' => ''Approved'')\n		);\n		return modules::run(''common/field_select'', $array, $field_name, $field_value, $size);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(365, 92, 'menu_dropdown_actions', 'public', 'generate the dropdown menu of actions applied to timesheets', '', '$id, $label', '[{"attr_name":"return:","attr_desc":"\\t (html) dropdown menu of actions applied to timesheets\\n\\t"}]', 'function menu_dropdown_actions($id, $label) {\n		$data = array(\n			array(''value'' => ''batch'', ''label'' => ''<i class="fa fa-share-square-o"></i> Batch Selected''),\n			array(''value'' => ''revert'', ''label'' => ''<i class="fa fa-times"></i> Delete Selected'')\n		);\n		return modules::run(''common/menu_dropdown'', $data, $id, $label);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(366, 92, 'status_to_class', 'public', 'convert timesheet status to css class', '', '$status', '[{"attr_name":"return:","attr_desc":"\\t class_name\\n\\t"}]', 'function status_to_class($status) {\n		$class = '''';\n		switch($status) {\n			case TIMESHEET_SUBMITTED: $class = ''warning'';\n				break;\n			case TIMESHEET_APPROVED: $class = ''success'';\n				break;\n			case SHIFT_UNASSIGNED:\n			default: $class = '''';\n				break;\n		}\n		return $class;\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(367, 92, 'add_expense_form', 'public', 'load add expense form view', '', '$timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (html) add expense form view\\n\\t"}]', 'function add_expense_form($timesheet_id) {\n		$data[''timesheet_id''] = $timesheet_id;\n		$this->load->view(''edit/expense/add_form'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(368, 93, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Job\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(369, 94, 'get_timesheet', 'public', 'get timesheet by id', '', '$timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (object) timesheet\\n\\t"}]', 'function get_timesheet($timesheet_id) {\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		$query = $this->db->get(''job_shift_timesheets'');\n		return $query->first_row(''array'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(370, 94, 'delete_timesheet', 'public', 'delete timesheet by id', '', '$timesheet_id', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function delete_timesheet($timesheet_id) {\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		return $this->db->delete(''job_shift_timesheets'');\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(371, 94, 'update_timesheet', 'public', 'update timesheet by id', '', '$timesheet_id, $data (array)', '[{"attr_name":"return:","attr_desc":"\\t (boolean)\\n\\t"}]', 'function update_timesheet($timesheet_id, $data) {\n		$this->db->where(''timesheet_id'', $timesheet_id);\n		return $this->db->update(''job_shift_timesheets'', $data);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(372, 94, 'search_timesheets', 'public', 'search timesheets by parameters', '', '$params (array of searching parameters)', '[{"attr_name":"return:","attr_desc":"\\t (array) of timesheets\\n\\t"}]', 'function search_timesheets($params) {\n		$sql = "SELECT t.*, \n					j.name as job_name, j.client_id, \n					v.name as venue_name, \n					r.name as role_name\n				FROM `job_shift_timesheets` t\n					LEFT JOIN `attribute_venues` v ON v.venue_id = t.venue_id\n					LEFT JOIN `attribute_roles` r ON r.role_id = t.role_id\n					LEFT JOIN `jobs` j ON j.job_id = t.job_id\n				WHERE t.status < " . TIMESHEET_BATCHED;\n		if (isset($params[''client_id'']) && $params[''client_id''] != '''') {\n			$sql .= " AND j.client_id = " . $params[''client_id''];\n		}\n		if (isset($params[''job_name'']) && $params[''job_name''] != '''') {\n			$sql .= " AND j.name LIKE ''%" . $params[''job_name''] . "%''";\n		}\n		if (isset($params[''status'']) && $params[''status''] != '''') {\n			$sql .= " AND t.status = " . $params[''status''];\n		}\n		if (isset($params[''role_id'']) && $params[''role_id''] != '''') {\n			$sql .= " AND t.role_id = " . $params[''role_id''];\n		}\n		if (isset($params[''date_from'']) && $params[''date_from''] != '''') {\n			$sql .= " AND t.start_time >= " . strtotime($params[''date_from'']);\n		}\n		if (isset($params[''date_to'']) && $params[''date_to''] != '''') {\n			$sql .= " AND t.finish_time <= " . strtotime($params[''date_to''] . '' 23:59:59'');\n		}\n		if (isset($params[''payrate_id'']) && $params[''payrate_id''] != '''') {\n			$sql .= " AND t.payrate_id = " . $params[''payrate_id''];\n		}\n		if (isset($params[''sort_data''])) {\n			$sort_params = json_decode($params[''sort_data'']);\n			if (isset($sort_params->sort_by) && isset($sort_params->sort_order)) {\n				$sql .= " ORDER BY $sort_params->sort_by $sort_params->sort_order";\n			}\n		}\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}\n	\n	# Deprecated', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(373, 96, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(374, 97, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(375, 98, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(376, 99, 'delete_multi_users', 'public', 'Delete multiple staffs', '', '(int) user ids of staff', '', 'function delete_multi_users($user_ids)\n	{\n		$sql = "UPDATE users SET status = 2 WHERE user_id IN (".$user_ids.")";\n		return $this->db->query($sql);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(377, 99, 'update_rating_multi_staffs', 'public', 'Update multiple users''s status at once', '', '(int) user ids of user and new status', '', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(378, 99, 'get_user_email_from_user_id', 'public', 'Get user email address from user id', '', '(int) user id', '', 'function get_user_email_from_user_id($user_id)\n	{\n		$sql = "SELECT email_address from users WHERE user_id = ".$user_id;\n		$user = $this->db->query($sql)->row();\n		if($user){\n			return $user->email_address;	\n		}\n		return false;\n	}\n	\n	\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(379, 100, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Product\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(380, 102, '', '', '', '', '', '[{"attr_name":"Controller:","attr_desc":"  Work\\/Ajax\\n "},{"attr_name":"author:","attr_desc":"  namnd86@gmail.com\\n "}]', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(381, 102, 'load_works', 'public', 'ajax function to load list of works group by date', '', '(void)', '[{"attr_name":"return:","attr_desc":"\\t (html) list view of works group by date\\n\\t"}]', 'function load_works() {\n		$active_month = $this->session->userdata(''active_month_work'');\n		$data[''work_days''] = $this->work_model->get_work_days(date(''Y-m'', $active_month));\n		$this->load->view(''staff/days_list_view'', isset($data) ? $data : NULL);\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(382, 102, 'load_month_works', 'public', 'ajax function to set the active month and then reload works', '', '(POST) ts (timestamp)', '[{"attr_name":"return:","attr_desc":"\\t (void)\\n\\t"}]', 'function load_month_works() {\n		$this->session->set_userdata(''active_month_work'', $this->input->post(''ts''));\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(383, 103, 'count_applied_shifts', 'public', 'count total shifts applied in a day', '', '(string) $date (YYYY-MM-DD)', '[{"attr_name":"return:","attr_desc":"\\t (int) total shifts applied\\n\\t"}]', 'function count_applied_shifts($date) {\n		return $this->work_model->count_applied_shifts($date);\n	}\n	\n}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(384, 104, 'get_work_months', 'public', 'get list of month with available job (shift)', '', '$active_month (YYYY-MM)', '[{"attr_name":"return:","attr_desc":"\\t array of timestamp\\n\\t"}]', 'function get_work_months($active_month) {\n		$sql = "SELECT `job_date`,\n					YEAR(`job_date`) AS `year`, \n					MONTH(`job_date`) AS `month` \n				FROM `job_shifts` \n					WHERE `job_date` >= ''" . $active_month . "'' \n					AND `status` IN (" . SHIFT_REJECTED . "," . SHIFT_UNASSIGNED . "," . SHIFT_UNCONFIRMED . ")\n					GROUP BY `year`, `month`";\n		$query = $this->db->query($sql);\n		$result = $query->result_array();\n		$out = array();\n		foreach($result as $r) {\n			$out[] = strtotime($r[''year''] . ''-'' . $r[''month'']);\n		}\n		return $out;\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(385, 104, 'get_work_days', 'public', 'get list of available shifts group by date in a month', '', '$active_month (YYYY-MM)', '[{"attr_name":"return:","attr_desc":"\\t list of date with total count of available shifts\\n\\t"}]', 'function get_work_days($active_month) {\n		$sql = "SELECT `job_date`, count(*) as `shifts_count` FROM `job_shifts`\n				WHERE `job_date` LIKE ''" . $active_month . "%''\n				AND `status` IN (" . SHIFT_REJECTED . "," . SHIFT_UNASSIGNED . "," . SHIFT_UNCONFIRMED . ")\n				AND `job_date` >= ''" . date(''Y-m-d'') . "''\n				GROUP BY `job_date`";\n		$query = $this->db->query($sql);\n		return $query->result_array();\n	}', '2014-03-15 10:57:44', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `modules_mvc`
--

CREATE TABLE `modules_mvc` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_modules_id` int(11) NOT NULL,
  `mvc_type` enum('controllers','models','views') NOT NULL,
  `name` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `comment` text NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=105 ;

--
-- Dumping data for table `modules_mvc`
--

INSERT INTO `modules_mvc` (`id`, `project_modules_id`, `mvc_type`, `name`, `description`, `comment`, `created`, `modified`) VALUES
(1, 1, 'controllers', 'Account', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(2, 2, 'controllers', 'Ajax', 'Ajax controller for attributes.', 'The custom attributes is not included in this module. It is located under the module - formbuilder', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(3, 2, 'controllers', 'Attribute', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(4, 2, 'controllers', 'Availability', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(5, 2, 'controllers', 'Group', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(6, 2, 'controllers', 'Location', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(7, 2, 'controllers', 'Payrate', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(8, 2, 'controllers', 'Role', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(9, 2, 'controllers', 'Staff_attribute', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(10, 2, 'controllers', 'Uniform', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(11, 2, 'controllers', 'Venue', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(12, 2, 'models', 'Availability_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(13, 2, 'models', 'Group_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(14, 2, 'models', 'Location_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(15, 2, 'models', 'Payrate_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(16, 2, 'models', 'Role_model', 'Role Model. Handles database operation regarding the attribute Role.', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(17, 2, 'models', 'Staff_attribute_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(18, 2, 'models', 'Uniform_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(19, 2, 'models', 'Venue_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(20, 3, 'controllers', 'Auth', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(21, 3, 'models', 'Auth_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(22, 4, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(23, 4, 'controllers', 'Client', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(24, 4, 'models', 'Client_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(25, 5, 'controllers', 'Ajax', 'Common ajax controller', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(26, 5, 'controllers', 'Common', 'controller to handle common module such as field_select and can be used in any views/modules', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(27, 5, 'models', 'Common_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(28, 6, 'controllers', 'Config', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(29, 6, 'models', 'Config_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(30, 7, 'controllers', 'Admin', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(31, 8, 'controllers', 'Admin', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(32, 8, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(33, 8, 'controllers', 'Dashboard', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(34, 8, 'controllers', 'Dashboard_staff', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(35, 8, 'models', 'Dashboard_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(36, 9, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(37, 9, 'controllers', 'Email', 'apply controller for staff', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(38, 9, 'models', 'Email_template_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(39, 10, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(40, 10, 'controllers', 'Export', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(41, 10, 'models', 'Export_model', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(42, 11, 'controllers', 'Formbuilder', 'This module is used for building custom form. On staffmaster this will be used for adding custom attributes for staff. These attributes will then be searchable for any given staff.', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(43, 11, 'models', 'Formbuilder_model', 'This module is used for building custom form. On staffmaster this will be used for adding custom attributes for staff. These attributes will then be searchable for any given staff.', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(44, 12, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(45, 12, 'controllers', 'Forum', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(46, 12, 'models', 'Forum_model', 'This model is performs the database operation regarding the forum module (Conversation module)', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(47, 13, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(48, 13, 'controllers', 'Invoice', 'Description has not been added to this class', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(49, 13, 'models', 'Invoice_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(50, 14, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(51, 14, 'controllers', 'Ajax_calendar', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(52, 14, 'controllers', 'Ajax_shift', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(53, 14, 'controllers', 'Calendar', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(54, 14, 'controllers', 'Job', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(55, 14, 'controllers', 'Shift', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(56, 14, 'models', 'Job_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(57, 14, 'models', 'Job_shift_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(58, 15, 'controllers', 'Admin', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(59, 15, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(60, 15, 'models', 'Order_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(61, 16, 'controllers', 'Admin', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(62, 16, 'models', 'Page_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(63, 17, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(64, 17, 'controllers', 'Payrun', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(65, 17, 'models', 'Payrun_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(66, 18, 'controllers', 'Admin', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(67, 18, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(68, 18, 'controllers', 'Product', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(69, 18, 'models', 'Customer_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(70, 18, 'models', 'Product_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(71, 19, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(72, 19, 'controllers', 'Profile', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(73, 19, 'models', 'Profile_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(74, 20, 'controllers', 'Report', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(75, 20, 'models', 'Report_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(76, 21, 'controllers', 'Admin', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(77, 21, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(78, 21, 'controllers', 'Resource', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(79, 21, 'models', 'Resource_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(80, 22, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(81, 22, 'controllers', 'Roster_staff', 'roster controller for staff', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(82, 22, 'models', 'Roster_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(83, 23, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(84, 23, 'controllers', 'Setting', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(85, 23, 'models', 'Setting_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(86, 24, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(87, 24, 'controllers', 'Staff', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(88, 24, 'controllers', 'Staff_staff', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(89, 24, 'models', 'Staff_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(90, 25, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(91, 25, 'controllers', 'Ajax_staff', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(92, 25, 'controllers', 'Timesheet', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(93, 25, 'controllers', 'Timesheet_staff', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(94, 25, 'models', 'Timesheet_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(95, 25, 'models', 'Timesheet_staff_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(96, 26, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(97, 26, 'controllers', 'Css', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(98, 26, 'controllers', 'User', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(99, 26, 'models', 'User_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(100, 27, 'controllers', 'Warranty', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(101, 27, 'models', 'Warranty_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(102, 28, 'controllers', 'Ajax', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(103, 28, 'controllers', 'Work_staff', 'controller handle apply for work by staff', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00'),
(104, 28, 'models', 'Work_model', 'Description has not been added to this class', '', '2014-03-15 10:57:44', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `payruns`
--

CREATE TABLE `payruns` (
  `payrun_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `type` tinyint(4) NOT NULL COMMENT '1: tfn, 2: abn',
  `amount` decimal(10,2) NOT NULL,
  `total_staffs` int(11) NOT NULL,
  `total_timesheets` int(11) NOT NULL,
  `status` tinyint(4) NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`payrun_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=7 ;

--
-- Dumping data for table `payruns`
--

INSERT INTO `payruns` (`payrun_id`, `type`, `amount`, `total_staffs`, `total_timesheets`, `status`, `created_on`) VALUES
(1, 2, 260.00, 1, 2, 0, '2014-03-19 04:01:43'),
(2, 1, 747.00, 1, 3, 0, '2014-03-20 04:18:00'),
(3, 2, 537.75, 1, 2, 0, '2014-03-20 04:23:24'),
(4, 1, 399.00, 2, 2, 0, '2014-03-24 04:37:14'),
(5, 2, 140.00, 1, 1, 0, '2014-03-24 04:37:20'),
(6, 2, 209.00, 1, 1, 0, '2014-03-24 04:37:53');

-- --------------------------------------------------------

--
-- Table structure for table `project_documentation`
--

CREATE TABLE `project_documentation` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `project_name` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `project_modules`
--

CREATE TABLE `project_modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=29 ;

--
-- Dumping data for table `project_modules`
--

INSERT INTO `project_modules` (`id`, `name`, `description`, `created`, `modified`) VALUES
(1, 'account', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(2, 'attribute', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(3, 'auth', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(4, 'client', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(5, 'common', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(6, 'config', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(7, 'customer', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(8, 'dashboard', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(9, 'email', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(10, 'export', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(11, 'formbuilder', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(12, 'forum', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(13, 'invoice', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(14, 'job', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(15, 'order', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(16, 'page', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(17, 'payrun', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(18, 'product', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(19, 'profile', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(20, 'report', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(21, 'resource', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(22, 'roster', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(23, 'setting', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(24, 'staff', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(25, 'timesheet', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(26, 'user', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(27, 'warranty', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00'),
(28, 'work', '', '2014-03-15 10:57:43', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `shift_brief`
--

CREATE TABLE `shift_brief` (
  `shift_brief_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `shift_id` bigint(20) NOT NULL,
  `brief_id` bigint(20) NOT NULL,
  `added` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`shift_brief_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=5 ;

--
-- Dumping data for table `shift_brief`
--

INSERT INTO `shift_brief` (`shift_brief_id`, `shift_id`, `brief_id`, `added`) VALUES
(2, 230, 5, '2014-04-03 07:20:26'),
(3, 302, 5, '2014-04-03 23:30:47'),
(4, 249, 1, '2014-04-04 07:32:11');

-- --------------------------------------------------------

--
-- Table structure for table `staff_custom_attributes`
--

CREATE TABLE `staff_custom_attributes` (
  `staff_custom_attribute_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `attribute_name` varchar(255) NOT NULL,
  `attributes` text NOT NULL,
  `file_upload` enum('yes','no') NOT NULL DEFAULT 'no',
  PRIMARY KEY (`staff_custom_attribute_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;

--
-- Dumping data for table `staff_custom_attributes`
--

INSERT INTO `staff_custom_attributes` (`staff_custom_attribute_id`, `user_id`, `attribute_name`, `attributes`, `file_upload`) VALUES
(1, 1, 'resume', 'logo.png', 'yes'),
(2, 10, 'eyecolour', 'Blue', 'no'),
(3, 29, 'eyecolour', 'Blue', 'no');

-- --------------------------------------------------------

--
-- Table structure for table `staff_groups`
--

CREATE TABLE `staff_groups` (
  `staff_groups_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `attribute_group_id` int(11) NOT NULL,
  PRIMARY KEY (`staff_groups_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=13 ;

--
-- Dumping data for table `staff_groups`
--

INSERT INTO `staff_groups` (`staff_groups_id`, `user_id`, `attribute_group_id`) VALUES
(1, 1, 3),
(2, 1, 1),
(3, 1, 5),
(4, 29, 5),
(5, 29, 6),
(6, 29, 3),
(7, 29, 1),
(8, 29, 2),
(9, 29, 4),
(10, 10, 3),
(11, 10, 1),
(12, 10, 5);

-- --------------------------------------------------------

--
-- Table structure for table `staff_roles`
--

CREATE TABLE `staff_roles` (
  `staff_roles_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `attribute_role_id` int(11) NOT NULL,
  PRIMARY KEY (`staff_roles_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=116 ;

--
-- Dumping data for table `staff_roles`
--

INSERT INTO `staff_roles` (`staff_roles_id`, `user_id`, `attribute_role_id`) VALUES
(1, 10, 13),
(2, 10, 1),
(3, 10, 8),
(4, 29, 13),
(5, 29, 1),
(6, 29, 8),
(7, 11, 13),
(8, 11, 1),
(9, 11, 8),
(10, 14, 13),
(11, 14, 1),
(12, 14, 12),
(13, 14, 11),
(14, 14, 8),
(15, 22, 13),
(16, 22, 1),
(17, 22, 11),
(18, 22, 8),
(19, 15, 5),
(20, 15, 11),
(21, 16, 13),
(22, 16, 1),
(23, 16, 12),
(24, 16, 15),
(25, 16, 16),
(26, 27, 16),
(27, 27, 11),
(28, 27, 13),
(29, 27, 1),
(30, 27, 8),
(31, 27, 15),
(32, 27, 6),
(33, 27, 7),
(34, 24, 10),
(35, 24, 12),
(36, 24, 11),
(37, 28, 10),
(38, 28, 12),
(39, 28, 8),
(40, 30, 13),
(41, 30, 1),
(42, 30, 14),
(43, 30, 7),
(44, 30, 6),
(45, 30, 15),
(46, 30, 16),
(47, 25, 13),
(48, 25, 5),
(49, 25, 8),
(50, 18, 16),
(52, 18, 15),
(53, 18, 13),
(54, 18, 1),
(55, 18, 12),
(56, 20, 10),
(57, 20, 12),
(58, 23, 13),
(59, 23, 1),
(60, 23, 14),
(61, 23, 8),
(62, 23, 16),
(63, 23, 15),
(64, 23, 6),
(65, 23, 7),
(66, 13, 10),
(67, 13, 12),
(68, 19, 13),
(69, 19, 1),
(71, 19, 5),
(72, 19, 11),
(73, 19, 16),
(74, 19, 15),
(75, 26, 13),
(76, 26, 8),
(77, 26, 15),
(78, 26, 16),
(80, 1, 1),
(81, 1, 12),
(82, 1, 14),
(83, 1, 8),
(84, 1, 5),
(85, 1, 11),
(86, 1, 16),
(87, 1, 7),
(90, 1, 10),
(91, 21, 13),
(92, 21, 1),
(93, 21, 8),
(94, 21, 16),
(95, 21, 15),
(96, 21, 14),
(97, 12, 13),
(98, 12, 1),
(99, 12, 12),
(100, 12, 8),
(101, 12, 10),
(102, 12, 15),
(104, 12, 16),
(105, 17, 13),
(106, 17, 1),
(107, 17, 12),
(109, 17, 16),
(110, 17, 15),
(111, 17, 10),
(112, 10, 12),
(113, 1, 17),
(114, 10, 18),
(115, 10, 19);

-- --------------------------------------------------------

--
-- Table structure for table `states`
--

CREATE TABLE `states` (
  `state_id` int(11) NOT NULL AUTO_INCREMENT,
  `code` varchar(250) NOT NULL,
  `name` varchar(250) NOT NULL,
  PRIMARY KEY (`state_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=9 ;

--
-- Dumping data for table `states`
--

INSERT INTO `states` (`state_id`, `code`, `name`) VALUES
(1, 'ACT', 'Australian Capital Territory'),
(2, 'NSW', 'New South Wales'),
(3, 'NT', 'Northern Territory'),
(4, 'QLD', 'Queensland'),
(5, 'SA', 'South Australia'),
(6, 'TAS', 'Tasmania'),
(7, 'VIC', 'Victoria'),
(8, 'WA', 'Western Australia');

-- --------------------------------------------------------

--
-- Table structure for table `supers`
--

CREATE TABLE `supers` (
  `super_id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(127) NOT NULL,
  PRIMARY KEY (`super_id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=122 ;

--
-- Dumping data for table `supers`
--

INSERT INTO `supers` (`super_id`, `name`) VALUES
(1, 'AMP'),
(2, 'Asset Super'),
(3, 'Asteron Life'),
(4, 'Aus Super'),
(5, 'Australian Super'),
(6, 'BT Super'),
(7, 'Care Super'),
(8, 'Catholic Super Fund'),
(9, 'First State Super'),
(10, 'Guild Super'),
(11, 'Health super'),
(12, 'HESTA'),
(13, 'HOST Plus'),
(14, 'Intrust Super'),
(15, 'IOOF'),
(16, 'KARLIE K WRING'),
(17, 'Local Government Super'),
(18, 'LUCRF Super'),
(19, 'Media super'),
(20, 'MLC'),
(21, 'MLC Universal Super Scheme'),
(22, 'NGS Super'),
(23, 'One Path'),
(24, 'Pacific Custodians Pty Ltd'),
(25, 'Recruitment Super'),
(26, 'Rei Super'),
(27, 'REST Superannuation'),
(28, 'Sunsuper'),
(29, 'Telstra Super'),
(30, 'Unisuper'),
(31, 'Vic Super'),
(32, 'Virgin Superfund'),
(33, 'Westscheme'),
(34, 'Agest Super'),
(35, 'AMP Corporate Super'),
(36, 'AMP Custom'),
(37, 'AMP Flexible Super'),
(38, 'AMP Life Limited'),
(39, 'AMP RETIREMENT SAVINGS'),
(40, 'ANZ Australian Staff Super'),
(41, 'ANZ Super Advantage'),
(42, 'ARF Super Fund'),
(43, 'ARIA'),
(44, 'Ashton Superfund'),
(46, 'Australian Enterprise Super'),
(47, 'Australian Super Member'),
(48, 'Australian YMCA Super'),
(49, 'AXA'),
(50, 'B Price & G Price Super'),
(51, 'BENDIGO'),
(52, 'BT Life'),
(54, 'Calstores Super'),
(56, 'Catholic Superannuation'),
(57, 'CBUS'),
(58, 'Clearview Super & Rollover Fun'),
(59, 'Club Super'),
(60, 'Co-invest'),
(61, 'Colonial First State'),
(62, 'Colonial Select Personal Super'),
(63, 'Commonwealth officers super co'),
(64, 'Commonwealth Super fund & Roll'),
(65, 'Easy Choice'),
(66, 'Equisuper'),
(67, 'First Choice Employer Super'),
(69, 'GESB'),
(71, 'Harding super Fund'),
(74, 'Holcim Super'),
(75, 'Ing Masterfund'),
(76, 'ING ONE Answer'),
(77, 'ING One Answer Personal Super'),
(78, 'Instruct Super'),
(79, 'Integra Super One Path'),
(81, 'Klose Family SMSF'),
(82, 'Legal Super'),
(83, 'LG Super'),
(84, 'Lifetrack Personal Super'),
(85, 'Local super'),
(86, 'LUCRF'),
(87, 'Macquarie Super Manager'),
(89, 'Members Equity'),
(90, 'MERCER'),
(91, 'MLC Navigator'),
(92, 'MTAA Super Fund'),
(94, 'North Personal Wealth'),
(96, 'OSF'),
(97, 'Perpetual Wealth Focus'),
(98, 'Plum Super'),
(99, 'Police and Nurses'),
(101, 'QSuper'),
(104, 'Retail Employees Super Trust'),
(105, 'Russell Super Solution'),
(106, 'SERF'),
(107, 'Southerland Credit U'),
(108, 'Spectrum Super'),
(109, 'Statewide Super'),
(110, 'Sun Super'),
(111, 'Suncorp Easy Super'),
(112, 'Suncorp Metway'),
(113, 'Super Trust'),
(114, 'Superannuation Savings Account'),
(115, 'TASPLAN'),
(116, 'Tower Investing In Life'),
(117, 'Virgin Super'),
(118, 'Vision Super Fund'),
(119, 'Visions Super Fund'),
(120, 'Wesfarmers Group Super Fund');

-- --------------------------------------------------------

--
-- Table structure for table `uploads`
--

CREATE TABLE `uploads` (
  `upload_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `uploaded_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` tinyint(4) NOT NULL,
  `file_name` varchar(255) NOT NULL,
  `file_type` varchar(255) NOT NULL,
  `file_path` varchar(255) NOT NULL,
  `full_path` varchar(255) NOT NULL,
  `raw_name` varchar(255) NOT NULL,
  `orig_name` varchar(255) NOT NULL,
  `client_name` varchar(255) NOT NULL,
  `file_ext` varchar(10) NOT NULL,
  `file_size` decimal(10,2) NOT NULL,
  `is_image` tinyint(4) NOT NULL,
  `image_width` int(11) NOT NULL,
  `image_height` int(11) NOT NULL,
  `image_type` varchar(10) NOT NULL,
  `image_size_str` varchar(255) NOT NULL,
  PRIMARY KEY (`upload_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=11 ;

--
-- Dumping data for table `uploads`
--

INSERT INTO `uploads` (`upload_id`, `uploaded_on`, `status`, `file_name`, `file_type`, `file_path`, `full_path`, `raw_name`, `orig_name`, `client_name`, `file_ext`, `file_size`, `is_image`, `image_width`, `image_height`, `image_type`, `image_size_str`) VALUES
(1, '2014-03-28 00:41:59', 0, 'Screen_Shot_2014-03-28_at_11.41_.50_am_.png', 'image/png', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/Screen_Shot_2014-03-28_at_11.41_.50_am_.png', 'Screen_Shot_2014-03-28_at_11.41_.50_am_', 'Screen_Shot_2014-03-28_at_11.41_.50_am_.png', 'Screen Shot 2014-03-28 at 11.41_.50 am_.png', '.png', 195.02, 1, 1094, 562, 'png', 'width="1094" height="562"'),
(2, '2014-03-28 00:48:21', 0, 'staff_1395818951.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_1395818951.csv', 'staff_1395818951', 'staff_1395818951.csv', 'staff_1395818951.csv', '.csv', 4.97, 0, 0, 0, '', ''),
(3, '2014-03-28 01:56:48', 0, 'staff_1395963069.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_1395963069.csv', 'staff_1395963069', 'staff_1395963069.csv', 'staff_1395963069.csv', '.csv', 4.97, 0, 0, 0, '', ''),
(4, '2014-03-28 02:05:00', 0, 'staff_1395972284.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_1395972284.csv', 'staff_1395972284', 'staff_1395972284.csv', 'staff_1395972284.csv', '.csv', 4.73, 0, 0, 0, '', ''),
(5, '2014-03-28 03:42:47', 0, 'staff_1395973300.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_1395973300.csv', 'staff_1395973300', 'staff_1395973300.csv', 'staff_1395973300.csv', '.csv', 4.74, 0, 0, 0, '', ''),
(6, '2014-03-28 03:43:47', 0, 'staff_13959733001.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_13959733001.csv', 'staff_13959733001', 'staff_1395973300.csv', 'staff_1395973300.csv', '.csv', 3.51, 0, 0, 0, '', ''),
(7, '2014-03-28 04:33:24', 0, 'staff_13959733002.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_13959733002.csv', 'staff_13959733002', 'staff_1395973300.csv', 'staff_1395973300.csv', '.csv', 3.51, 0, 0, 0, '', ''),
(8, '2014-03-28 04:37:42', 0, 'staff_1395981398.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_1395981398.csv', 'staff_1395981398', 'staff_1395981398.csv', 'staff_1395981398.csv', '.csv', 3.54, 0, 0, 0, '', ''),
(9, '2014-03-28 04:54:58', 0, 'staff_13959813981.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_13959813981.csv', 'staff_13959813981', 'staff_1395981398.csv', 'staff_1395981398.csv', '.csv', 3.54, 0, 0, 0, '', ''),
(10, '2014-03-28 04:56:40', 0, 'staff_1395982587.csv', 'text/plain', '/Users/namnguyen/Sites/vsm/uploads/import/', '/Users/namnguyen/Sites/vsm/uploads/import/staff_1395982587.csv', 'staff_1395982587', 'staff_1395982587.csv', 'staff_1395982587.csv', '.csv', 4.79, 0, 0, 0, '', '');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `user_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `status` tinyint(4) NOT NULL COMMENT '1 = active, 0 = pending, -1 = inactive, 2 = deleted',
  `is_admin` tinyint(4) NOT NULL,
  `is_staff` tinyint(4) NOT NULL,
  `is_client` tinyint(4) NOT NULL,
  `access_level` tinyint(4) NOT NULL,
  `email_address` varchar(100) NOT NULL,
  `username` varchar(100) NOT NULL,
  `password` varchar(100) NOT NULL,
  `title` varchar(10) NOT NULL,
  `first_name` varchar(100) NOT NULL,
  `last_name` varchar(100) NOT NULL,
  `full_name` varchar(100) NOT NULL,
  `address` varchar(255) NOT NULL,
  `suburb` varchar(100) NOT NULL,
  `city` varchar(100) NOT NULL,
  `state` varchar(100) NOT NULL,
  `postcode` varchar(10) NOT NULL,
  `phone` varchar(20) NOT NULL,
  `country` varchar(100) NOT NULL,
  `mobile` varchar(20) NOT NULL,
  `last_signed_in_on` datetime NOT NULL,
  `created_on` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_on` datetime NOT NULL,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=38 ;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`user_id`, `status`, `is_admin`, `is_staff`, `is_client`, `access_level`, `email_address`, `username`, `password`, `title`, `first_name`, `last_name`, `full_name`, `address`, `suburb`, `city`, `state`, `postcode`, `phone`, `country`, `mobile`, `last_signed_in_on`, `created_on`, `modified_on`) VALUES
(1, 1, 1, 1, 0, 0, 'daniel@propagate.com.au', 'admin', 'e10adc3949ba59abbe56e057f20f883e', 'Mr', 'Stafford', 'Mastered', 'Pro Pa Gate', '20A Macquaire St', 'Prahran', 'Melbourne', 'VIC', '3181', '98185698', 'AU', '', '2014-04-04 18:31:55', '2014-02-05 19:22:44', '2014-03-21 12:55:58'),
(10, 1, 0, 1, 0, 0, 'andrew.hyatt@smmail.com', 'andrew.hyatt@smmail.com', '47fab60bdcd2ffce91447d19fe9ce7f1', 'Mr', 'Andrew', 'Hyatttest', '', '24 Park St', 'Hawthorn', 'Melbourne', 'VIC', '3122', '04334578965', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:12:17', '2014-03-06 12:40:26'),
(11, 1, 0, 1, 0, 0, 'brian.hudson@smmail.com', 'brian.hudson@smmail.com', '929064f2a141f812f1c2efb3ff8194ca', 'Mr', 'Brian', 'Hudson', '', '23 Liddiard St', 'Hawthorn', 'Melbourne', 'VIC', '3122', '04334578964', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:13:35', '0000-00-00 00:00:00'),
(12, 1, 0, 1, 0, 0, 'thomas.edison@smmail.com', 'thomas.edison@smmail.com', '8766814f87d4790bd6c5f52d12b98da6', 'Mr', 'Thomas', 'Edison', '', '34 Stanley St', 'Melbourne', 'Melbourne', 'VIC', '3000', '04334578962', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:14:52', '0000-00-00 00:00:00'),
(13, 1, 0, 1, 0, 0, 'richard.gerald@smmail.com', 'richard.gerald@smmail.com', 'f9e1d2c7f00aae3f2a241982dc770f72', 'Mr', 'Richard', 'Gerald', '', '26 Monash FWY', 'Dandenong', 'Melbourne', 'VIC', '3076', '04334578968', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:16:31', '0000-00-00 00:00:00'),
(14, 1, 0, 1, 0, 0, 'edward.chaplin@smmail.com', 'edward.chaplin@smmail.com', '6676e7d0995ebd8dbd136869a9358d14', 'Mr', 'Edward', 'Chaplin', '', '7 Rose St', 'Sandringham', 'Melbourne', 'VIC', '3058', '04334578969', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:18:16', '0000-00-00 00:00:00'),
(15, 1, 0, 1, 0, 0, 'gary.burke@smmail.com', 'gary.burke@smmail.com', '66159c88637fad4014ee2e0547b7fd22', 'Mr', 'Gary', 'Burke', '', '90 Smith St', 'KEW', 'Melbourne', 'VIC', '3121', '04334578967', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:19:47', '0000-00-00 00:00:00'),
(16, 1, 0, 1, 0, 0, 'howard.leigh@smmail.com', 'howard.leigh@smmail.com', '09ab16a5273d209653935ad2d5c145ad', 'Mr', 'Howard', 'Leigh', '', '8 Bell St', 'Camberwell', 'Mel', 'VIC', '3123', '04334578961', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:21:45', '0000-00-00 00:00:00'),
(17, 1, 0, 1, 0, 0, 'william.tent@smmail.com', 'william.tent@smmail.com', '8a31fc89653c9f20d371bec97430d477', 'Mr', 'William', 'Tent', '', '20 Riverbank St', 'Melbourne', 'Mel', 'VIC', '3000', '04334578963', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:23:19', '0000-00-00 00:00:00'),
(18, 1, 0, 1, 0, 0, 'luke.smith@smmail.com', 'luke.smith@smmail.com', '85242bd9419eb073a907d7f756b5f8dd', 'Mr', 'Luke', 'Smith', '', '3 Collins St', 'East Camberwell', 'Melbourne', 'VIC', '3123', '04334578977', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:24:40', '0000-00-00 00:00:00'),
(19, 1, 0, 1, 0, 0, 'rio.chris@smmail.com', 'rio.chris@smmail.com', 'f237aef579ff90dcd9b528115cb25c32', 'Mrs', 'Rio', 'Christian', '', '40 Hull St', 'Hawthorn', 'Melbourne', 'VIC', '3122', '04334578978', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:25:49', '2014-03-05 15:34:05'),
(20, 1, 0, 1, 0, 0, 'paul.gilbert@smmail.com', 'paul.gilbert@smmail.com', '2e69f107d4be5f743461cb66d55d5e6e', 'Mr', 'Paul', 'Gilbert', '', '50 Town St', 'Glen Huntly', 'Melbourne', 'VIC', '3151', '04334578976', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:27:12', '0000-00-00 00:00:00'),
(21, 1, 0, 1, 0, 0, 'susie.howie@smmail.com', 'susie.howie@smmail.com', 'd9db25b58eb5dd9c1b200629a0cd25f8', 'Miss', 'Susie', 'Howie', '', '9 Hull St', 'Hawthorn', 'Mel', 'VIC', '3121', '04334578974', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:28:30', '0000-00-00 00:00:00'),
(22, 1, 0, 1, 0, 0, 'fiona.harris@smmail.com', 'fiona.harris@smmail.com', '3308b3a95bb633da5c0c578a607dfaff', 'Miss', 'Fiona', 'Harris', '', '2 Lidiard St', 'Camberwell', 'Melbourne', 'VIC', '3123', '', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:29:33', '0000-00-00 00:00:00'),
(23, 1, 0, 1, 0, 0, 'rachel.gibson@smmail.com', 'rachel.gibson@smmail.com', '4e2fe6dc5c296a7a548a7fd4eaf3ad07', 'Miss', 'Rachel', 'Gibson', '', '12 Square st', 'Melbourne', 'Melbourne', 'VIC', '3000', '04334578448', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:31:01', '0000-00-00 00:00:00'),
(24, 1, 0, 1, 0, 0, 'judith.palse@smmail.com', 'judith.palse@smmail.com', 'f481aa3206ba8cb86cd50fe9d005a9b6', 'Miss', 'Judith', 'Palse', '', '99 Bank St', 'Cranbourne', 'Melbourne', 'VIC', '3400', '043345744448', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:32:24', '0000-00-00 00:00:00'),
(25, 1, 0, 1, 0, 0, 'lucy.dale@smmail.com', 'lucy.dale@smmail.com', '861a628f450def33619f6232540441cc', 'Mrs', 'Lucy', 'Dale', '', '9 Iron st', 'Brighton', 'Melbourne', 'VIC', '3300', '', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:33:21', '0000-00-00 00:00:00'),
(26, 1, 0, 1, 0, 0, 'sheila.hondie@smmail.com', 'sheila.hondie@smmail.com', 'd10d53f2f76add5b8561541f981c60d4', 'Miss', 'Sheila', 'Hondie', '', '45 Team st', 'Glen Roy', 'Melbourne', 'VIC', '3145', '', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:34:21', '0000-00-00 00:00:00'),
(27, 1, 0, 1, 0, 0, 'jess.killer@smmail.com', 'jess.killer@smmail.com', 'ff6ae2cda9741c0f0c03bce2b6d93af9', 'Miss', 'Jess', 'Killer', '', '7 Whiteman St', 'Melbourne', 'Melbourne', 'VIC', '3000', '', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:35:22', '0000-00-00 00:00:00'),
(28, 1, 0, 1, 0, 0, 'kelly.chen@smmail.com', 'kelly.chen@smmail.com', '872059ee9abf7170f74f41b33e41830d', 'Miss', 'Kelly', 'Chen', '', '8 Flinders St', 'Melbourne', 'Melbourne', 'VIC', '3000', '', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:36:17', '0000-00-00 00:00:00'),
(29, 1, 0, 1, 0, 0, 'angela.lindsay@smmail.com', 'angela.lindsay@smmail.com', '4cb9c8a8048fd02294477fcb1a41191a', 'Miss', 'Angela', 'Lindsay', '', '80 Bourke St', 'Melbourne', 'Melbourne', 'VIC', '3000', '', 'AU', '', '2014-04-01 16:43:26', '2014-02-03 19:37:27', '2014-03-31 18:16:06'),
(30, 1, 0, 1, 0, 0, 'lily.clipton@smmail.com', 'lily.clipton@smmail.com', 'b42669c97237ef087cc18c67afaac878', 'Miss', 'Lily', 'Clipton', '', '7 Flower st', 'Dandenong', 'Melbourne', 'VIC', '3600', '', 'AU', '', '0000-00-00 00:00:00', '2014-02-03 19:38:19', '0000-00-00 00:00:00'),
(31, 1, 0, 0, 1, 0, 'daniel@propagate.com.au', 'propagate', '4cb9c8a8048fd02294477fcb1a41191a', '', '', '', 'Nicky Bruce', '20A Macquaire St', 'Prahran', 'Melbourne', 'VIC', '3181', '0402133066', 'AU', '', '0000-00-00 00:00:00', '2014-02-10 23:52:16', '2014-03-28 18:47:04'),
(33, 1, 0, 0, 1, 0, 'fredflint@Cubb.com', 'namnd86@gmail.com', '4cb9c8a8048fd02294477fcb1a41191a', '', '', '', 'Fred Flint', '100 Queens Street', 'Melbourne CBD', 'Melbourne', 'VIC', '3000', '0402133066', 'AU', '', '0000-00-00 00:00:00', '2014-02-13 00:24:22', '2014-03-05 14:50:53'),
(34, -2, 0, 0, 1, 0, 'jameslilly@mccg.com', 'jameslilly@mccg.com', '', '', '', '', 'James Lilly', '103 Batman Avenue', 'Richmond', 'Melbourne', 'VIC', '3181', '03 9662 4491', 'AU', '', '0000-00-00 00:00:00', '2014-03-05 03:56:36', '2014-03-06 12:20:06'),
(35, 0, 0, 0, 1, 0, 'jameslilly@mccg.com', 'jameslilly@mccg.com', '', '', '', '', 'James Lilly', '103 Batman Avenue', 'Richmond', 'Melbourne', 'VIC', '3181', '03 9662 4491', 'AU', '', '0000-00-00 00:00:00', '2014-03-05 03:57:07', '2014-04-04 10:28:13'),
(36, -2, 0, 0, 1, 0, 'jameslilly@mccg.com', 'jameslilly@mccg.com', '', '', '', '', 'James Lilly', '103 Batman Avenue', 'Richmond', 'Melbourne', 'VIC', '3181', '03 9662 4491', 'AU', '', '0000-00-00 00:00:00', '2014-03-05 03:57:09', '0000-00-00 00:00:00'),
(37, 0, 0, 0, 1, 0, 'nickb@woolaust.com', 'nickb@woolaust.com', '', '', '', '', 'Nick Battery', '22 Toorak Road', 'James Town', 'Sydney', '', '2020', '02 91181143', 'AU', '', '0000-00-00 00:00:00', '2014-03-05 03:59:00', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Table structure for table `user_clients`
--

CREATE TABLE `user_clients` (
  `client_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) NOT NULL,
  `external_client_id` varchar(20) NOT NULL,
  `company_name` varchar(100) NOT NULL,
  `abn` varchar(20) NOT NULL,
  `total_jobs` int(11) NOT NULL,
  `total_jobs_current_year` int(11) NOT NULL,
  PRIMARY KEY (`client_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=7 ;

--
-- Dumping data for table `user_clients`
--

INSERT INTO `user_clients` (`client_id`, `user_id`, `external_client_id`, `company_name`, `abn`, `total_jobs`, `total_jobs_current_year`) VALUES
(1, 31, '', 'The Royal Alfred', '12 345 567 789', 1, 1),
(2, 33, '123', 'Carlton United Brewers - CUB', '12 987 765 654', 0, 0),
(3, 34, '', 'Melbourne Cricket Club', '124779312', 1, 1),
(4, 35, '', 'Melbourne Cricket Club', '124779312', 0, 0),
(5, 36, '', 'Meclbourne Cricket Club', '124779312', 0, 0),
(6, 37, '', 'Woolworths', '1109923456', 1, 1);

-- --------------------------------------------------------

--
-- Table structure for table `user_client_departments`
--

CREATE TABLE `user_client_departments` (
  `department_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) NOT NULL,
  `name` varchar(250) NOT NULL,
  PRIMARY KEY (`department_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=10 ;

--
-- Dumping data for table `user_client_departments`
--

INSERT INTO `user_client_departments` (`department_id`, `user_id`, `name`) VALUES
(1, 33, 'VIC'),
(2, 33, 'NSW'),
(3, 33, 'QLD'),
(4, 31, 'Accident & Emergency (A&E)'),
(5, 31, 'Cardiology'),
(6, 31, 'Elderly Services Department'),
(7, 31, 'Neurology'),
(8, 31, 'Oncology'),
(9, 31, 'Radiotherapy');

-- --------------------------------------------------------

--
-- Table structure for table `user_staffs`
--

CREATE TABLE `user_staffs` (
  `staff_id` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) NOT NULL,
  `group_id` int(11) NOT NULL,
  `external_staff_id` varchar(20) NOT NULL,
  `rating` decimal(10,2) NOT NULL,
  `gender` char(1) NOT NULL,
  `dob` date NOT NULL,
  `emergency_contact` varchar(100) NOT NULL,
  `emergency_phone` varchar(20) NOT NULL,
  `f_aus_resident` tinyint(4) NOT NULL,
  `f_tax_free_threshold` tinyint(4) NOT NULL,
  `f_tax_offset` tinyint(4) NOT NULL,
  `f_senior_status` varchar(100) NOT NULL,
  `f_help_debt` tinyint(4) NOT NULL,
  `f_help_variation` varchar(100) NOT NULL,
  `f_acc_name` varchar(100) NOT NULL,
  `f_acc_number` varchar(100) NOT NULL,
  `f_bsb` varchar(5) NOT NULL,
  `f_employed` int(11) NOT NULL DEFAULT '1',
  `f_abn` varchar(20) NOT NULL,
  `f_require_gst` tinyint(4) NOT NULL,
  `f_tfn` varchar(20) NOT NULL,
  `s_choice` varchar(100) NOT NULL,
  `s_name` varchar(100) NOT NULL,
  `s_employee_id` varchar(100) NOT NULL,
  `s_tfn` varchar(20) NOT NULL,
  `s_fund_name` varchar(100) NOT NULL,
  `s_fund_website` varchar(100) NOT NULL,
  `s_product_id` varchar(100) NOT NULL,
  `s_fund_phone` varchar(100) NOT NULL,
  `s_membership` varchar(100) NOT NULL,
  `s_fund_address` varchar(100) NOT NULL,
  `s_fund_suburb` varchar(100) NOT NULL,
  `s_fund_postcode` varchar(10) NOT NULL,
  `s_fund_state` varchar(10) NOT NULL,
  `s_agree` tinyint(4) NOT NULL,
  `availability` text NOT NULL,
  `payrates` varchar(100) NOT NULL,
  `roles` varchar(100) NOT NULL,
  `locations` text NOT NULL,
  `last_worked_date` datetime NOT NULL COMMENT 'the last date the staff worked on a job',
  `time_sheets_in_payrun` int(11) NOT NULL COMMENT 'number of unpaid time sheet in the payrun',
  `welcome_email_sent` enum('yes','no') NOT NULL DEFAULT 'no',
  PRIMARY KEY (`staff_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=27 ;

--
-- Dumping data for table `user_staffs`
--

INSERT INTO `user_staffs` (`staff_id`, `user_id`, `group_id`, `external_staff_id`, `rating`, `gender`, `dob`, `emergency_contact`, `emergency_phone`, `f_aus_resident`, `f_tax_free_threshold`, `f_tax_offset`, `f_senior_status`, `f_help_debt`, `f_help_variation`, `f_acc_name`, `f_acc_number`, `f_bsb`, `f_employed`, `f_abn`, `f_require_gst`, `f_tfn`, `s_choice`, `s_name`, `s_employee_id`, `s_tfn`, `s_fund_name`, `s_fund_website`, `s_product_id`, `s_fund_phone`, `s_membership`, `s_fund_address`, `s_fund_suburb`, `s_fund_postcode`, `s_fund_state`, `s_agree`, `availability`, `payrates`, `roles`, `locations`, `last_worked_date`, `time_sheets_in_payrun`, `welcome_email_sent`) VALUES
(5, 10, 1, '', 3.40, 'm', '2012-11-30', 'Cherry', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Andrew Hyatt', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["2","3"]', '["8","13","6","14"]', '{"4":["29","30","31"],"14":["75"],"6":[],"5":["32","33","34","35","36"]}', '0000-00-00 00:00:00', 0, 'no'),
(6, 11, 0, '', 2.50, 'm', '0000-00-00', 'Berry', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Brian Hudson', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["2","3"]', '["8","13","6","14"]', '{"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(7, 12, 0, '', 4.90, 'm', '0000-00-00', 'Teddy', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Thomas Edison', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"5":["32","33","34","35","36"],"4":["27","28","29","30","3', '0000-00-00 00:00:00', 0, 'no'),
(8, 13, 0, '', 3.20, 'm', '0000-00-00', 'Rain', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Richard Gerald', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"4":["27","28","29","30","31"],"5":["32","33","34","35","36"]}', '0000-00-00 00:00:00', 0, 'no'),
(9, 14, 1, '', 3.40, 'm', '0000-00-00', 'Edith', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Edward Chaplin', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(10, 15, 0, '', 2.70, 'm', '0000-00-00', 'Glenn', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Gary Burke', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(11, 16, 1, '', 3.80, 'm', '0000-00-00', 'Henny', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Howard Leigh', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"6":[],"5":["32","33","34","35","36"]}', '0000-00-00 00:00:00', 0, 'no'),
(12, 17, 0, '', 0.00, 'm', '0000-00-00', 'Wendy', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'William Tent', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"]}', '0000-00-00 00:00:00', 0, 'no'),
(13, 18, 3, '', 1.70, 'm', '0000-00-00', 'Lucy', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Luke Smith', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(14, 19, 0, '', 2.60, 'f', '2012-11-30', 'Rena', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Rio Chris', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(15, 20, 0, '', 2.40, 'm', '0000-00-00', 'Pillip', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Paul Gilbert', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"5":["32","33","34","35","36"],"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","3', '0000-00-00 00:00:00', 0, 'no'),
(16, 21, 0, '', 0.00, 'f', '0000-00-00', 'Sean', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Susie Howie', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(17, 22, 0, '', 4.90, 'f', '0000-00-00', 'Fendy', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Fiona Harris', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"6":[],"5":["32","33","34","35","36"]}', '0000-00-00 00:00:00', 0, 'no'),
(18, 23, 1, '', 0.00, 'f', '0000-00-00', 'Randy', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Rachel Gibson', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"6":[],"5":["32","33","34","35","36"]}', '0000-00-00 00:00:00', 0, 'no'),
(19, 24, 0, '', 5.00, 'f', '0000-00-00', 'Jade', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Judith Palse', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(20, 25, 0, '', 3.00, 'f', '0000-00-00', 'Lina', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Lucy Dale', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(21, 26, 1, '', 0.00, 'f', '0000-00-00', 'Jes', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Sheila Hondie', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"5":["32","33","34","35","36"],"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","3', '0000-00-00 00:00:00', 0, 'no'),
(22, 27, 0, '', 3.00, 'f', '0000-00-00', 'Sam', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Jess Killer', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"],"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no'),
(23, 28, 0, '', 0.00, 'f', '0000-00-00', 'Ken', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Kelly Chen', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"]}', '0000-00-00 00:00:00', 0, 'no'),
(24, 29, 0, '', 2.50, 'f', '2012-11-30', 'Lily', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Angela Lindsay', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"3":["20","21","22","23","24","25","26"]}', '0000-00-00 00:00:00', 0, 'no'),
(25, 30, 0, '', 1.40, 'f', '0000-00-00', 'Lusi', '', 0, 0, 0, '', 0, '', '', '', '', 1, '', 0, '', 'employer', 'Lily Clipton', '', '', 'HOST Plus', '', '', '', '', '', '', '', '', 0, '', '["1","2"]', '["8","13","6","14"]', '{"6":[],"5":["32","33","34","35","36"]}', '0000-00-00 00:00:00', 0, 'no'),
(26, 1, 0, '', 2.40, 'm', '2012-11-30', 'Mr Stafford Mastered', '059 554 315', 0, 0, 1, 'Single', 1, 'HELP + SFSS', 'Propagate', '', '', 2, '12 345 567 789', 0, '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, '', '', '["8","10","11","1","4"]', '{"3":["20","21","22","24","25","26"],"4":["27","28","29","30","31"]}', '0000-00-00 00:00:00', 0, 'no');

-- --------------------------------------------------------

--
-- Table structure for table `user_staff_availability`
--

CREATE TABLE `user_staff_availability` (
  `user_id` int(11) NOT NULL,
  `day` int(11) NOT NULL,
  `hour` int(11) NOT NULL,
  `value` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `user_staff_availability`
--

INSERT INTO `user_staff_availability` (`user_id`, `day`, `hour`, `value`) VALUES
(1, 1, 0, 1),
(1, 1, 1, 1),
(1, 1, 2, 1),
(1, 1, 3, 1),
(1, 1, 4, 1),
(1, 1, 5, 1),
(1, 1, 6, 1),
(1, 1, 7, 1),
(1, 1, 8, 1),
(1, 1, 9, 1),
(1, 1, 10, 1),
(1, 1, 11, 1),
(1, 1, 12, 1),
(1, 1, 13, 0),
(1, 1, 14, 1),
(1, 1, 15, 1),
(1, 1, 16, 1),
(1, 1, 17, 1),
(1, 1, 18, 1),
(1, 1, 19, 1),
(1, 1, 20, 1),
(1, 1, 21, 1),
(1, 1, 22, 1),
(1, 1, 23, 0),
(1, 2, 0, 1),
(1, 2, 1, 1),
(1, 2, 2, 1),
(1, 2, 3, 1),
(1, 2, 4, 1),
(1, 2, 5, 1),
(1, 2, 6, 1),
(1, 2, 7, 1),
(1, 2, 8, 1),
(1, 2, 9, 1),
(1, 2, 10, 1),
(1, 2, 11, 1),
(1, 2, 12, 1),
(1, 2, 13, 1),
(1, 2, 14, 1),
(1, 2, 15, 1),
(1, 2, 16, 1),
(1, 2, 17, 1),
(1, 2, 18, 1),
(1, 2, 19, 1),
(1, 2, 20, 1),
(1, 2, 21, 1),
(1, 2, 22, 1),
(1, 2, 23, 1),
(1, 3, 0, 1),
(1, 3, 1, 1),
(1, 3, 2, 1),
(1, 3, 3, 1),
(1, 3, 4, 1),
(1, 3, 5, 1),
(1, 3, 6, 1),
(1, 3, 7, 1),
(1, 3, 8, 1),
(1, 3, 9, 1),
(1, 3, 10, 1),
(1, 3, 11, 1),
(1, 3, 12, 1),
(1, 3, 13, 1),
(1, 3, 14, 1),
(1, 3, 15, 1),
(1, 3, 16, 1),
(1, 3, 17, 1),
(1, 3, 18, 1),
(1, 3, 19, 1),
(1, 3, 20, 1),
(1, 3, 21, 1),
(1, 3, 22, 1),
(1, 3, 23, 1),
(1, 4, 0, 1),
(1, 4, 1, 1),
(1, 4, 2, 1),
(1, 4, 3, 1),
(1, 4, 4, 1),
(1, 4, 5, 1),
(1, 4, 6, 1),
(1, 4, 7, 1),
(1, 4, 8, 1),
(1, 4, 9, 1),
(1, 4, 10, 1),
(1, 4, 11, 1),
(1, 4, 12, 1),
(1, 4, 13, 0),
(1, 4, 14, 1),
(1, 4, 15, 1),
(1, 4, 16, 1),
(1, 4, 17, 1),
(1, 4, 18, 1),
(1, 4, 19, 1),
(1, 4, 20, 1),
(1, 4, 21, 1),
(1, 4, 22, 1),
(1, 4, 23, 0),
(1, 5, 0, 1),
(1, 5, 1, 1),
(1, 5, 2, 1),
(1, 5, 3, 1),
(1, 5, 4, 1),
(1, 5, 5, 1),
(1, 5, 6, 1),
(1, 5, 7, 1),
(1, 5, 8, 1),
(1, 5, 9, 1),
(1, 5, 10, 1),
(1, 5, 11, 1),
(1, 5, 12, 1),
(1, 5, 13, 0),
(1, 5, 14, 1),
(1, 5, 15, 1),
(1, 5, 16, 1),
(1, 5, 17, 1),
(1, 5, 18, 1),
(1, 5, 19, 1),
(1, 5, 20, 1),
(1, 5, 21, 1),
(1, 5, 22, 1),
(1, 5, 23, 0),
(1, 6, 0, 1),
(1, 6, 1, 1),
(1, 6, 2, 1),
(1, 6, 3, 1),
(1, 6, 4, 1),
(1, 6, 5, 1),
(1, 6, 6, 1),
(1, 6, 7, 1),
(1, 6, 8, 1),
(1, 6, 9, 1),
(1, 6, 10, 1),
(1, 6, 11, 1),
(1, 6, 12, 1),
(1, 6, 13, 0),
(1, 6, 14, 1),
(1, 6, 15, 1),
(1, 6, 16, 1),
(1, 6, 17, 1),
(1, 6, 18, 1),
(1, 6, 19, 1),
(1, 6, 20, 1),
(1, 6, 21, 1),
(1, 6, 22, 1),
(1, 6, 23, 0),
(1, 7, 0, 1),
(1, 7, 1, 1),
(1, 7, 2, 1),
(1, 7, 3, 1),
(1, 7, 4, 1),
(1, 7, 5, 1),
(1, 7, 6, 1),
(1, 7, 7, 1),
(1, 7, 8, 1),
(1, 7, 9, 1),
(1, 7, 10, 1),
(1, 7, 11, 1),
(1, 7, 12, 1),
(1, 7, 13, 0),
(1, 7, 14, 1),
(1, 7, 15, 1),
(1, 7, 16, 1),
(1, 7, 17, 1),
(1, 7, 18, 1),
(1, 7, 19, 1),
(1, 7, 20, 1),
(1, 7, 21, 1),
(1, 7, 22, 1),
(1, 7, 23, 0),
(21, 1, 0, 1),
(21, 1, 1, 1),
(21, 1, 2, 1),
(21, 1, 3, 1),
(21, 1, 4, 1),
(21, 1, 5, 1),
(21, 1, 6, 1),
(21, 1, 7, 1),
(21, 1, 8, 1),
(21, 1, 9, 1),
(21, 1, 10, 1),
(21, 1, 11, 1),
(21, 1, 12, 1),
(21, 1, 13, 1),
(21, 1, 14, 1),
(21, 1, 15, 1),
(21, 1, 16, 1),
(21, 1, 17, 1),
(21, 1, 18, 1),
(21, 1, 19, 1),
(21, 1, 20, 1),
(21, 1, 21, 1),
(21, 1, 22, 1),
(21, 1, 23, 1),
(21, 2, 0, 1),
(21, 2, 1, 1),
(21, 2, 2, 1),
(21, 2, 3, 1),
(21, 2, 4, 1),
(21, 2, 5, 1),
(21, 2, 6, 1),
(21, 2, 7, 1),
(21, 2, 8, 1),
(21, 2, 9, 1),
(21, 2, 10, 1),
(21, 2, 11, 1),
(21, 2, 12, 1),
(21, 2, 13, 1),
(21, 2, 14, 1),
(21, 2, 15, 1),
(21, 2, 16, 1),
(21, 2, 17, 1),
(21, 2, 18, 1),
(21, 2, 19, 1),
(21, 2, 20, 1),
(21, 2, 21, 1),
(21, 2, 22, 1),
(21, 2, 23, 1),
(21, 3, 0, 1),
(21, 3, 1, 1),
(21, 3, 2, 1),
(21, 3, 3, 1),
(21, 3, 4, 1),
(21, 3, 5, 1),
(21, 3, 6, 1),
(21, 3, 7, 1),
(21, 3, 8, 1),
(21, 3, 9, 1),
(21, 3, 10, 1),
(21, 3, 11, 1),
(21, 3, 12, 1),
(21, 3, 13, 1),
(21, 3, 14, 1),
(21, 3, 15, 1),
(21, 3, 16, 1),
(21, 3, 17, 1),
(21, 3, 18, 1),
(21, 3, 19, 1),
(21, 3, 20, 1),
(21, 3, 21, 1),
(21, 3, 22, 1),
(21, 3, 23, 1),
(21, 4, 0, 1),
(21, 4, 1, 1),
(21, 4, 2, 1),
(21, 4, 3, 1),
(21, 4, 4, 1),
(21, 4, 5, 1),
(21, 4, 6, 1),
(21, 4, 7, 1),
(21, 4, 8, 1),
(21, 4, 9, 1),
(21, 4, 10, 1),
(21, 4, 11, 1),
(21, 4, 12, 1),
(21, 4, 13, 1),
(21, 4, 14, 1),
(21, 4, 15, 1),
(21, 4, 16, 1),
(21, 4, 17, 1),
(21, 4, 18, 1),
(21, 4, 19, 1),
(21, 4, 20, 1),
(21, 4, 21, 1),
(21, 4, 22, 1),
(21, 4, 23, 1),
(21, 5, 0, 1),
(21, 5, 1, 1),
(21, 5, 2, 1),
(21, 5, 3, 1),
(21, 5, 4, 1),
(21, 5, 5, 1),
(21, 5, 6, 1),
(21, 5, 7, 1),
(21, 5, 8, 1),
(21, 5, 9, 1),
(21, 5, 10, 1),
(21, 5, 11, 1),
(21, 5, 12, 1),
(21, 5, 13, 1),
(21, 5, 14, 1),
(21, 5, 15, 1),
(21, 5, 16, 1),
(21, 5, 17, 1),
(21, 5, 18, 1),
(21, 5, 19, 1),
(21, 5, 20, 1),
(21, 5, 21, 1),
(21, 5, 22, 1),
(21, 5, 23, 1),
(21, 6, 0, 1),
(21, 6, 1, 1),
(21, 6, 2, 1),
(21, 6, 3, 1),
(21, 6, 4, 1),
(21, 6, 5, 1),
(21, 6, 6, 1),
(21, 6, 7, 1),
(21, 6, 8, 1),
(21, 6, 9, 1),
(21, 6, 10, 1),
(21, 6, 11, 1),
(21, 6, 12, 1),
(21, 6, 13, 1),
(21, 6, 14, 1),
(21, 6, 15, 1),
(21, 6, 16, 1),
(21, 6, 17, 1),
(21, 6, 18, 1),
(21, 6, 19, 1),
(21, 6, 20, 1),
(21, 6, 21, 1),
(21, 6, 22, 1),
(21, 6, 23, 1),
(21, 7, 0, 1),
(21, 7, 1, 1),
(21, 7, 2, 1),
(21, 7, 3, 1),
(21, 7, 4, 1),
(21, 7, 5, 1),
(21, 7, 6, 1),
(21, 7, 7, 1),
(21, 7, 8, 1),
(21, 7, 9, 1),
(21, 7, 10, 1),
(21, 7, 11, 1),
(21, 7, 12, 1),
(21, 7, 13, 1),
(21, 7, 14, 1),
(21, 7, 15, 1),
(21, 7, 16, 1),
(21, 7, 17, 1),
(21, 7, 18, 1),
(21, 7, 19, 1),
(21, 7, 20, 1),
(21, 7, 21, 1),
(21, 7, 22, 1),
(21, 7, 23, 1),
(10, 1, 0, 0),
(10, 1, 1, 0),
(10, 1, 2, 0),
(10, 1, 3, 0),
(10, 1, 4, 0),
(10, 1, 5, 0),
(10, 1, 6, 0),
(10, 1, 7, 0),
(10, 1, 8, 0),
(10, 1, 9, 0),
(10, 1, 10, 0),
(10, 1, 11, 0),
(10, 1, 12, 0),
(10, 1, 13, 0),
(10, 1, 14, 0),
(10, 1, 15, 0),
(10, 1, 16, 0),
(10, 1, 17, 0),
(10, 1, 18, 0),
(10, 1, 19, 0),
(10, 1, 20, 0),
(10, 1, 21, 0),
(10, 1, 22, 0),
(10, 1, 23, 0),
(10, 2, 0, 1),
(10, 2, 1, 1),
(10, 2, 2, 1),
(10, 2, 3, 1),
(10, 2, 4, 1),
(10, 2, 5, 1),
(10, 2, 6, 1),
(10, 2, 7, 1),
(10, 2, 8, 1),
(10, 2, 9, 1),
(10, 2, 10, 1),
(10, 2, 11, 1),
(10, 2, 12, 1),
(10, 2, 13, 1),
(10, 2, 14, 1),
(10, 2, 15, 1),
(10, 2, 16, 1),
(10, 2, 17, 1),
(10, 2, 18, 1),
(10, 2, 19, 1),
(10, 2, 20, 1),
(10, 2, 21, 1),
(10, 2, 22, 1),
(10, 2, 23, 1),
(10, 3, 0, 1),
(10, 3, 1, 1),
(10, 3, 2, 1),
(10, 3, 3, 1),
(10, 3, 4, 1),
(10, 3, 5, 1),
(10, 3, 6, 1),
(10, 3, 7, 1),
(10, 3, 8, 1),
(10, 3, 9, 1),
(10, 3, 10, 1),
(10, 3, 11, 1),
(10, 3, 12, 1),
(10, 3, 13, 1),
(10, 3, 14, 1),
(10, 3, 15, 1),
(10, 3, 16, 1),
(10, 3, 17, 1),
(10, 3, 18, 1),
(10, 3, 19, 1),
(10, 3, 20, 1),
(10, 3, 21, 1),
(10, 3, 22, 1),
(10, 3, 23, 1),
(10, 4, 0, 1),
(10, 4, 1, 1),
(10, 4, 2, 1),
(10, 4, 3, 1),
(10, 4, 4, 1),
(10, 4, 5, 1),
(10, 4, 6, 1),
(10, 4, 7, 1),
(10, 4, 8, 1),
(10, 4, 9, 1),
(10, 4, 10, 1),
(10, 4, 11, 1),
(10, 4, 12, 1),
(10, 4, 13, 1),
(10, 4, 14, 1),
(10, 4, 15, 1),
(10, 4, 16, 1),
(10, 4, 17, 1),
(10, 4, 18, 1),
(10, 4, 19, 1),
(10, 4, 20, 1),
(10, 4, 21, 1),
(10, 4, 22, 1),
(10, 4, 23, 1),
(10, 5, 0, 1),
(10, 5, 1, 1),
(10, 5, 2, 1),
(10, 5, 3, 1),
(10, 5, 4, 1),
(10, 5, 5, 1),
(10, 5, 6, 1),
(10, 5, 7, 1),
(10, 5, 8, 1),
(10, 5, 9, 1),
(10, 5, 10, 1),
(10, 5, 11, 1),
(10, 5, 12, 1),
(10, 5, 13, 1),
(10, 5, 14, 1),
(10, 5, 15, 1),
(10, 5, 16, 1),
(10, 5, 17, 1),
(10, 5, 18, 1),
(10, 5, 19, 1),
(10, 5, 20, 1),
(10, 5, 21, 1),
(10, 5, 22, 1),
(10, 5, 23, 1),
(10, 6, 0, 1),
(10, 6, 1, 1),
(10, 6, 2, 1),
(10, 6, 3, 1),
(10, 6, 4, 1),
(10, 6, 5, 1),
(10, 6, 6, 1),
(10, 6, 7, 1),
(10, 6, 8, 1),
(10, 6, 9, 1),
(10, 6, 10, 1),
(10, 6, 11, 1),
(10, 6, 12, 1),
(10, 6, 13, 1),
(10, 6, 14, 1),
(10, 6, 15, 1),
(10, 6, 16, 1),
(10, 6, 17, 1),
(10, 6, 18, 1),
(10, 6, 19, 1),
(10, 6, 20, 1),
(10, 6, 21, 1),
(10, 6, 22, 1),
(10, 6, 23, 1),
(10, 7, 0, 1),
(10, 7, 1, 1),
(10, 7, 2, 1),
(10, 7, 3, 1),
(10, 7, 4, 1),
(10, 7, 5, 1),
(10, 7, 6, 1),
(10, 7, 7, 1),
(10, 7, 8, 1),
(10, 7, 9, 1),
(10, 7, 10, 1),
(10, 7, 11, 1),
(10, 7, 12, 1),
(10, 7, 13, 1),
(10, 7, 14, 1),
(10, 7, 15, 1),
(10, 7, 16, 1),
(10, 7, 17, 1),
(10, 7, 18, 1),
(10, 7, 19, 1),
(10, 7, 20, 1),
(10, 7, 21, 1),
(10, 7, 22, 1),
(10, 7, 23, 1),
(14, 1, 0, 1),
(14, 1, 1, 1),
(14, 1, 2, 1),
(14, 1, 3, 1),
(14, 1, 4, 1),
(14, 1, 5, 1),
(14, 1, 6, 1),
(14, 1, 7, 1),
(14, 1, 8, 1),
(14, 1, 9, 1),
(14, 1, 10, 1),
(14, 1, 11, 1),
(14, 1, 12, 1),
(14, 1, 13, 0),
(14, 1, 14, 0),
(14, 1, 15, 1),
(14, 1, 16, 1),
(14, 1, 17, 1),
(14, 1, 18, 1),
(14, 1, 19, 1),
(14, 1, 20, 1),
(14, 1, 21, 1),
(14, 1, 22, 1),
(14, 1, 23, 1),
(14, 2, 0, 1),
(14, 2, 1, 1),
(14, 2, 2, 1),
(14, 2, 3, 1),
(14, 2, 4, 1),
(14, 2, 5, 1),
(14, 2, 6, 1),
(14, 2, 7, 1),
(14, 2, 8, 1),
(14, 2, 9, 1),
(14, 2, 10, 1),
(14, 2, 11, 1),
(14, 2, 12, 1),
(14, 2, 13, 1),
(14, 2, 14, 1),
(14, 2, 15, 1),
(14, 2, 16, 1),
(14, 2, 17, 1),
(14, 2, 18, 1),
(14, 2, 19, 1),
(14, 2, 20, 1),
(14, 2, 21, 1),
(14, 2, 22, 1),
(14, 2, 23, 1),
(14, 3, 0, 1),
(14, 3, 1, 1),
(14, 3, 2, 1),
(14, 3, 3, 1),
(14, 3, 4, 1),
(14, 3, 5, 1),
(14, 3, 6, 1),
(14, 3, 7, 1),
(14, 3, 8, 1),
(14, 3, 9, 1),
(14, 3, 10, 1),
(14, 3, 11, 1),
(14, 3, 12, 1),
(14, 3, 13, 1),
(14, 3, 14, 1),
(14, 3, 15, 1),
(14, 3, 16, 1),
(14, 3, 17, 1),
(14, 3, 18, 1),
(14, 3, 19, 1),
(14, 3, 20, 1),
(14, 3, 21, 1),
(14, 3, 22, 1),
(14, 3, 23, 1),
(14, 4, 0, 1),
(14, 4, 1, 1),
(14, 4, 2, 1),
(14, 4, 3, 1),
(14, 4, 4, 1),
(14, 4, 5, 1),
(14, 4, 6, 1),
(14, 4, 7, 1),
(14, 4, 8, 1),
(14, 4, 9, 1),
(14, 4, 10, 1),
(14, 4, 11, 1),
(14, 4, 12, 1),
(14, 4, 13, 1),
(14, 4, 14, 1),
(14, 4, 15, 1),
(14, 4, 16, 1),
(14, 4, 17, 1),
(14, 4, 18, 1),
(14, 4, 19, 1),
(14, 4, 20, 1),
(14, 4, 21, 1),
(14, 4, 22, 1),
(14, 4, 23, 1),
(14, 5, 0, 1),
(14, 5, 1, 1),
(14, 5, 2, 1),
(14, 5, 3, 1),
(14, 5, 4, 1),
(14, 5, 5, 1),
(14, 5, 6, 1),
(14, 5, 7, 1),
(14, 5, 8, 1),
(14, 5, 9, 1),
(14, 5, 10, 1),
(14, 5, 11, 1),
(14, 5, 12, 1),
(14, 5, 13, 1),
(14, 5, 14, 1),
(14, 5, 15, 1),
(14, 5, 16, 1),
(14, 5, 17, 1),
(14, 5, 18, 1),
(14, 5, 19, 1),
(14, 5, 20, 1),
(14, 5, 21, 1),
(14, 5, 22, 1),
(14, 5, 23, 1),
(14, 6, 0, 1),
(14, 6, 1, 1),
(14, 6, 2, 1),
(14, 6, 3, 1),
(14, 6, 4, 1),
(14, 6, 5, 1),
(14, 6, 6, 1),
(14, 6, 7, 1),
(14, 6, 8, 1),
(14, 6, 9, 1),
(14, 6, 10, 1),
(14, 6, 11, 1),
(14, 6, 12, 1),
(14, 6, 13, 1),
(14, 6, 14, 1),
(14, 6, 15, 1),
(14, 6, 16, 1),
(14, 6, 17, 1),
(14, 6, 18, 1),
(14, 6, 19, 1),
(14, 6, 20, 1),
(14, 6, 21, 1),
(14, 6, 22, 1),
(14, 6, 23, 1),
(14, 7, 0, 1),
(14, 7, 1, 1),
(14, 7, 2, 1),
(14, 7, 3, 1),
(14, 7, 4, 1),
(14, 7, 5, 1),
(14, 7, 6, 1),
(14, 7, 7, 1),
(14, 7, 8, 1),
(14, 7, 9, 1),
(14, 7, 10, 1),
(14, 7, 11, 1),
(14, 7, 12, 1),
(14, 7, 13, 1),
(14, 7, 14, 1),
(14, 7, 15, 1),
(14, 7, 16, 1),
(14, 7, 17, 1),
(14, 7, 18, 1),
(14, 7, 19, 1),
(14, 7, 20, 1),
(14, 7, 21, 1),
(14, 7, 22, 1),
(14, 7, 23, 1);

-- --------------------------------------------------------

--
-- Table structure for table `user_staff_picture`
--

CREATE TABLE `user_staff_picture` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `name` varchar(100) NOT NULL,
  `hero` int(11) NOT NULL,
  `modified` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=36 ;

--
-- Dumping data for table `user_staff_picture`
--

INSERT INTO `user_staff_picture` (`id`, `user_id`, `name`, `hero`, `modified`) VALUES
(14, 10, 'bar002.jpg', 1, '2014-03-05 15:08:42'),
(15, 29, 'waiter009.jpg', 1, '2014-03-05 15:09:14'),
(16, 11, 'waiter003.jpg', 1, '2014-03-05 15:14:27'),
(17, 14, 'waiter001.jpg', 1, '2014-03-05 15:14:52'),
(18, 22, 'GirlHospitality.jpg', 1, '2014-03-05 15:15:20'),
(19, 15, 'Chef001.jpg', 1, '2014-03-05 15:17:35'),
(20, 16, 'Man02.jpg', 1, '2014-03-05 15:18:16'),
(21, 27, 'Girl04.jpg', 1, '2014-03-05 15:18:44'),
(22, 24, 'FSecurity07.jpg', 1, '2014-03-05 15:19:10'),
(23, 28, 'FSecurity02.jpg', 1, '2014-03-05 15:19:34'),
(24, 30, 'Girl03.jpg', 1, '2014-03-05 15:20:03'),
(25, 25, 'Chef002.jpg', 1, '2014-03-05 15:20:28'),
(26, 18, 'Man01.jpg', 1, '2014-03-05 15:21:14'),
(27, 20, 'MSecurity02.jpg', 1, '2014-03-05 15:21:35'),
(28, 1, 'brad.jpg', 1, '2014-03-05 15:25:43'),
(29, 23, 'waiter010.jpg', 1, '2014-03-05 15:31:50'),
(30, 13, 'MSecurity04.jpg', 1, '2014-03-05 15:32:46'),
(31, 19, 'girl02.jpg', 1, '2014-03-05 15:34:19'),
(32, 26, 'girl01.jpg', 1, '2014-03-05 15:34:40'),
(33, 21, 'girl03.jpg', 1, '2014-03-05 15:34:58'),
(34, 12, 'man.jpg', 1, '2014-03-05 15:36:43'),
(35, 17, 'man01.jpg', 1, '2014-03-05 15:37:03');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
